// Code generated by protoc-gen-go.
// source: bid_request.proto
// DO NOT EDIT!

/*
Package qax is a generated protocol buffer package.

It is generated from these files:
	bid_request.proto

It has these top-level messages:
	FloorPrice
	Banner
	Video
	Impression
	Site
	Content
	Device
	Geo
	User
	BidRequest
*/
package qax

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type FloorPrice struct {
	Industry         *int64 `protobuf:"varint,1,opt,name=industry" json:"industry,omitempty"`
	Price            *int32 `protobuf:"varint,2,opt,name=price" json:"price,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *FloorPrice) Reset()         { *m = FloorPrice{} }
func (m *FloorPrice) String() string { return proto.CompactTextString(m) }
func (*FloorPrice) ProtoMessage()    {}

func (m *FloorPrice) GetIndustry() int64 {
	if m != nil && m.Industry != nil {
		return *m.Industry
	}
	return 0
}

func (m *FloorPrice) GetPrice() int32 {
	if m != nil && m.Price != nil {
		return *m.Price
	}
	return 0
}

type Banner struct {
	// Ad zone identifier.
	AdZoneId *int64 `protobuf:"varint,4,opt,name=ad_zone_id" json:"ad_zone_id,omitempty"`
	// This field is always 0 now.
	AdType           *int32 `protobuf:"varint,12,opt,name=ad_type" json:"ad_type,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Banner) Reset()         { *m = Banner{} }
func (m *Banner) String() string { return proto.CompactTextString(m) }
func (*Banner) ProtoMessage()    {}

func (m *Banner) GetAdZoneId() int64 {
	if m != nil && m.AdZoneId != nil {
		return *m.AdZoneId
	}
	return 0
}

func (m *Banner) GetAdType() int32 {
	if m != nil && m.AdType != nil {
		return *m.AdType
	}
	return 0
}

type Video struct {
	// The iqiyi-internal unique identifier of an ad zone.
	AdZoneId *int64 `protobuf:"varint,1,opt,name=ad_zone_id" json:"ad_zone_id,omitempty"`
	// Indicates whether the ad impression is linear or non-linear.
	// 1. Linear, example: pre-roll, mid-roll and post-roll.
	// 2. Non-linear, example: overlay, video link, pause, and tool bar.
	Linearity *int32 `protobuf:"varint,3,opt,name=linearity" json:"linearity,omitempty"`
	// The detail description of the type of an advertisement. The value and
	// corresponding meaning is as following: 1 pre-rool, 2 mid-roll, 3 post-roll,
	// 4 corner, 5 video link, 6 pause, 7 tool bar, 9 overlay.
	AdType *int32 `protobuf:"varint,13,opt,name=ad_type" json:"ad_type,omitempty"`
	// The minimum ad duration(in seconds) allowed on this video ad zone.
	Minduration *int32 `protobuf:"varint,4,opt,name=minduration" json:"minduration,omitempty"`
	// The maximum ad duration(in seconds) allowed on this video ad zone.
	Maxduration *int32 `protobuf:"varint,5,opt,name=maxduration" json:"maxduration,omitempty"`
	// Video bid response protocols.
	// 1 VAST 1.0
	// 2 VAST 2.0
	// 3 VAST 3.0
	// 4 VAST 1.0 Wrapper
	// 5 VAST 2.0 Wrapper
	// 6 VAST 3.0 Wrapper
	Protocol *int32 `protobuf:"varint,6,opt,name=protocol" json:"protocol,omitempty"`
	// Width of the player in pixels.
	W *int32 `protobuf:"varint,7,opt,name=w" json:"w,omitempty"`
	// Height of the player in pixels.
	H *int32 `protobuf:"varint,8,opt,name=h" json:"h,omitempty"`
	// A zero-based offset seconds from the start of a roll-type ad. The value
	// of this field is equal to M * 5 + N * 15, M = 0, 1 and N = 0, 1, 2, ...
	Startdelay *int32 `protobuf:"varint,9,opt,name=startdelay" json:"startdelay,omitempty"`
	// This field is meaningful only when this impression is linear. It indicates
	// whether "maxduration" is equal to the total duration this impression holds.
	// That's to say, the entire (pre/mid/post)-roll is available if it is true.
	IsEntireRoll *bool `protobuf:"varint,14,opt,name=is_entire_roll,def=0" json:"is_entire_roll,omitempty"`
	// A zero-based offset seconds from the start of the video.
	VideoStartdelay  *int32 `protobuf:"varint,15,opt,name=video_startdelay" json:"video_startdelay,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Video) Reset()         { *m = Video{} }
func (m *Video) String() string { return proto.CompactTextString(m) }
func (*Video) ProtoMessage()    {}

const Default_Video_IsEntireRoll bool = false

func (m *Video) GetAdZoneId() int64 {
	if m != nil && m.AdZoneId != nil {
		return *m.AdZoneId
	}
	return 0
}

func (m *Video) GetLinearity() int32 {
	if m != nil && m.Linearity != nil {
		return *m.Linearity
	}
	return 0
}

func (m *Video) GetAdType() int32 {
	if m != nil && m.AdType != nil {
		return *m.AdType
	}
	return 0
}

func (m *Video) GetMinduration() int32 {
	if m != nil && m.Minduration != nil {
		return *m.Minduration
	}
	return 0
}

func (m *Video) GetMaxduration() int32 {
	if m != nil && m.Maxduration != nil {
		return *m.Maxduration
	}
	return 0
}

func (m *Video) GetProtocol() int32 {
	if m != nil && m.Protocol != nil {
		return *m.Protocol
	}
	return 0
}

func (m *Video) GetW() int32 {
	if m != nil && m.W != nil {
		return *m.W
	}
	return 0
}

func (m *Video) GetH() int32 {
	if m != nil && m.H != nil {
		return *m.H
	}
	return 0
}

func (m *Video) GetStartdelay() int32 {
	if m != nil && m.Startdelay != nil {
		return *m.Startdelay
	}
	return 0
}

func (m *Video) GetIsEntireRoll() bool {
	if m != nil && m.IsEntireRoll != nil {
		return *m.IsEntireRoll
	}
	return Default_Video_IsEntireRoll
}

func (m *Video) GetVideoStartdelay() int32 {
	if m != nil && m.VideoStartdelay != nil {
		return *m.VideoStartdelay
	}
	return 0
}

type Impression struct {
	// The unique identifier of this impression within the context of the bid
	// request.
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// An impression is either banner or video, but not both.
	Banner *Banner `protobuf:"bytes,2,opt,name=banner" json:"banner,omitempty"`
	Video  *Video  `protobuf:"bytes,3,opt,name=video" json:"video,omitempty"`
	// The floor price list of this impression for all industries in
	// RMB(cent per CPM).
	FloorPrice []*FloorPrice `protobuf:"bytes,9,rep,name=floor_price" json:"floor_price,omitempty"`
	// Refer to this field to get the floor price if an industry is not found in
	// the "floor_price".
	Bidfloor *int32 `protobuf:"varint,4,opt,name=bidfloor,def=0" json:"bidfloor,omitempty"`
	// Campaign is a facility used by DSP to partition traffic.
	CampaignId *int32 `protobuf:"varint,5,opt,name=campaign_id" json:"campaign_id,omitempty"`
	// The advertisements with these tags will be blocked on this impression.
	// Ad tag can be understood as the product type in an ad.
	BlockedAdTag       []int32 `protobuf:"varint,6,rep,name=blocked_ad_tag" json:"blocked_ad_tag,omitempty"`
	BlockedAdAttribute []int32 `protobuf:"varint,7,rep,name=blocked_ad_attribute" json:"blocked_ad_attribute,omitempty"`
	// This impression is a pmp one if this field is set to be true.
	IsPmp *bool `protobuf:"varint,8,opt,name=is_pmp,def=0" json:"is_pmp,omitempty"`
	// Note, this field works only when the impression can place extended ads.
	// 0 means that there is no extended ad.
	// 1 means that extended ads must be placed in front.
	// 2 means that extended ads must be placed in back.
	// 3 means that extended ads can be placed in front or in back.
	ExtendedAdsPosition *int32                    `protobuf:"varint,10,opt,name=extended_ads_position,def=0" json:"extended_ads_position,omitempty"`
	XXX_extensions      map[int32]proto.Extension `json:"-"`
	XXX_unrecognized    []byte                    `json:"-"`
}

func (m *Impression) Reset()         { *m = Impression{} }
func (m *Impression) String() string { return proto.CompactTextString(m) }
func (*Impression) ProtoMessage()    {}

var extRange_Impression = []proto.ExtensionRange{
	{100, 536870911},
}

func (*Impression) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_Impression
}
func (m *Impression) ExtensionMap() map[int32]proto.Extension {
	if m.XXX_extensions == nil {
		m.XXX_extensions = make(map[int32]proto.Extension)
	}
	return m.XXX_extensions
}

const Default_Impression_Bidfloor int32 = 0
const Default_Impression_IsPmp bool = false
const Default_Impression_ExtendedAdsPosition int32 = 0

func (m *Impression) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Impression) GetBanner() *Banner {
	if m != nil {
		return m.Banner
	}
	return nil
}

func (m *Impression) GetVideo() *Video {
	if m != nil {
		return m.Video
	}
	return nil
}

func (m *Impression) GetFloorPrice() []*FloorPrice {
	if m != nil {
		return m.FloorPrice
	}
	return nil
}

func (m *Impression) GetBidfloor() int32 {
	if m != nil && m.Bidfloor != nil {
		return *m.Bidfloor
	}
	return Default_Impression_Bidfloor
}

func (m *Impression) GetCampaignId() int32 {
	if m != nil && m.CampaignId != nil {
		return *m.CampaignId
	}
	return 0
}

func (m *Impression) GetBlockedAdTag() []int32 {
	if m != nil {
		return m.BlockedAdTag
	}
	return nil
}

func (m *Impression) GetBlockedAdAttribute() []int32 {
	if m != nil {
		return m.BlockedAdAttribute
	}
	return nil
}

func (m *Impression) GetIsPmp() bool {
	if m != nil && m.IsPmp != nil {
		return *m.IsPmp
	}
	return Default_Impression_IsPmp
}

func (m *Impression) GetExtendedAdsPosition() int32 {
	if m != nil && m.ExtendedAdsPosition != nil {
		return *m.ExtendedAdsPosition
	}
	return Default_Impression_ExtendedAdsPosition
}

type Site struct {
	// The iqiyi-internal unique identifier of a site.
	Id               *int32   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Content          *Content `protobuf:"bytes,11,opt,name=content" json:"content,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Site) Reset()         { *m = Site{} }
func (m *Site) String() string { return proto.CompactTextString(m) }
func (*Site) ProtoMessage()    {}

func (m *Site) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Site) GetContent() *Content {
	if m != nil {
		return m.Content
	}
	return nil
}

type Content struct {
	Title *string `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	// Original URL of the content, for buy-side contextualization or review.
	Url *string `protobuf:"bytes,6,opt,name=url" json:"url,omitempty"`
	// The list of keywords describing the content.
	Keyword []string `protobuf:"bytes,9,rep,name=keyword" json:"keyword,omitempty"`
	// The duration of video content in seconds.
	Len *int32 `protobuf:"varint,16,opt,name=len" json:"len,omitempty"`
	// The iqiyi-internal unique identifier of an album.
	AlbumId          *int64 `protobuf:"varint,20,opt,name=album_id" json:"album_id,omitempty"`
	ChannelId        *int64 `protobuf:"varint,22,opt,name=channel_id" json:"channel_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Content) Reset()         { *m = Content{} }
func (m *Content) String() string { return proto.CompactTextString(m) }
func (*Content) ProtoMessage()    {}

func (m *Content) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *Content) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *Content) GetKeyword() []string {
	if m != nil {
		return m.Keyword
	}
	return nil
}

func (m *Content) GetLen() int32 {
	if m != nil && m.Len != nil {
		return *m.Len
	}
	return 0
}

func (m *Content) GetAlbumId() int64 {
	if m != nil && m.AlbumId != nil {
		return *m.AlbumId
	}
	return 0
}

func (m *Content) GetChannelId() int64 {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return 0
}

type Device struct {
	// Browser user agent string.
	Ua *string `protobuf:"bytes,2,opt,name=ua" json:"ua,omitempty"`
	// IPv4 address closest to device.
	Ip *string `protobuf:"bytes,3,opt,name=ip" json:"ip,omitempty"`
	// Geography information derived from IP address.
	Geo *Geo `protobuf:"bytes,4,opt,name=geo" json:"geo,omitempty"`
	// Return the detected connection type for the device.
	// 0 Unknown
	// 1 Ethernet
	// 2 Wifi
	// 3 Cellular data - 2G
	// 4 Cellular data - 3G
	// 5 Cellular data - 4G
	ConnectionType *int32 `protobuf:"varint,15,opt,name=connection_type" json:"connection_type,omitempty"`
	// The iqiyi-internal unique identifier of a platform.
	PlatformId *int32 `protobuf:"varint,18,opt,name=platform_id" json:"platform_id,omitempty"`
	// The features supported by the iqiyi ua which the current bid request is
	// from.
	Feature   []int64 `protobuf:"varint,19,rep,name=feature" json:"feature,omitempty"`
	AndroidId *string `protobuf:"bytes,20,opt,name=android_id" json:"android_id,omitempty"`
	// The model for the device.
	// example: iphone, vivoX7
	Model *string `protobuf:"bytes,21,opt,name=model" json:"model,omitempty"`
	// The operating system for the device.
	// example: ios, windows, android
	Os *string `protobuf:"bytes,22,opt,name=os" json:"os,omitempty"`
	// The operating system version for the device.
	// example: 5.1.1
	OsVersion *string `protobuf:"bytes,23,opt,name=os_version" json:"os_version,omitempty"`
	// The version of the APP from which the current request comes. (eg. "7.9.1")
	AppVersion       *string `protobuf:"bytes,24,opt,name=app_version" json:"app_version,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Device) Reset()         { *m = Device{} }
func (m *Device) String() string { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()    {}

func (m *Device) GetUa() string {
	if m != nil && m.Ua != nil {
		return *m.Ua
	}
	return ""
}

func (m *Device) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *Device) GetGeo() *Geo {
	if m != nil {
		return m.Geo
	}
	return nil
}

func (m *Device) GetConnectionType() int32 {
	if m != nil && m.ConnectionType != nil {
		return *m.ConnectionType
	}
	return 0
}

func (m *Device) GetPlatformId() int32 {
	if m != nil && m.PlatformId != nil {
		return *m.PlatformId
	}
	return 0
}

func (m *Device) GetFeature() []int64 {
	if m != nil {
		return m.Feature
	}
	return nil
}

func (m *Device) GetAndroidId() string {
	if m != nil && m.AndroidId != nil {
		return *m.AndroidId
	}
	return ""
}

func (m *Device) GetModel() string {
	if m != nil && m.Model != nil {
		return *m.Model
	}
	return ""
}

func (m *Device) GetOs() string {
	if m != nil && m.Os != nil {
		return *m.Os
	}
	return ""
}

func (m *Device) GetOsVersion() string {
	if m != nil && m.OsVersion != nil {
		return *m.OsVersion
	}
	return ""
}

func (m *Device) GetAppVersion() string {
	if m != nil && m.AppVersion != nil {
		return *m.AppVersion
	}
	return ""
}

type Geo struct {
	Country          *int32 `protobuf:"varint,3,opt,name=country" json:"country,omitempty"`
	Metro            *int32 `protobuf:"varint,5,opt,name=metro" json:"metro,omitempty"`
	City             *int32 `protobuf:"varint,6,opt,name=city" json:"city,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Geo) Reset()         { *m = Geo{} }
func (m *Geo) String() string { return proto.CompactTextString(m) }
func (*Geo) ProtoMessage()    {}

func (m *Geo) GetCountry() int32 {
	if m != nil && m.Country != nil {
		return *m.Country
	}
	return 0
}

func (m *Geo) GetMetro() int32 {
	if m != nil && m.Metro != nil {
		return *m.Metro
	}
	return 0
}

func (m *Geo) GetCity() int32 {
	if m != nil && m.City != nil {
		return *m.City
	}
	return 0
}

type User struct {
	// The unique identifier of this user on the exchange.
	// For IOS, this is IDFA or UDID. For Android, this is IMEI or MAC address.
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// This field will be set true if the privacy of the current user should be protected.
	IsPrivacyProtected *bool  `protobuf:"varint,2,opt,name=is_privacy_protected,def=0" json:"is_privacy_protected,omitempty"`
	XXX_unrecognized   []byte `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}

const Default_User_IsPrivacyProtected bool = false

func (m *User) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *User) GetIsPrivacyProtected() bool {
	if m != nil && m.IsPrivacyProtected != nil {
		return *m.IsPrivacyProtected
	}
	return Default_User_IsPrivacyProtected
}

type BidRequest struct {
	// Note, the value of this field is not unique.
	Id     *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	User   *User   `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
	Site   *Site   `protobuf:"bytes,3,opt,name=site" json:"site,omitempty"`
	Device *Device `protobuf:"bytes,5,opt,name=device" json:"device,omitempty"`
	// The list of impression objects. Multiple impression auctions may be
	// specified in a single bid request. At least one impression is required
	// for a valid bid request.
	Imp []*Impression `protobuf:"bytes,8,rep,name=imp" json:"imp,omitempty"`
	// If true, then this is a test request. Results will not be displayed to
	// users and DSP will not be billed for a response even if it wins the
	// auction. DSP should still do regular processing since the request may be
	// used to evaluate latencies or for other testing.
	IsTest *bool `protobuf:"varint,9,opt,name=is_test,def=0" json:"is_test,omitempty"`
	// If true, then this request is intended to measure network latency. Please
	// return an empty BidResponse with only processing_time_ms set as quickly as
	// possible without executing any bidding logic.
	IsPing           *bool                     `protobuf:"varint,10,opt,name=is_ping,def=0" json:"is_ping,omitempty"`
	XXX_extensions   map[int32]proto.Extension `json:"-"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *BidRequest) Reset()         { *m = BidRequest{} }
func (m *BidRequest) String() string { return proto.CompactTextString(m) }
func (*BidRequest) ProtoMessage()    {}

var extRange_BidRequest = []proto.ExtensionRange{
	{100, 536870911},
}

func (*BidRequest) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_BidRequest
}
func (m *BidRequest) ExtensionMap() map[int32]proto.Extension {
	if m.XXX_extensions == nil {
		m.XXX_extensions = make(map[int32]proto.Extension)
	}
	return m.XXX_extensions
}

const Default_BidRequest_IsTest bool = false
const Default_BidRequest_IsPing bool = false

func (m *BidRequest) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *BidRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *BidRequest) GetSite() *Site {
	if m != nil {
		return m.Site
	}
	return nil
}

func (m *BidRequest) GetDevice() *Device {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *BidRequest) GetImp() []*Impression {
	if m != nil {
		return m.Imp
	}
	return nil
}

func (m *BidRequest) GetIsTest() bool {
	if m != nil && m.IsTest != nil {
		return *m.IsTest
	}
	return Default_BidRequest_IsTest
}

func (m *BidRequest) GetIsPing() bool {
	if m != nil && m.IsPing != nil {
		return *m.IsPing
	}
	return Default_BidRequest_IsPing
}

func init() {
	proto.RegisterType((*FloorPrice)(nil), "qax.FloorPrice")
	proto.RegisterType((*Banner)(nil), "qax.Banner")
	proto.RegisterType((*Video)(nil), "qax.Video")
	proto.RegisterType((*Impression)(nil), "qax.Impression")
	proto.RegisterType((*Site)(nil), "qax.Site")
	proto.RegisterType((*Content)(nil), "qax.Content")
	proto.RegisterType((*Device)(nil), "qax.Device")
	proto.RegisterType((*Geo)(nil), "qax.Geo")
	proto.RegisterType((*User)(nil), "qax.User")
	proto.RegisterType((*BidRequest)(nil), "qax.BidRequest")
}
