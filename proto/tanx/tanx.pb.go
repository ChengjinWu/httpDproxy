// Code generated by protoc-gen-go.
// source: tanx.proto
// DO NOT EDIT!

/*
Package tanx is a generated protocol buffer package.

It is generated from these files:
	tanx.proto

It has these top-level messages:
	BidRequest
	BidResponse
	BidResult
	MobileCreative
*/
package tanx

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 已经废弃，请忽略
type BidRequest_AdzInfo_Location int32

const (
	BidRequest_AdzInfo_NA         BidRequest_AdzInfo_Location = 0
	BidRequest_AdzInfo_FIRST_VIEW BidRequest_AdzInfo_Location = 1
	BidRequest_AdzInfo_OTHER_VIEW BidRequest_AdzInfo_Location = 2
)

var BidRequest_AdzInfo_Location_name = map[int32]string{
	0: "NA",
	1: "FIRST_VIEW",
	2: "OTHER_VIEW",
}
var BidRequest_AdzInfo_Location_value = map[string]int32{
	"NA":         0,
	"FIRST_VIEW": 1,
	"OTHER_VIEW": 2,
}

func (x BidRequest_AdzInfo_Location) Enum() *BidRequest_AdzInfo_Location {
	p := new(BidRequest_AdzInfo_Location)
	*p = x
	return p
}
func (x BidRequest_AdzInfo_Location) String() string {
	return proto.EnumName(BidRequest_AdzInfo_Location_name, int32(x))
}
func (x *BidRequest_AdzInfo_Location) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_AdzInfo_Location_value, data, "BidRequest_AdzInfo_Location")
	if err != nil {
		return err
	}
	*x = BidRequest_AdzInfo_Location(value)
	return nil
}

// 推广位在页面所在的屏数
// 0: 未识别; 1-5: 第1-5屏; 6: 第六屏及以外
type BidRequest_AdzInfo_ViewScreen int32

const (
	BidRequest_AdzInfo_SCREEN_NA     BidRequest_AdzInfo_ViewScreen = 0
	BidRequest_AdzInfo_SCREEN_FIRST  BidRequest_AdzInfo_ViewScreen = 1
	BidRequest_AdzInfo_SCREEN_SECOND BidRequest_AdzInfo_ViewScreen = 2
	BidRequest_AdzInfo_SCREEN_THIRD  BidRequest_AdzInfo_ViewScreen = 3
	BidRequest_AdzInfo_SCREEN_FOURTH BidRequest_AdzInfo_ViewScreen = 4
	BidRequest_AdzInfo_SCREEN_FIFTH  BidRequest_AdzInfo_ViewScreen = 5
	BidRequest_AdzInfo_SCREEN_OTHER  BidRequest_AdzInfo_ViewScreen = 6
)

var BidRequest_AdzInfo_ViewScreen_name = map[int32]string{
	0: "SCREEN_NA",
	1: "SCREEN_FIRST",
	2: "SCREEN_SECOND",
	3: "SCREEN_THIRD",
	4: "SCREEN_FOURTH",
	5: "SCREEN_FIFTH",
	6: "SCREEN_OTHER",
}
var BidRequest_AdzInfo_ViewScreen_value = map[string]int32{
	"SCREEN_NA":     0,
	"SCREEN_FIRST":  1,
	"SCREEN_SECOND": 2,
	"SCREEN_THIRD":  3,
	"SCREEN_FOURTH": 4,
	"SCREEN_FIFTH":  5,
	"SCREEN_OTHER":  6,
}

func (x BidRequest_AdzInfo_ViewScreen) Enum() *BidRequest_AdzInfo_ViewScreen {
	p := new(BidRequest_AdzInfo_ViewScreen)
	*p = x
	return p
}
func (x BidRequest_AdzInfo_ViewScreen) String() string {
	return proto.EnumName(BidRequest_AdzInfo_ViewScreen_name, int32(x))
}
func (x *BidRequest_AdzInfo_ViewScreen) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_AdzInfo_ViewScreen_value, data, "BidRequest_AdzInfo_ViewScreen")
	if err != nil {
		return err
	}
	*x = BidRequest_AdzInfo_ViewScreen(value)
	return nil
}

type BidRequest_AdzInfo_Deal_DealType int32

const (
	BidRequest_AdzInfo_Deal_UNKNOWN_DEAL_TYPE BidRequest_AdzInfo_Deal_DealType = 0
	BidRequest_AdzInfo_Deal_PRIVATE_AUCTION   BidRequest_AdzInfo_Deal_DealType = 1
	BidRequest_AdzInfo_Deal_PREFERRED_DEAL    BidRequest_AdzInfo_Deal_DealType = 2
	BidRequest_AdzInfo_Deal_DIRECT_BUY        BidRequest_AdzInfo_Deal_DealType = 3
)

var BidRequest_AdzInfo_Deal_DealType_name = map[int32]string{
	0: "UNKNOWN_DEAL_TYPE",
	1: "PRIVATE_AUCTION",
	2: "PREFERRED_DEAL",
	3: "DIRECT_BUY",
}
var BidRequest_AdzInfo_Deal_DealType_value = map[string]int32{
	"UNKNOWN_DEAL_TYPE": 0,
	"PRIVATE_AUCTION":   1,
	"PREFERRED_DEAL":    2,
	"DIRECT_BUY":        3,
}

func (x BidRequest_AdzInfo_Deal_DealType) Enum() *BidRequest_AdzInfo_Deal_DealType {
	p := new(BidRequest_AdzInfo_Deal_DealType)
	*p = x
	return p
}
func (x BidRequest_AdzInfo_Deal_DealType) String() string {
	return proto.EnumName(BidRequest_AdzInfo_Deal_DealType_name, int32(x))
}
func (x *BidRequest_AdzInfo_Deal_DealType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_AdzInfo_Deal_DealType_value, data, "BidRequest_AdzInfo_Deal_DealType")
	if err != nil {
		return err
	}
	*x = BidRequest_AdzInfo_Deal_DealType(value)
	return nil
}

// 横竖屏
// 0: 未知; 1: 表示竖屏; 2: 表示横屏, 缺省是未知
type BidRequest_Mobile_Device_ScreenOrientation int32

const (
	BidRequest_Mobile_Device_SCREEN_ORIENTATION_UNKNOWN   BidRequest_Mobile_Device_ScreenOrientation = 0
	BidRequest_Mobile_Device_SCREEN_ORIENTATION_PORTRAIT  BidRequest_Mobile_Device_ScreenOrientation = 1
	BidRequest_Mobile_Device_SCREEN_ORIENTATION_LANDSCAPE BidRequest_Mobile_Device_ScreenOrientation = 2
)

var BidRequest_Mobile_Device_ScreenOrientation_name = map[int32]string{
	0: "SCREEN_ORIENTATION_UNKNOWN",
	1: "SCREEN_ORIENTATION_PORTRAIT",
	2: "SCREEN_ORIENTATION_LANDSCAPE",
}
var BidRequest_Mobile_Device_ScreenOrientation_value = map[string]int32{
	"SCREEN_ORIENTATION_UNKNOWN":   0,
	"SCREEN_ORIENTATION_PORTRAIT":  1,
	"SCREEN_ORIENTATION_LANDSCAPE": 2,
}

func (x BidRequest_Mobile_Device_ScreenOrientation) Enum() *BidRequest_Mobile_Device_ScreenOrientation {
	p := new(BidRequest_Mobile_Device_ScreenOrientation)
	*p = x
	return p
}
func (x BidRequest_Mobile_Device_ScreenOrientation) String() string {
	return proto.EnumName(BidRequest_Mobile_Device_ScreenOrientation_name, int32(x))
}
func (x *BidRequest_Mobile_Device_ScreenOrientation) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_Mobile_Device_ScreenOrientation_value, data, "BidRequest_Mobile_Device_ScreenOrientation")
	if err != nil {
		return err
	}
	*x = BidRequest_Mobile_Device_ScreenOrientation(value)
	return nil
}

// 预留字段, 暂时忽略
type BidRequest_Video_VideoFormat int32

const (
	// HTML5 VAST创意包括mp4和webm媒体
	BidRequest_Video_VIDEO_FLASH BidRequest_Video_VideoFormat = 0
	BidRequest_Video_VIDEO_HTML5 BidRequest_Video_VideoFormat = 1
)

var BidRequest_Video_VideoFormat_name = map[int32]string{
	0: "VIDEO_FLASH",
	1: "VIDEO_HTML5",
}
var BidRequest_Video_VideoFormat_value = map[string]int32{
	"VIDEO_FLASH": 0,
	"VIDEO_HTML5": 1,
}

func (x BidRequest_Video_VideoFormat) Enum() *BidRequest_Video_VideoFormat {
	p := new(BidRequest_Video_VideoFormat)
	*p = x
	return p
}
func (x BidRequest_Video_VideoFormat) String() string {
	return proto.EnumName(BidRequest_Video_VideoFormat_name, int32(x))
}
func (x *BidRequest_Video_VideoFormat) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_Video_VideoFormat_value, data, "BidRequest_Video_VideoFormat")
	if err != nil {
		return err
	}
	*x = BidRequest_Video_VideoFormat(value)
	return nil
}

type BidRequest struct {
	// 当前协议版本号，目前为3
	Version *int32 `protobuf:"varint,1,req,name=version" json:"version,omitempty"`
	// Tanx生成的唯一的竞价ID，32字节的字符串
	Bid *string `protobuf:"bytes,2,req,name=bid" json:"bid,omitempty"`
	// 如果不为0，那么这是一个测试请求。
	// DSP需要返回一个正常填写的应答
	// Tanx不会展现给用户，且不会对该次请求计费
	IsTest *uint32 `protobuf:"varint,11,opt,name=is_test,def=0" json:"is_test,omitempty"`
	// 如果不为0，那么这是一个ping请求
	// DSP需要返回一个空的应答
	IsPing *uint32 `protobuf:"varint,12,opt,name=is_ping,def=0" json:"is_ping,omitempty"`
	// 用户身份标识
	// 如果进行cookie托管，且hosted_match_data存在，则该值不会被设置
	Tid *string `protobuf:"bytes,3,opt,name=tid" json:"tid,omitempty"`
	// 用户的IP地址， ipv4
	// 例如：192.168.1.1
	Ip *string `protobuf:"bytes,4,opt,name=ip" json:"ip,omitempty"`
	// 用户的浏览器类型，即HTTP请求头部的User-Agent
	UserAgent *string `protobuf:"bytes,5,opt,name=user_agent" json:"user_agent,omitempty"`
	// 用户所处时区的分钟偏移量
	// 例如：如果是东八区，则 timezone_offset = 60 * 8 = 480.
	TimezoneOffset *int32 `protobuf:"varint,13,opt,name=timezone_offset" json:"timezone_offset,omitempty"`
	// 用户垂直类别
	// 预留字段，暂无实际值
	UserVertical []int32 `protobuf:"varint,14,rep,name=user_vertical" json:"user_vertical,omitempty"`
	// tid 字段的版本号
	TidVersion *uint32 `protobuf:"varint,19,opt,name=tid_version" json:"tid_version,omitempty"`
	// 媒体禁止的目标跳转url
	// 所有条目的总长度不超过200个字符
	// 该字段可能不是全量数据，
	// 建议使用离线数据获取媒体设置的全量数据
	ExcludedClickThroughUrl []string `protobuf:"bytes,6,rep,name=excluded_click_through_url" json:"excluded_click_through_url,omitempty"`
	// 推广位所在的页面url
	Url *string `protobuf:"bytes,7,opt,name=url" json:"url,omitempty"`
	// 推广位所在网站的分类
	// 参见数据字典 Tanx-dict-site-category.txt
	Category *uint32 `protobuf:"varint,8,opt,name=category" json:"category,omitempty"`
	// 流量所属来源，预留字段，目前为0
	// adx type 0表示SSP流量， 1表示google流量
	AdxType *uint32 `protobuf:"varint,9,opt,name=adx_type,def=0" json:"adx_type,omitempty"`
	// 预留字段，暂无实际值
	AnonymousId *string `protobuf:"bytes,15,opt,name=anonymous_id" json:"anonymous_id,omitempty"`
	// 预留字段，暂无实际值
	DetectedLanguage *string `protobuf:"bytes,16,opt,name=detected_language" json:"detected_language,omitempty"`
	// category 字段版本号，目前为1
	CategoryVersion *int32                `protobuf:"varint,18,opt,name=category_version" json:"category_version,omitempty"`
	Content         *BidRequest_Content   `protobuf:"bytes,32,opt,name=content" json:"content,omitempty"`
	Adzinfo         []*BidRequest_AdzInfo `protobuf:"bytes,10,rep,name=adzinfo" json:"adzinfo,omitempty"`
	// 媒体禁止的敏感类目
	// 参见数据字典 Tanx-dict-sensitive-category.txt
	// 该字段可能不是全量数据，
	// 建议使用离线数据获取媒体设置的全量数据
	ExcludedSensitiveCategory []int32 `protobuf:"varint,17,rep,name=excluded_sensitive_category" json:"excluded_sensitive_category,omitempty"`
	// 媒体禁止的广告行业类目
	// 参见数据字典 Tanx-dict-ad-category-version-2.xlsx
	// 该字段可能不是全量数据，
	// 建议使用离线数据获取媒体设置的全量数据
	ExcludedAdCategory []int32 `protobuf:"varint,20,rep,name=excluded_ad_category" json:"excluded_ad_category,omitempty"`
	// DSP进行Cookie托管的用户标识id
	// 对应cookie mapping里的tanx_hm输入参数
	// 如果hosted_match_data存在，则不设置tid
	HostedMatchData *string                     `protobuf:"bytes,21,opt,name=hosted_match_data" json:"hosted_match_data,omitempty"`
	UserAttribute   []*BidRequest_UserAttribute `protobuf:"bytes,22,rep,name=user_attribute" json:"user_attribute,omitempty"`
	// 标识一个页面pv
	// 对于同一个页面的单个PV，Tanx会生成一个相同且唯一的page_session_id
	PageSessionId *string                   `protobuf:"bytes,23,opt,name=page_session_id" json:"page_session_id,omitempty"`
	PrivateInfo   []*BidRequest_PrivateInfo `protobuf:"bytes,24,rep,name=private_info" json:"private_info,omitempty"`
	// 若本字段被设置，则本次请求，来自移动设备。
	Mobile            *BidRequest_Mobile            `protobuf:"bytes,25,opt,name=mobile" json:"mobile,omitempty"`
	ContentCategories []*BidRequest_ContentCategory `protobuf:"bytes,26,rep,name=content_categories" json:"content_categories,omitempty"`
	// 视频信息相关参数
	Video *BidRequest_Video `protobuf:"bytes,27,opt,name=video" json:"video,omitempty"`
	// 阿里跨屏id
	Aid *string `protobuf:"bytes,28,opt,name=aid" json:"aid,omitempty"`
	// 所有该dsp参与的交易
	Deals         []*BidRequest_Deal          `protobuf:"bytes,29,rep,name=deals" json:"deals,omitempty"`
	CrowdCategory []*BidRequest_CrowdCategory `protobuf:"bytes,30,rep,name=crowd_category" json:"crowd_category,omitempty"`
	// 本次竞价可能会被忽略
	IsPredictedToBeIgnored *bool `protobuf:"varint,31,opt,name=is_predicted_to_be_ignored,def=0" json:"is_predicted_to_be_ignored,omitempty"`
	// 是否必须返回https广告
	HttpsRequired    *bool  `protobuf:"varint,33,opt,name=https_required,def=0" json:"https_required,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BidRequest) Reset()         { *m = BidRequest{} }
func (m *BidRequest) String() string { return proto.CompactTextString(m) }
func (*BidRequest) ProtoMessage()    {}

const Default_BidRequest_IsTest uint32 = 0
const Default_BidRequest_IsPing uint32 = 0
const Default_BidRequest_AdxType uint32 = 0
const Default_BidRequest_IsPredictedToBeIgnored bool = false
const Default_BidRequest_HttpsRequired bool = false

func (m *BidRequest) GetVersion() int32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *BidRequest) GetBid() string {
	if m != nil && m.Bid != nil {
		return *m.Bid
	}
	return ""
}

func (m *BidRequest) GetIsTest() uint32 {
	if m != nil && m.IsTest != nil {
		return *m.IsTest
	}
	return Default_BidRequest_IsTest
}

func (m *BidRequest) GetIsPing() uint32 {
	if m != nil && m.IsPing != nil {
		return *m.IsPing
	}
	return Default_BidRequest_IsPing
}

func (m *BidRequest) GetTid() string {
	if m != nil && m.Tid != nil {
		return *m.Tid
	}
	return ""
}

func (m *BidRequest) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *BidRequest) GetUserAgent() string {
	if m != nil && m.UserAgent != nil {
		return *m.UserAgent
	}
	return ""
}

func (m *BidRequest) GetTimezoneOffset() int32 {
	if m != nil && m.TimezoneOffset != nil {
		return *m.TimezoneOffset
	}
	return 0
}

func (m *BidRequest) GetUserVertical() []int32 {
	if m != nil {
		return m.UserVertical
	}
	return nil
}

func (m *BidRequest) GetTidVersion() uint32 {
	if m != nil && m.TidVersion != nil {
		return *m.TidVersion
	}
	return 0
}

func (m *BidRequest) GetExcludedClickThroughUrl() []string {
	if m != nil {
		return m.ExcludedClickThroughUrl
	}
	return nil
}

func (m *BidRequest) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *BidRequest) GetCategory() uint32 {
	if m != nil && m.Category != nil {
		return *m.Category
	}
	return 0
}

func (m *BidRequest) GetAdxType() uint32 {
	if m != nil && m.AdxType != nil {
		return *m.AdxType
	}
	return Default_BidRequest_AdxType
}

func (m *BidRequest) GetAnonymousId() string {
	if m != nil && m.AnonymousId != nil {
		return *m.AnonymousId
	}
	return ""
}

func (m *BidRequest) GetDetectedLanguage() string {
	if m != nil && m.DetectedLanguage != nil {
		return *m.DetectedLanguage
	}
	return ""
}

func (m *BidRequest) GetCategoryVersion() int32 {
	if m != nil && m.CategoryVersion != nil {
		return *m.CategoryVersion
	}
	return 0
}

func (m *BidRequest) GetContent() *BidRequest_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *BidRequest) GetAdzinfo() []*BidRequest_AdzInfo {
	if m != nil {
		return m.Adzinfo
	}
	return nil
}

func (m *BidRequest) GetExcludedSensitiveCategory() []int32 {
	if m != nil {
		return m.ExcludedSensitiveCategory
	}
	return nil
}

func (m *BidRequest) GetExcludedAdCategory() []int32 {
	if m != nil {
		return m.ExcludedAdCategory
	}
	return nil
}

func (m *BidRequest) GetHostedMatchData() string {
	if m != nil && m.HostedMatchData != nil {
		return *m.HostedMatchData
	}
	return ""
}

func (m *BidRequest) GetUserAttribute() []*BidRequest_UserAttribute {
	if m != nil {
		return m.UserAttribute
	}
	return nil
}

func (m *BidRequest) GetPageSessionId() string {
	if m != nil && m.PageSessionId != nil {
		return *m.PageSessionId
	}
	return ""
}

func (m *BidRequest) GetPrivateInfo() []*BidRequest_PrivateInfo {
	if m != nil {
		return m.PrivateInfo
	}
	return nil
}

func (m *BidRequest) GetMobile() *BidRequest_Mobile {
	if m != nil {
		return m.Mobile
	}
	return nil
}

func (m *BidRequest) GetContentCategories() []*BidRequest_ContentCategory {
	if m != nil {
		return m.ContentCategories
	}
	return nil
}

func (m *BidRequest) GetVideo() *BidRequest_Video {
	if m != nil {
		return m.Video
	}
	return nil
}

func (m *BidRequest) GetAid() string {
	if m != nil && m.Aid != nil {
		return *m.Aid
	}
	return ""
}

func (m *BidRequest) GetDeals() []*BidRequest_Deal {
	if m != nil {
		return m.Deals
	}
	return nil
}

func (m *BidRequest) GetCrowdCategory() []*BidRequest_CrowdCategory {
	if m != nil {
		return m.CrowdCategory
	}
	return nil
}

func (m *BidRequest) GetIsPredictedToBeIgnored() bool {
	if m != nil && m.IsPredictedToBeIgnored != nil {
		return *m.IsPredictedToBeIgnored
	}
	return Default_BidRequest_IsPredictedToBeIgnored
}

func (m *BidRequest) GetHttpsRequired() bool {
	if m != nil && m.HttpsRequired != nil {
		return *m.HttpsRequired
	}
	return Default_BidRequest_HttpsRequired
}

// ------------------------------------------- 网页内容信息
// 统一为string utf-8
type BidRequest_Content struct {
	// 内容标题
	Title *string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	// 视频时长，单位:秒
	Duration *int32 `protobuf:"varint,2,opt,name=duration" json:"duration,omitempty"`
	// 标签
	Keywords         []string `protobuf:"bytes,3,rep,name=keywords" json:"keywords,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *BidRequest_Content) Reset()         { *m = BidRequest_Content{} }
func (m *BidRequest_Content) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Content) ProtoMessage()    {}

func (m *BidRequest_Content) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *BidRequest_Content) GetDuration() int32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *BidRequest_Content) GetKeywords() []string {
	if m != nil {
		return m.Keywords
	}
	return nil
}

// ------------------------------------------- 推广位基础信息
type BidRequest_AdzInfo struct {
	// 推广位编号，目前固定为0
	Id *uint32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	// 推广位的唯一标识
	Pid *string `protobuf:"bytes,2,req,name=pid" json:"pid,omitempty"`
	// 媒体的唯一标识, 和创意审核状态查询api配合使用
	PublisherId *string `protobuf:"bytes,11,opt,name=publisher_id" json:"publisher_id,omitempty"`
	// 推广位的尺寸: 宽 x 高
	// 例如：300x250
	Size *string `protobuf:"bytes,3,opt,name=size" json:"size,omitempty"`
	// 推广位希望从单个DSP获取的竞价广告数量
	// DSP可以提供小于等于此值的广告个数
	// 多于AdzInfo.ad_bid_count数值的广告，将被截断而不参与竞价
	AdBidCount *uint32 `protobuf:"varint,4,opt,name=ad_bid_count,def=2" json:"ad_bid_count,omitempty"`
	// 推广位的展现形式
	// 参见数据字典 Tanx-dict-view-type.txt
	ViewType []uint32 `protobuf:"varint,5,rep,name=view_type" json:"view_type,omitempty"`
	// 媒体禁止的创意类型
	// 参见数据字典 Tanx-dict-creative-type.txt
	// 该字段可能不是全量数据，
	// 建议使用离线数据获取媒体设置的全量数据
	ExcludedFilter []uint32 `protobuf:"varint,6,rep,name=excluded_filter" json:"excluded_filter,omitempty"`
	// 最低竞标价格，货币单位为人民币，数值含义为分/千次展现
	MinCpmPrice *uint32                        `protobuf:"varint,7,opt,name=min_cpm_price" json:"min_cpm_price,omitempty"`
	AdzLocation *BidRequest_AdzInfo_Location   `protobuf:"varint,8,opt,name=adz_location,enum=tanx.BidRequest_AdzInfo_Location,def=0" json:"adz_location,omitempty"`
	ViewScreen  *BidRequest_AdzInfo_ViewScreen `protobuf:"varint,9,opt,name=view_screen,enum=tanx.BidRequest_AdzInfo_ViewScreen,def=0" json:"view_screen,omitempty"`
	// 推广位在整个页面的渲染顺序，从0开始递增
	PageSessionAdIdx *uint32 `protobuf:"varint,10,opt,name=page_session_ad_idx" json:"page_session_ad_idx,omitempty"`
	// 推广位支持的apiFramework
	// 1 VPAID 1.0; 2 VPAID 2.0; 3 MRAID-1; 4 ORMMA; 5 MRAID-2
	Api        []uint32                        `protobuf:"varint,12,rep,name=api" json:"api,omitempty"`
	BuyerRules []*BidRequest_AdzInfo_BuyerRule `protobuf:"bytes,13,rep,name=buyer_rules" json:"buyer_rules,omitempty"`
	// 媒体允许的最低创意等级,低于此等级不可投放，1为最高等级
	AllowedCreativeLevel *uint32 `protobuf:"varint,14,opt,name=allowed_creative_level" json:"allowed_creative_level,omitempty"`
	// 媒体要求的过滤规则id，多值
	PublisherFilterId []string `protobuf:"bytes,15,rep,name=publisher_filter_id" json:"publisher_filter_id,omitempty"`
	// 是否可自动扩展
	AutoExpandable *bool `protobuf:"varint,16,opt,name=auto_expandable,def=0" json:"auto_expandable,omitempty"`
	// 是否可触发扩展
	TriggerExpandable *bool `protobuf:"varint,17,opt,name=trigger_expandable,def=0" json:"trigger_expandable,omitempty"`
	// 是否对先后发生的多次展现重复计费
	ImpressionRepeatable *bool                     `protobuf:"varint,18,opt,name=impression_repeatable,def=0" json:"impression_repeatable,omitempty"`
	Video                *BidRequest_AdzInfo_Video `protobuf:"bytes,19,opt,name=video" json:"video,omitempty"`
	// 预投放日期, 仅开屏使用，格式:"20160602"
	CampaignDate *string `protobuf:"bytes,20,opt,name=campaign_date" json:"campaign_date,omitempty"`
	// 所有该adzone参与的交易
	Deals            []*BidRequest_AdzInfo_Deal `protobuf:"bytes,21,rep,name=deals" json:"deals,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *BidRequest_AdzInfo) Reset()         { *m = BidRequest_AdzInfo{} }
func (m *BidRequest_AdzInfo) String() string { return proto.CompactTextString(m) }
func (*BidRequest_AdzInfo) ProtoMessage()    {}

const Default_BidRequest_AdzInfo_AdBidCount uint32 = 2
const Default_BidRequest_AdzInfo_AdzLocation BidRequest_AdzInfo_Location = BidRequest_AdzInfo_NA
const Default_BidRequest_AdzInfo_ViewScreen BidRequest_AdzInfo_ViewScreen = BidRequest_AdzInfo_SCREEN_NA
const Default_BidRequest_AdzInfo_AutoExpandable bool = false
const Default_BidRequest_AdzInfo_TriggerExpandable bool = false
const Default_BidRequest_AdzInfo_ImpressionRepeatable bool = false

func (m *BidRequest_AdzInfo) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *BidRequest_AdzInfo) GetPid() string {
	if m != nil && m.Pid != nil {
		return *m.Pid
	}
	return ""
}

func (m *BidRequest_AdzInfo) GetPublisherId() string {
	if m != nil && m.PublisherId != nil {
		return *m.PublisherId
	}
	return ""
}

func (m *BidRequest_AdzInfo) GetSize() string {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return ""
}

func (m *BidRequest_AdzInfo) GetAdBidCount() uint32 {
	if m != nil && m.AdBidCount != nil {
		return *m.AdBidCount
	}
	return Default_BidRequest_AdzInfo_AdBidCount
}

func (m *BidRequest_AdzInfo) GetViewType() []uint32 {
	if m != nil {
		return m.ViewType
	}
	return nil
}

func (m *BidRequest_AdzInfo) GetExcludedFilter() []uint32 {
	if m != nil {
		return m.ExcludedFilter
	}
	return nil
}

func (m *BidRequest_AdzInfo) GetMinCpmPrice() uint32 {
	if m != nil && m.MinCpmPrice != nil {
		return *m.MinCpmPrice
	}
	return 0
}

func (m *BidRequest_AdzInfo) GetAdzLocation() BidRequest_AdzInfo_Location {
	if m != nil && m.AdzLocation != nil {
		return *m.AdzLocation
	}
	return Default_BidRequest_AdzInfo_AdzLocation
}

func (m *BidRequest_AdzInfo) GetViewScreen() BidRequest_AdzInfo_ViewScreen {
	if m != nil && m.ViewScreen != nil {
		return *m.ViewScreen
	}
	return Default_BidRequest_AdzInfo_ViewScreen
}

func (m *BidRequest_AdzInfo) GetPageSessionAdIdx() uint32 {
	if m != nil && m.PageSessionAdIdx != nil {
		return *m.PageSessionAdIdx
	}
	return 0
}

func (m *BidRequest_AdzInfo) GetApi() []uint32 {
	if m != nil {
		return m.Api
	}
	return nil
}

func (m *BidRequest_AdzInfo) GetBuyerRules() []*BidRequest_AdzInfo_BuyerRule {
	if m != nil {
		return m.BuyerRules
	}
	return nil
}

func (m *BidRequest_AdzInfo) GetAllowedCreativeLevel() uint32 {
	if m != nil && m.AllowedCreativeLevel != nil {
		return *m.AllowedCreativeLevel
	}
	return 0
}

func (m *BidRequest_AdzInfo) GetPublisherFilterId() []string {
	if m != nil {
		return m.PublisherFilterId
	}
	return nil
}

func (m *BidRequest_AdzInfo) GetAutoExpandable() bool {
	if m != nil && m.AutoExpandable != nil {
		return *m.AutoExpandable
	}
	return Default_BidRequest_AdzInfo_AutoExpandable
}

func (m *BidRequest_AdzInfo) GetTriggerExpandable() bool {
	if m != nil && m.TriggerExpandable != nil {
		return *m.TriggerExpandable
	}
	return Default_BidRequest_AdzInfo_TriggerExpandable
}

func (m *BidRequest_AdzInfo) GetImpressionRepeatable() bool {
	if m != nil && m.ImpressionRepeatable != nil {
		return *m.ImpressionRepeatable
	}
	return Default_BidRequest_AdzInfo_ImpressionRepeatable
}

func (m *BidRequest_AdzInfo) GetVideo() *BidRequest_AdzInfo_Video {
	if m != nil {
		return m.Video
	}
	return nil
}

func (m *BidRequest_AdzInfo) GetCampaignDate() string {
	if m != nil && m.CampaignDate != nil {
		return *m.CampaignDate
	}
	return ""
}

func (m *BidRequest_AdzInfo) GetDeals() []*BidRequest_AdzInfo_Deal {
	if m != nil {
		return m.Deals
	}
	return nil
}

// 区分广告主设置的低价
type BidRequest_AdzInfo_BuyerRule struct {
	// 广告主id
	AdvertiserIds *uint32 `protobuf:"varint,1,opt,name=advertiser_ids" json:"advertiser_ids,omitempty"`
	// 广告主底价，如果返回广告是属于该广告主的，必须高于这个价格
	MinCpmPrice      *uint32 `protobuf:"varint,2,opt,name=min_cpm_price" json:"min_cpm_price,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BidRequest_AdzInfo_BuyerRule) Reset()         { *m = BidRequest_AdzInfo_BuyerRule{} }
func (m *BidRequest_AdzInfo_BuyerRule) String() string { return proto.CompactTextString(m) }
func (*BidRequest_AdzInfo_BuyerRule) ProtoMessage()    {}

func (m *BidRequest_AdzInfo_BuyerRule) GetAdvertiserIds() uint32 {
	if m != nil && m.AdvertiserIds != nil {
		return *m.AdvertiserIds
	}
	return 0
}

func (m *BidRequest_AdzInfo_BuyerRule) GetMinCpmPrice() uint32 {
	if m != nil && m.MinCpmPrice != nil {
		return *m.MinCpmPrice
	}
	return 0
}

// 视频资源位信息
type BidRequest_AdzInfo_Video struct {
	// 贴片位置相对于所在视频的起始时间，0 表示前贴片, -1 表示后贴片，大于0的值表示中插
	VideoadStartDelay *int32 `protobuf:"varint,1,opt,name=videoad_start_delay" json:"videoad_start_delay,omitempty"`
	// 上述位置可能包含多个贴片，表示本贴片在上述集合中相对起始位置，单位毫秒
	VideoadSectionStartDelay *int32 `protobuf:"varint,2,opt,name=videoad_section_start_delay" json:"videoad_section_start_delay,omitempty"`
	// 贴片最小播放时间长度,视频创意播放时间不可小于该值，单位毫秒
	MinAdDuration *int32 `protobuf:"varint,3,opt,name=min_ad_duration" json:"min_ad_duration,omitempty"`
	// 贴片最大播放时间长度，单位毫秒
	MaxAdDuration    *int32 `protobuf:"varint,4,opt,name=max_ad_duration" json:"max_ad_duration,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BidRequest_AdzInfo_Video) Reset()         { *m = BidRequest_AdzInfo_Video{} }
func (m *BidRequest_AdzInfo_Video) String() string { return proto.CompactTextString(m) }
func (*BidRequest_AdzInfo_Video) ProtoMessage()    {}

func (m *BidRequest_AdzInfo_Video) GetVideoadStartDelay() int32 {
	if m != nil && m.VideoadStartDelay != nil {
		return *m.VideoadStartDelay
	}
	return 0
}

func (m *BidRequest_AdzInfo_Video) GetVideoadSectionStartDelay() int32 {
	if m != nil && m.VideoadSectionStartDelay != nil {
		return *m.VideoadSectionStartDelay
	}
	return 0
}

func (m *BidRequest_AdzInfo_Video) GetMinAdDuration() int32 {
	if m != nil && m.MinAdDuration != nil {
		return *m.MinAdDuration
	}
	return 0
}

func (m *BidRequest_AdzInfo_Video) GetMaxAdDuration() int32 {
	if m != nil && m.MaxAdDuration != nil {
		return *m.MaxAdDuration
	}
	return 0
}

type BidRequest_AdzInfo_Deal struct {
	// deal id
	Dealid *uint32 `protobuf:"varint,1,req,name=dealid" json:"dealid,omitempty"`
	// deal类型
	DealType *BidRequest_AdzInfo_Deal_DealType `protobuf:"varint,2,req,name=deal_type,enum=tanx.BidRequest_AdzInfo_Deal_DealType" json:"deal_type,omitempty"`
	// 允许的广告主白名单，不设置则默认所有均允许
	AdvertiserIds []uint32 `protobuf:"varint,3,rep,name=advertiser_ids" json:"advertiser_ids,omitempty"`
	// 交易价格/底价
	Price            *uint32 `protobuf:"varint,4,opt,name=price" json:"price,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BidRequest_AdzInfo_Deal) Reset()         { *m = BidRequest_AdzInfo_Deal{} }
func (m *BidRequest_AdzInfo_Deal) String() string { return proto.CompactTextString(m) }
func (*BidRequest_AdzInfo_Deal) ProtoMessage()    {}

func (m *BidRequest_AdzInfo_Deal) GetDealid() uint32 {
	if m != nil && m.Dealid != nil {
		return *m.Dealid
	}
	return 0
}

func (m *BidRequest_AdzInfo_Deal) GetDealType() BidRequest_AdzInfo_Deal_DealType {
	if m != nil && m.DealType != nil {
		return *m.DealType
	}
	return BidRequest_AdzInfo_Deal_UNKNOWN_DEAL_TYPE
}

func (m *BidRequest_AdzInfo_Deal) GetAdvertiserIds() []uint32 {
	if m != nil {
		return m.AdvertiserIds
	}
	return nil
}

func (m *BidRequest_AdzInfo_Deal) GetPrice() uint32 {
	if m != nil && m.Price != nil {
		return *m.Price
	}
	return 0
}

// DSP进行Cookie托管的用户属性
// 对应cookie mapping里的tanx_ua参数
type BidRequest_UserAttribute struct {
	// DSP进行Cookie托管的用户属性id
	Id *uint32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	// DSP进行Cookie托管的用户属性id所对应的时间戳
	Timestamp        *uint32 `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BidRequest_UserAttribute) Reset()         { *m = BidRequest_UserAttribute{} }
func (m *BidRequest_UserAttribute) String() string { return proto.CompactTextString(m) }
func (*BidRequest_UserAttribute) ProtoMessage()    {}

func (m *BidRequest_UserAttribute) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *BidRequest_UserAttribute) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

// 预留字段，暂无实际值
type BidRequest_PrivateInfo struct {
	TanxCnaui        *string `protobuf:"bytes,1,opt,name=tanx_cnaui" json:"tanx_cnaui,omitempty"`
	RiskControl      *string `protobuf:"bytes,2,opt,name=risk_control" json:"risk_control,omitempty"`
	NickName         *string `protobuf:"bytes,3,opt,name=nick_name" json:"nick_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BidRequest_PrivateInfo) Reset()         { *m = BidRequest_PrivateInfo{} }
func (m *BidRequest_PrivateInfo) String() string { return proto.CompactTextString(m) }
func (*BidRequest_PrivateInfo) ProtoMessage()    {}

func (m *BidRequest_PrivateInfo) GetTanxCnaui() string {
	if m != nil && m.TanxCnaui != nil {
		return *m.TanxCnaui
	}
	return ""
}

func (m *BidRequest_PrivateInfo) GetRiskControl() string {
	if m != nil && m.RiskControl != nil {
		return *m.RiskControl
	}
	return ""
}

func (m *BidRequest_PrivateInfo) GetNickName() string {
	if m != nil && m.NickName != nil {
		return *m.NickName
	}
	return ""
}

// ------------------------------------------- 无线推广位其他信息
type BidRequest_Mobile struct {
	// 标识该次广告请求是否来自APP应用
	IsApp *bool `protobuf:"varint,1,opt,name=is_app" json:"is_app,omitempty"`
	// 需要展示的创意数量
	// 仅对于AdzInfo.view_type为无线墙时，本字段有效
	AdNum *uint32 `protobuf:"varint,2,opt,name=ad_num" json:"ad_num,omitempty"`
	// 关键词，预留字段，暂无实际值
	AdKeyword []string `protobuf:"bytes,3,rep,name=ad_keyword" json:"ad_keyword,omitempty"`
	// 推广位是否全屏展示
	IsFullscreen *bool `protobuf:"varint,4,opt,name=is_fullscreen" json:"is_fullscreen,omitempty"`
	// 推广位所在的应用包名
	// 例如：com.moji.MojiWeather
	PackageName *string                   `protobuf:"bytes,5,opt,name=package_name" json:"package_name,omitempty"`
	Device      *BidRequest_Mobile_Device `protobuf:"bytes,6,opt,name=device" json:"device,omitempty"`
	// 参见文档 native-template.pdf
	NativeTemplateId []string `protobuf:"bytes,7,rep,name=native_template_id" json:"native_template_id,omitempty"`
	// 推广位可选的广告打开方式
	// 参见数据字典 Tanx-dict-landing-type.txt
	LandingType []int32 `protobuf:"varint,8,rep,name=landing_type" json:"landing_type,omitempty"`
	// 推广位所在的应用名
	// 例如：陌陌
	AppName       *string                          `protobuf:"bytes,9,opt,name=app_name" json:"app_name,omitempty"`
	AppCategories []*BidRequest_Mobile_AppCategory `protobuf:"bytes,10,rep,name=app_categories" json:"app_categories,omitempty"`
	// native模板属性，多值
	NativeAdTemplate []*BidRequest_Mobile_NativeAdTemplate `protobuf:"bytes,11,rep,name=native_ad_template" json:"native_ad_template,omitempty"`
	XXX_unrecognized []byte                                `json:"-"`
}

func (m *BidRequest_Mobile) Reset()         { *m = BidRequest_Mobile{} }
func (m *BidRequest_Mobile) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Mobile) ProtoMessage()    {}

func (m *BidRequest_Mobile) GetIsApp() bool {
	if m != nil && m.IsApp != nil {
		return *m.IsApp
	}
	return false
}

func (m *BidRequest_Mobile) GetAdNum() uint32 {
	if m != nil && m.AdNum != nil {
		return *m.AdNum
	}
	return 0
}

func (m *BidRequest_Mobile) GetAdKeyword() []string {
	if m != nil {
		return m.AdKeyword
	}
	return nil
}

func (m *BidRequest_Mobile) GetIsFullscreen() bool {
	if m != nil && m.IsFullscreen != nil {
		return *m.IsFullscreen
	}
	return false
}

func (m *BidRequest_Mobile) GetPackageName() string {
	if m != nil && m.PackageName != nil {
		return *m.PackageName
	}
	return ""
}

func (m *BidRequest_Mobile) GetDevice() *BidRequest_Mobile_Device {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *BidRequest_Mobile) GetNativeTemplateId() []string {
	if m != nil {
		return m.NativeTemplateId
	}
	return nil
}

func (m *BidRequest_Mobile) GetLandingType() []int32 {
	if m != nil {
		return m.LandingType
	}
	return nil
}

func (m *BidRequest_Mobile) GetAppName() string {
	if m != nil && m.AppName != nil {
		return *m.AppName
	}
	return ""
}

func (m *BidRequest_Mobile) GetAppCategories() []*BidRequest_Mobile_AppCategory {
	if m != nil {
		return m.AppCategories
	}
	return nil
}

func (m *BidRequest_Mobile) GetNativeAdTemplate() []*BidRequest_Mobile_NativeAdTemplate {
	if m != nil {
		return m.NativeAdTemplate
	}
	return nil
}

type BidRequest_Mobile_Device struct {
	// 设备平台(小写)
	// 例如：android, iphone, ipad
	Platform *string `protobuf:"bytes,1,opt,name=platform" json:"platform,omitempty"`
	// 设备品牌(小写)
	// 例如：nokia, samsung.
	Brand *string `protobuf:"bytes,2,opt,name=brand" json:"brand,omitempty"`
	// 设备型号(小写)
	// 例如：n70, galaxy.
	Model *string `protobuf:"bytes,3,opt,name=model" json:"model,omitempty"`
	// 操作系统(小写)
	// 例如：android, ios
	Os *string `protobuf:"bytes,4,opt,name=os" json:"os,omitempty"`
	// 操作系统版本
	// 例如：7.0.2
	OsVersion *string `protobuf:"bytes,5,opt,name=os_version" json:"os_version,omitempty"`
	// 设备所处网络环境
	// 0-未识别, 1-wifi, 2-2g, 3-3g, 4-4g
	Network *uint32 `protobuf:"varint,6,opt,name=network" json:"network,omitempty"`
	// 设备的网络运营商
	// 0-未知, 1-移动, 2-联通, 3-电信
	Operator *int32 `protobuf:"varint,7,opt,name=operator" json:"operator,omitempty"`
	// 设备所在地理位置的经度（小数点格式）
	// 例如：116.41667
	Longitude *string `protobuf:"bytes,8,opt,name=longitude" json:"longitude,omitempty"`
	// 设备所在地理位置的纬度（小数点格式）
	// 例如：39.91667
	Latitude *string `protobuf:"bytes,9,opt,name=latitude" json:"latitude,omitempty"`
	// 设备的屏幕分辨率
	// 例如：1024x768
	DeviceSize *string `protobuf:"bytes,10,opt,name=device_size" json:"device_size,omitempty"`
	// 设备ID号
	// 对于IOS(6.0及以上)设备，该值为idfa进行加密后的值
	// 对于IOS(6.0以下)设备，该值为mac进行加密后的值
	// 对于android设备，该值为imei进行加密后的值
	// 加密规则和密钥请联系Tanx接口人
	DeviceId *string `protobuf:"bytes,11,opt,name=device_id" json:"device_id,omitempty"`
	// 设备像素比例
	// 用于广告位size缩放，千分位表示，默认1000
	DevicePixelRatio  *int32                                      `protobuf:"varint,12,opt,name=device_pixel_ratio,def=1000" json:"device_pixel_ratio,omitempty"`
	ScreenOrientation *BidRequest_Mobile_Device_ScreenOrientation `protobuf:"varint,13,opt,name=screen_orientation,enum=tanx.BidRequest_Mobile_Device_ScreenOrientation,def=0" json:"screen_orientation,omitempty"`
	// 该值为android id进行加密后的值
	// 加密规则和密钥请联系Tanx接口人
	AndroidId *string `protobuf:"bytes,14,opt,name=android_id" json:"android_id,omitempty"`
	// 该值为idfa进行加密后的值
	// 加密规则和密钥请联系Tanx接口人
	Idfa *string `protobuf:"bytes,15,opt,name=idfa" json:"idfa,omitempty"`
	// 该值为imei进行加密后的值
	// 加密规则和密钥请联系Tanx接口人
	Imei *string `protobuf:"bytes,16,opt,name=imei" json:"imei,omitempty"`
	// 该值为mac进行加密后的值
	// 加密规则和密钥请联系Tanx接口人
	Mac              *string `protobuf:"bytes,17,opt,name=mac" json:"mac,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BidRequest_Mobile_Device) Reset()         { *m = BidRequest_Mobile_Device{} }
func (m *BidRequest_Mobile_Device) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Mobile_Device) ProtoMessage()    {}

const Default_BidRequest_Mobile_Device_DevicePixelRatio int32 = 1000
const Default_BidRequest_Mobile_Device_ScreenOrientation BidRequest_Mobile_Device_ScreenOrientation = BidRequest_Mobile_Device_SCREEN_ORIENTATION_UNKNOWN

func (m *BidRequest_Mobile_Device) GetPlatform() string {
	if m != nil && m.Platform != nil {
		return *m.Platform
	}
	return ""
}

func (m *BidRequest_Mobile_Device) GetBrand() string {
	if m != nil && m.Brand != nil {
		return *m.Brand
	}
	return ""
}

func (m *BidRequest_Mobile_Device) GetModel() string {
	if m != nil && m.Model != nil {
		return *m.Model
	}
	return ""
}

func (m *BidRequest_Mobile_Device) GetOs() string {
	if m != nil && m.Os != nil {
		return *m.Os
	}
	return ""
}

func (m *BidRequest_Mobile_Device) GetOsVersion() string {
	if m != nil && m.OsVersion != nil {
		return *m.OsVersion
	}
	return ""
}

func (m *BidRequest_Mobile_Device) GetNetwork() uint32 {
	if m != nil && m.Network != nil {
		return *m.Network
	}
	return 0
}

func (m *BidRequest_Mobile_Device) GetOperator() int32 {
	if m != nil && m.Operator != nil {
		return *m.Operator
	}
	return 0
}

func (m *BidRequest_Mobile_Device) GetLongitude() string {
	if m != nil && m.Longitude != nil {
		return *m.Longitude
	}
	return ""
}

func (m *BidRequest_Mobile_Device) GetLatitude() string {
	if m != nil && m.Latitude != nil {
		return *m.Latitude
	}
	return ""
}

func (m *BidRequest_Mobile_Device) GetDeviceSize() string {
	if m != nil && m.DeviceSize != nil {
		return *m.DeviceSize
	}
	return ""
}

func (m *BidRequest_Mobile_Device) GetDeviceId() string {
	if m != nil && m.DeviceId != nil {
		return *m.DeviceId
	}
	return ""
}

func (m *BidRequest_Mobile_Device) GetDevicePixelRatio() int32 {
	if m != nil && m.DevicePixelRatio != nil {
		return *m.DevicePixelRatio
	}
	return Default_BidRequest_Mobile_Device_DevicePixelRatio
}

func (m *BidRequest_Mobile_Device) GetScreenOrientation() BidRequest_Mobile_Device_ScreenOrientation {
	if m != nil && m.ScreenOrientation != nil {
		return *m.ScreenOrientation
	}
	return Default_BidRequest_Mobile_Device_ScreenOrientation
}

func (m *BidRequest_Mobile_Device) GetAndroidId() string {
	if m != nil && m.AndroidId != nil {
		return *m.AndroidId
	}
	return ""
}

func (m *BidRequest_Mobile_Device) GetIdfa() string {
	if m != nil && m.Idfa != nil {
		return *m.Idfa
	}
	return ""
}

func (m *BidRequest_Mobile_Device) GetImei() string {
	if m != nil && m.Imei != nil {
		return *m.Imei
	}
	return ""
}

func (m *BidRequest_Mobile_Device) GetMac() string {
	if m != nil && m.Mac != nil {
		return *m.Mac
	}
	return ""
}

// 基于推广位所在app的分类信息
type BidRequest_Mobile_AppCategory struct {
	// 基于推广位所在app的类目ID
	// 参见数据字典 Tanx-dict-app-category.xlsx
	Id *int32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	// 对应app类目ID的置信分数。取值范围[0,1000]
	ConfidenceLevel  *int32 `protobuf:"varint,2,req,name=confidence_level" json:"confidence_level,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BidRequest_Mobile_AppCategory) Reset()         { *m = BidRequest_Mobile_AppCategory{} }
func (m *BidRequest_Mobile_AppCategory) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Mobile_AppCategory) ProtoMessage()    {}

func (m *BidRequest_Mobile_AppCategory) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *BidRequest_Mobile_AppCategory) GetConfidenceLevel() int32 {
	if m != nil && m.ConfidenceLevel != nil {
		return *m.ConfidenceLevel
	}
	return 0
}

// native模板属性
type BidRequest_Mobile_NativeAdTemplate struct {
	// native模板id
	NativeTemplateId *string `protobuf:"bytes,1,req,name=native_template_id" json:"native_template_id,omitempty"`
	// 推广区域列表，多值
	Areas            []*BidRequest_Mobile_NativeAdTemplate_Area `protobuf:"bytes,2,rep,name=areas" json:"areas,omitempty"`
	XXX_unrecognized []byte                                     `json:"-"`
}

func (m *BidRequest_Mobile_NativeAdTemplate) Reset()         { *m = BidRequest_Mobile_NativeAdTemplate{} }
func (m *BidRequest_Mobile_NativeAdTemplate) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Mobile_NativeAdTemplate) ProtoMessage()    {}

func (m *BidRequest_Mobile_NativeAdTemplate) GetNativeTemplateId() string {
	if m != nil && m.NativeTemplateId != nil {
		return *m.NativeTemplateId
	}
	return ""
}

func (m *BidRequest_Mobile_NativeAdTemplate) GetAreas() []*BidRequest_Mobile_NativeAdTemplate_Area {
	if m != nil {
		return m.Areas
	}
	return nil
}

// 推广区域
type BidRequest_Mobile_NativeAdTemplate_Area struct {
	// 推广区域id
	Id *int32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	// 创意个数
	CreativeCount *int32 `protobuf:"varint,2,opt,name=creative_count" json:"creative_count,omitempty"`
	// 创意要求
	Creative         *BidRequest_Mobile_NativeAdTemplate_Area_Creative `protobuf:"bytes,3,opt,name=creative" json:"creative,omitempty"`
	XXX_unrecognized []byte                                            `json:"-"`
}

func (m *BidRequest_Mobile_NativeAdTemplate_Area) Reset() {
	*m = BidRequest_Mobile_NativeAdTemplate_Area{}
}
func (m *BidRequest_Mobile_NativeAdTemplate_Area) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Mobile_NativeAdTemplate_Area) ProtoMessage()    {}

func (m *BidRequest_Mobile_NativeAdTemplate_Area) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *BidRequest_Mobile_NativeAdTemplate_Area) GetCreativeCount() int32 {
	if m != nil && m.CreativeCount != nil {
		return *m.CreativeCount
	}
	return 0
}

func (m *BidRequest_Mobile_NativeAdTemplate_Area) GetCreative() *BidRequest_Mobile_NativeAdTemplate_Area_Creative {
	if m != nil {
		return m.Creative
	}
	return nil
}

// 创意要求
type BidRequest_Mobile_NativeAdTemplate_Area_Creative struct {
	// 必须属性集合
	// 1:标题;2:广告语;3:图片;4:价格;5:折扣价;
	// 6:销量;7:click_url;8:landing_type;9:描述;10:打开方式;
	// 11:下载方式;12:deep_link;13:下载
	RequiredFields []int32 `protobuf:"varint,1,rep,name=required_fields" json:"required_fields,omitempty"`
	// 推荐属性集合
	// 1:标题;2:广告语;3:图片;4:价格;5:折扣价;
	// 6:销量;7:click_url;8:landing_type;9:描述;10:打开方式;
	// 11:下载方式;12:deep_link;13:下载
	RecommendedFields []int32 `protobuf:"varint,2,rep,name=recommended_fields" json:"recommended_fields,omitempty"`
	// 标题最大长度，如果超长有可能会被截断
	TitleMaxSafeLength *int32 `protobuf:"varint,3,opt,name=title_max_safe_length" json:"title_max_safe_length,omitempty"`
	// 副标题或者广告语最大长度，如果超长有可能会被截断
	AdWordsMaxSafeLength *int32 `protobuf:"varint,4,opt,name=ad_words_max_safe_length" json:"ad_words_max_safe_length,omitempty"`
	// 图片尺寸宽x高，例如：320x50
	ImageSize *string `protobuf:"bytes,5,opt,name=image_size" json:"image_size,omitempty"`
	// 事件属性集合
	// 1:下载;2:地图;3:电话;
	ActionFields []int32 `protobuf:"varint,6,rep,name=action_fields" json:"action_fields,omitempty"`
	// 多选一属性集合
	// 1:标题;2:广告语;3:图片;4:价格;5:折扣价;
	// 6:销量;7:click_url;8:landing_type;9:描述;10:打开方式;
	// 11:下载方式;12:deep_link;13:下载
	MultichoiceFields []int32 `protobuf:"varint,7,rep,name=multichoice_fields" json:"multichoice_fields,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *BidRequest_Mobile_NativeAdTemplate_Area_Creative) Reset() {
	*m = BidRequest_Mobile_NativeAdTemplate_Area_Creative{}
}
func (m *BidRequest_Mobile_NativeAdTemplate_Area_Creative) String() string {
	return proto.CompactTextString(m)
}
func (*BidRequest_Mobile_NativeAdTemplate_Area_Creative) ProtoMessage() {}

func (m *BidRequest_Mobile_NativeAdTemplate_Area_Creative) GetRequiredFields() []int32 {
	if m != nil {
		return m.RequiredFields
	}
	return nil
}

func (m *BidRequest_Mobile_NativeAdTemplate_Area_Creative) GetRecommendedFields() []int32 {
	if m != nil {
		return m.RecommendedFields
	}
	return nil
}

func (m *BidRequest_Mobile_NativeAdTemplate_Area_Creative) GetTitleMaxSafeLength() int32 {
	if m != nil && m.TitleMaxSafeLength != nil {
		return *m.TitleMaxSafeLength
	}
	return 0
}

func (m *BidRequest_Mobile_NativeAdTemplate_Area_Creative) GetAdWordsMaxSafeLength() int32 {
	if m != nil && m.AdWordsMaxSafeLength != nil {
		return *m.AdWordsMaxSafeLength
	}
	return 0
}

func (m *BidRequest_Mobile_NativeAdTemplate_Area_Creative) GetImageSize() string {
	if m != nil && m.ImageSize != nil {
		return *m.ImageSize
	}
	return ""
}

func (m *BidRequest_Mobile_NativeAdTemplate_Area_Creative) GetActionFields() []int32 {
	if m != nil {
		return m.ActionFields
	}
	return nil
}

func (m *BidRequest_Mobile_NativeAdTemplate_Area_Creative) GetMultichoiceFields() []int32 {
	if m != nil {
		return m.MultichoiceFields
	}
	return nil
}

// 基于推广位所在页面内容的分类信息
type BidRequest_ContentCategory struct {
	// 基于推广位所在页面内容的网页类目ID
	// 参见数据字典 Tanx-dict-content-category.xlsx
	Id *int32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	// 对应网页类目ID的置信分数。取值范围[0,1000]
	ConfidenceLevel  *int32 `protobuf:"varint,2,req,name=confidence_level" json:"confidence_level,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BidRequest_ContentCategory) Reset()         { *m = BidRequest_ContentCategory{} }
func (m *BidRequest_ContentCategory) String() string { return proto.CompactTextString(m) }
func (*BidRequest_ContentCategory) ProtoMessage()    {}

func (m *BidRequest_ContentCategory) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *BidRequest_ContentCategory) GetConfidenceLevel() int32 {
	if m != nil && m.ConfidenceLevel != nil {
		return *m.ConfidenceLevel
	}
	return 0
}

// 视频信息，即将废弃，请使用AdzInfo.Video
type BidRequest_Video struct {
	VideoFormat []BidRequest_Video_VideoFormat `protobuf:"varint,1,rep,name=video_format,enum=tanx.BidRequest_Video_VideoFormat" json:"video_format,omitempty"`
	Content     *BidRequest_Video_Content      `protobuf:"bytes,2,opt,name=content" json:"content,omitempty"`
	// 贴片位置相对于所在视频的起始时间，0 表示前贴片, -1 表示后贴片，大于0的值表示中插
	VideoadStartDelay *int32 `protobuf:"varint,3,opt,name=videoad_start_delay" json:"videoad_start_delay,omitempty"`
	// 上述位置可能包含多个贴片，表示本贴片在上述集合中相对起始位置，单位毫秒
	VideoadSectionStartDelay *int32 `protobuf:"varint,4,opt,name=videoad_section_start_delay" json:"videoad_section_start_delay,omitempty"`
	// 贴片最小播放时间长度,视频创意播放时间不可小于该值，单位毫秒
	MinAdDuration *int32 `protobuf:"varint,5,opt,name=min_ad_duration" json:"min_ad_duration,omitempty"`
	// 贴片最大播放时间长度，单位毫秒
	MaxAdDuration *int32 `protobuf:"varint,6,opt,name=max_ad_duration" json:"max_ad_duration,omitempty"`
	// VAST协议版本号.
	// 本期使用3.0版本，向下兼容
	Protocol         *string `protobuf:"bytes,7,opt,name=protocol" json:"protocol,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BidRequest_Video) Reset()         { *m = BidRequest_Video{} }
func (m *BidRequest_Video) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Video) ProtoMessage()    {}

func (m *BidRequest_Video) GetVideoFormat() []BidRequest_Video_VideoFormat {
	if m != nil {
		return m.VideoFormat
	}
	return nil
}

func (m *BidRequest_Video) GetContent() *BidRequest_Video_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *BidRequest_Video) GetVideoadStartDelay() int32 {
	if m != nil && m.VideoadStartDelay != nil {
		return *m.VideoadStartDelay
	}
	return 0
}

func (m *BidRequest_Video) GetVideoadSectionStartDelay() int32 {
	if m != nil && m.VideoadSectionStartDelay != nil {
		return *m.VideoadSectionStartDelay
	}
	return 0
}

func (m *BidRequest_Video) GetMinAdDuration() int32 {
	if m != nil && m.MinAdDuration != nil {
		return *m.MinAdDuration
	}
	return 0
}

func (m *BidRequest_Video) GetMaxAdDuration() int32 {
	if m != nil && m.MaxAdDuration != nil {
		return *m.MaxAdDuration
	}
	return 0
}

func (m *BidRequest_Video) GetProtocol() string {
	if m != nil && m.Protocol != nil {
		return *m.Protocol
	}
	return ""
}

// 视频所在页面描述信息
// 统一为string utf-8
type BidRequest_Video_Content struct {
	// 视频标题
	Title *string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	// 视频时长，单位秒
	Duration *int32 `protobuf:"varint,2,opt,name=duration" json:"duration,omitempty"`
	// 视频标签
	Keywords         []string `protobuf:"bytes,3,rep,name=keywords" json:"keywords,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *BidRequest_Video_Content) Reset()         { *m = BidRequest_Video_Content{} }
func (m *BidRequest_Video_Content) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Video_Content) ProtoMessage()    {}

func (m *BidRequest_Video_Content) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *BidRequest_Video_Content) GetDuration() int32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *BidRequest_Video_Content) GetKeywords() []string {
	if m != nil {
		return m.Keywords
	}
	return nil
}

// 交易定义，为优先交易、私有竞价二者其一
type BidRequest_Deal struct {
	PreferDeal       *BidRequest_Deal_PreferredDeal  `protobuf:"bytes,1,opt,name=prefer_deal" json:"prefer_deal,omitempty"`
	PrivAuc          *BidRequest_Deal_PrivateAuction `protobuf:"bytes,2,opt,name=priv_auc" json:"priv_auc,omitempty"`
	XXX_unrecognized []byte                          `json:"-"`
}

func (m *BidRequest_Deal) Reset()         { *m = BidRequest_Deal{} }
func (m *BidRequest_Deal) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Deal) ProtoMessage()    {}

func (m *BidRequest_Deal) GetPreferDeal() *BidRequest_Deal_PreferredDeal {
	if m != nil {
		return m.PreferDeal
	}
	return nil
}

func (m *BidRequest_Deal) GetPrivAuc() *BidRequest_Deal_PrivateAuction {
	if m != nil {
		return m.PrivAuc
	}
	return nil
}

// 优先交易
type BidRequest_Deal_PreferredDeal struct {
	Dealid *uint32 `protobuf:"varint,1,req,name=dealid" json:"dealid,omitempty"`
	// 允许的广告主白名单，不设置则默认所有均允许
	AdvertiserIds []uint32 `protobuf:"varint,2,rep,name=advertiser_ids" json:"advertiser_ids,omitempty"`
	// 优先交易固定价格
	FixCpmPrice *uint32 `protobuf:"varint,3,opt,name=fix_cpm_price" json:"fix_cpm_price,omitempty"`
	// 是否直采
	IsDirectBuy      *bool  `protobuf:"varint,4,opt,name=is_direct_buy,def=0" json:"is_direct_buy,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BidRequest_Deal_PreferredDeal) Reset()         { *m = BidRequest_Deal_PreferredDeal{} }
func (m *BidRequest_Deal_PreferredDeal) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Deal_PreferredDeal) ProtoMessage()    {}

const Default_BidRequest_Deal_PreferredDeal_IsDirectBuy bool = false

func (m *BidRequest_Deal_PreferredDeal) GetDealid() uint32 {
	if m != nil && m.Dealid != nil {
		return *m.Dealid
	}
	return 0
}

func (m *BidRequest_Deal_PreferredDeal) GetAdvertiserIds() []uint32 {
	if m != nil {
		return m.AdvertiserIds
	}
	return nil
}

func (m *BidRequest_Deal_PreferredDeal) GetFixCpmPrice() uint32 {
	if m != nil && m.FixCpmPrice != nil {
		return *m.FixCpmPrice
	}
	return 0
}

func (m *BidRequest_Deal_PreferredDeal) GetIsDirectBuy() bool {
	if m != nil && m.IsDirectBuy != nil {
		return *m.IsDirectBuy
	}
	return Default_BidRequest_Deal_PreferredDeal_IsDirectBuy
}

// 私有竞价
type BidRequest_Deal_PrivateAuction struct {
	Dealid           *uint32                                     `protobuf:"varint,1,req,name=dealid" json:"dealid,omitempty"`
	BuyerRules       []*BidRequest_Deal_PrivateAuction_BuyerRule `protobuf:"bytes,2,rep,name=buyer_rules" json:"buyer_rules,omitempty"`
	XXX_unrecognized []byte                                      `json:"-"`
}

func (m *BidRequest_Deal_PrivateAuction) Reset()         { *m = BidRequest_Deal_PrivateAuction{} }
func (m *BidRequest_Deal_PrivateAuction) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Deal_PrivateAuction) ProtoMessage()    {}

func (m *BidRequest_Deal_PrivateAuction) GetDealid() uint32 {
	if m != nil && m.Dealid != nil {
		return *m.Dealid
	}
	return 0
}

func (m *BidRequest_Deal_PrivateAuction) GetBuyerRules() []*BidRequest_Deal_PrivateAuction_BuyerRule {
	if m != nil {
		return m.BuyerRules
	}
	return nil
}

// 购买的规则
type BidRequest_Deal_PrivateAuction_BuyerRule struct {
	// 允许的广告主白名单，不设置则默认所有均允许
	AdvertiserIds []uint32 `protobuf:"varint,1,rep,name=advertiser_ids" json:"advertiser_ids,omitempty"`
	// 私有竞价底价
	MinCpmPrice      *uint32 `protobuf:"varint,2,opt,name=min_cpm_price" json:"min_cpm_price,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BidRequest_Deal_PrivateAuction_BuyerRule) Reset() {
	*m = BidRequest_Deal_PrivateAuction_BuyerRule{}
}
func (m *BidRequest_Deal_PrivateAuction_BuyerRule) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Deal_PrivateAuction_BuyerRule) ProtoMessage()    {}

func (m *BidRequest_Deal_PrivateAuction_BuyerRule) GetAdvertiserIds() []uint32 {
	if m != nil {
		return m.AdvertiserIds
	}
	return nil
}

func (m *BidRequest_Deal_PrivateAuction_BuyerRule) GetMinCpmPrice() uint32 {
	if m != nil && m.MinCpmPrice != nil {
		return *m.MinCpmPrice
	}
	return 0
}

// 人群类目属性
// 参见数据字典
type BidRequest_CrowdCategory struct {
	// 人群类目ID
	// 参见数据字典
	Id *int32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	// 对应人群类目ID的置信分数。取值范围[0,1000]
	ConfidenceLevel  *uint32 `protobuf:"varint,2,opt,name=confidence_level" json:"confidence_level,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BidRequest_CrowdCategory) Reset()         { *m = BidRequest_CrowdCategory{} }
func (m *BidRequest_CrowdCategory) String() string { return proto.CompactTextString(m) }
func (*BidRequest_CrowdCategory) ProtoMessage()    {}

func (m *BidRequest_CrowdCategory) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *BidRequest_CrowdCategory) GetConfidenceLevel() uint32 {
	if m != nil && m.ConfidenceLevel != nil {
		return *m.ConfidenceLevel
	}
	return 0
}

type BidResponse struct {
	// 当前协议版本号，目前为3
	Version *int32 `protobuf:"varint,1,req,name=version" json:"version,omitempty"`
	// 请填充BidRequest中的bid, 32字节的字符串
	Bid *string            `protobuf:"bytes,2,req,name=bid" json:"bid,omitempty"`
	Ads []*BidResponse_Ads `protobuf:"bytes,3,rep,name=ads" json:"ads,omitempty"`
	// DSP存储cookie映射表的情况下，需要反馈是否已存储对应BidRequest中tid的映射，已映射设置true，未映射设置false
	// Tanx托管存储cookie映射表的情况下，DSP无需设置此字段
	IsRecognizedUser *bool  `protobuf:"varint,4,opt,name=is_recognized_user,def=0" json:"is_recognized_user,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BidResponse) Reset()         { *m = BidResponse{} }
func (m *BidResponse) String() string { return proto.CompactTextString(m) }
func (*BidResponse) ProtoMessage()    {}

const Default_BidResponse_IsRecognizedUser bool = false

func (m *BidResponse) GetVersion() int32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *BidResponse) GetBid() string {
	if m != nil && m.Bid != nil {
		return *m.Bid
	}
	return ""
}

func (m *BidResponse) GetAds() []*BidResponse_Ads {
	if m != nil {
		return m.Ads
	}
	return nil
}

func (m *BidResponse) GetIsRecognizedUser() bool {
	if m != nil && m.IsRecognizedUser != nil {
		return *m.IsRecognizedUser
	}
	return Default_BidResponse_IsRecognizedUser
}

// 广告定义
// 若DSP不对本次请求报价，则不要设置本字段
type BidResponse_Ads struct {
	// 标记该广告对应的推广位的编号，目前请填充0
	AdzinfoId *uint32 `protobuf:"varint,1,req,name=adzinfo_id" json:"adzinfo_id,omitempty"`
	// 广告竞标价格（人民币），单位为分/千次展现
	// 该字段值不允许为0
	// 且不能低于推广位最低竞标价格（BidRequest.min_cpm_price）
	MaxCpmPrice *uint32 `protobuf:"varint,2,req,name=max_cpm_price" json:"max_cpm_price,omitempty"`
	// 当前广告在对应推广位上的下标值
	// 该值严格从0递增，并且必须小于BidRequest.AdzInfo.ad_bid_count
	AdBidCountIdx *uint32 `protobuf:"varint,3,opt,name=ad_bid_count_idx" json:"ad_bid_count_idx,omitempty"`
	// 广告代码片段
	// 详细用法请参见API文档
	HtmlSnippet *string `protobuf:"bytes,4,opt,name=html_snippet" json:"html_snippet,omitempty"`
	// 广告的点击地址
	// 需要http://或者https://开头
	ClickThroughUrl []string `protobuf:"bytes,5,rep,name=click_through_url" json:"click_through_url,omitempty"`
	// DSP声明的本广告所属的广告行业类目和敏感类目
	// 参见数据字典 Tanx-dict-ad-category.txt 和 Tanx-dict-sensitive-category.txt
	Category []int32 `protobuf:"varint,6,rep,name=category" json:"category,omitempty"`
	// DSP声明的广告创意类型
	// 参见数据字典 Tanx-dict-creative-type.txt
	CreativeType []int32 `protobuf:"varint,7,rep,name=creative_type" json:"creative_type,omitempty"`
	// DSP自定义数据
	// 本字段即将废弃
	// 只能包含[_0-9a-zA-Z]，长度不超过128
	NetworkGuid *string `protobuf:"bytes,8,opt,name=network_guid" json:"network_guid,omitempty"`
	// 本字段已经废弃
	ExtendData *string `protobuf:"bytes,9,opt,name=extend_data" json:"extend_data,omitempty"`
	// 广告跳转的最终目标页面地址
	// 必须以http://或者https://开头.
	DestinationUrl []string `protobuf:"bytes,10,rep,name=destination_url" json:"destination_url,omitempty"`
	// 广告创意ID
	// 长度不超过64字节，且不能包含空格/回车/换行和其他不可见字符
	// 对于视频贴片，此处放托管的创意id，不可为空
	CreativeId *string `protobuf:"bytes,11,opt,name=creative_id" json:"creative_id,omitempty"`
	// 素材资源地址
	// 本字段仅适用于移动设备上native流量的竞价请求
	ResourceAddress *string `protobuf:"bytes,12,opt,name=resource_address" json:"resource_address,omitempty"`
	// 广告展示时的反馈地址
	// 本字段仅适用于移动设备上app流量的竞价请求
	FeedbackAddress *string `protobuf:"bytes,13,opt,name=feedback_address" json:"feedback_address,omitempty"`
	// 视频创意代码片段
	// 详细用法请参见API文档
	VideoSnippet *string `protobuf:"bytes,14,opt,name=video_snippet" json:"video_snippet,omitempty"`
	// 素材资源
	// 如果不提供resource_address，可以直接使用本字段返回素材
	// 该接口仅适用于移动设备上native流量的竞价请求
	MobileCreative *MobileCreative `protobuf:"bytes,15,opt,name=mobile_creative" json:"mobile_creative,omitempty"`
	// 参与PMP竞价的id, 要和请求中Deal定义中的dealid一致
	// 如果不设置标识参与公开竞价
	Dealid *uint32 `protobuf:"varint,16,opt,name=dealid" json:"dealid,omitempty"`
	// 本次返回的品牌广告主ID,
	// 为空表示没有办法标识
	AdvertiserIds []uint32 `protobuf:"varint,17,rep,name=advertiser_ids" json:"advertiser_ids,omitempty"`
	// android平台app下载完成反馈地址
	// 仅适用于无线app h5流量
	DownloadComplete *string `protobuf:"bytes,18,opt,name=download_complete" json:"download_complete,omitempty"`
	// 竞价胜出反馈地址
	// 仅适用于无线app流量
	WinnoticeAddress *string `protobuf:"bytes,19,opt,name=winnotice_address" json:"winnotice_address,omitempty"`
	// 创意素材自适应方式, 1 等比 2 定高
	CreativeAdaptiveType *int32 `protobuf:"varint,20,opt,name=creative_adaptive_type" json:"creative_adaptive_type,omitempty"`
	// 广告唤醒的最终schema
	// 本字段仅适用于移动设备上app流量的竞价请求
	DeeplinkUrl []string `protobuf:"bytes,21,rep,name=deeplink_url" json:"deeplink_url,omitempty"`
	// 展示监测地址
	ImpressionTrackingUrl []string `protobuf:"bytes,22,rep,name=impression_tracking_url" json:"impression_tracking_url,omitempty"`
	// 点击监测地址
	ClickTrackingUrl []string               `protobuf:"bytes,23,rep,name=click_tracking_url" json:"click_tracking_url,omitempty"`
	Video            *BidResponse_Ads_Video `protobuf:"bytes,24,opt,name=video" json:"video,omitempty"`
	// apiFramework 1 VPAID 1.0; 2 VPAID 2.0; 3 MRAID-1; 4 ORMMA; 5 MRAID-2; 6 pri_loader
	Api []int32 `protobuf:"varint,25,rep,name=api" json:"api,omitempty"`
	// MIME 素材类型
	MimeType *string `protobuf:"bytes,26,opt,name=mime_type" json:"mime_type,omitempty"`
	// 创意投放日期, 仅开屏使用，格式:"20160602"
	CampaignDate     *string `protobuf:"bytes,27,opt,name=campaign_date" json:"campaign_date,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BidResponse_Ads) Reset()         { *m = BidResponse_Ads{} }
func (m *BidResponse_Ads) String() string { return proto.CompactTextString(m) }
func (*BidResponse_Ads) ProtoMessage()    {}

func (m *BidResponse_Ads) GetAdzinfoId() uint32 {
	if m != nil && m.AdzinfoId != nil {
		return *m.AdzinfoId
	}
	return 0
}

func (m *BidResponse_Ads) GetMaxCpmPrice() uint32 {
	if m != nil && m.MaxCpmPrice != nil {
		return *m.MaxCpmPrice
	}
	return 0
}

func (m *BidResponse_Ads) GetAdBidCountIdx() uint32 {
	if m != nil && m.AdBidCountIdx != nil {
		return *m.AdBidCountIdx
	}
	return 0
}

func (m *BidResponse_Ads) GetHtmlSnippet() string {
	if m != nil && m.HtmlSnippet != nil {
		return *m.HtmlSnippet
	}
	return ""
}

func (m *BidResponse_Ads) GetClickThroughUrl() []string {
	if m != nil {
		return m.ClickThroughUrl
	}
	return nil
}

func (m *BidResponse_Ads) GetCategory() []int32 {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *BidResponse_Ads) GetCreativeType() []int32 {
	if m != nil {
		return m.CreativeType
	}
	return nil
}

func (m *BidResponse_Ads) GetNetworkGuid() string {
	if m != nil && m.NetworkGuid != nil {
		return *m.NetworkGuid
	}
	return ""
}

func (m *BidResponse_Ads) GetExtendData() string {
	if m != nil && m.ExtendData != nil {
		return *m.ExtendData
	}
	return ""
}

func (m *BidResponse_Ads) GetDestinationUrl() []string {
	if m != nil {
		return m.DestinationUrl
	}
	return nil
}

func (m *BidResponse_Ads) GetCreativeId() string {
	if m != nil && m.CreativeId != nil {
		return *m.CreativeId
	}
	return ""
}

func (m *BidResponse_Ads) GetResourceAddress() string {
	if m != nil && m.ResourceAddress != nil {
		return *m.ResourceAddress
	}
	return ""
}

func (m *BidResponse_Ads) GetFeedbackAddress() string {
	if m != nil && m.FeedbackAddress != nil {
		return *m.FeedbackAddress
	}
	return ""
}

func (m *BidResponse_Ads) GetVideoSnippet() string {
	if m != nil && m.VideoSnippet != nil {
		return *m.VideoSnippet
	}
	return ""
}

func (m *BidResponse_Ads) GetMobileCreative() *MobileCreative {
	if m != nil {
		return m.MobileCreative
	}
	return nil
}

func (m *BidResponse_Ads) GetDealid() uint32 {
	if m != nil && m.Dealid != nil {
		return *m.Dealid
	}
	return 0
}

func (m *BidResponse_Ads) GetAdvertiserIds() []uint32 {
	if m != nil {
		return m.AdvertiserIds
	}
	return nil
}

func (m *BidResponse_Ads) GetDownloadComplete() string {
	if m != nil && m.DownloadComplete != nil {
		return *m.DownloadComplete
	}
	return ""
}

func (m *BidResponse_Ads) GetWinnoticeAddress() string {
	if m != nil && m.WinnoticeAddress != nil {
		return *m.WinnoticeAddress
	}
	return ""
}

func (m *BidResponse_Ads) GetCreativeAdaptiveType() int32 {
	if m != nil && m.CreativeAdaptiveType != nil {
		return *m.CreativeAdaptiveType
	}
	return 0
}

func (m *BidResponse_Ads) GetDeeplinkUrl() []string {
	if m != nil {
		return m.DeeplinkUrl
	}
	return nil
}

func (m *BidResponse_Ads) GetImpressionTrackingUrl() []string {
	if m != nil {
		return m.ImpressionTrackingUrl
	}
	return nil
}

func (m *BidResponse_Ads) GetClickTrackingUrl() []string {
	if m != nil {
		return m.ClickTrackingUrl
	}
	return nil
}

func (m *BidResponse_Ads) GetVideo() *BidResponse_Ads_Video {
	if m != nil {
		return m.Video
	}
	return nil
}

func (m *BidResponse_Ads) GetApi() []int32 {
	if m != nil {
		return m.Api
	}
	return nil
}

func (m *BidResponse_Ads) GetMimeType() string {
	if m != nil && m.MimeType != nil {
		return *m.MimeType
	}
	return ""
}

func (m *BidResponse_Ads) GetCampaignDate() string {
	if m != nil && m.CampaignDate != nil {
		return *m.CampaignDate
	}
	return ""
}

type BidResponse_Ads_Video struct {
	// 素材的时长，单位:毫秒
	Duration *int32 `protobuf:"varint,1,opt,name=duration" json:"duration,omitempty"`
	// 非托管动态素材的URL
	Url *string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	// 播放事件监测,各媒体对播放监测的支持能力不同
	// 播放开始监测
	EventStart []string `protobuf:"bytes,3,rep,name=event_start" json:"event_start,omitempty"`
	// 播放中点监测
	EventMidpoint []string `protobuf:"bytes,4,rep,name=event_midpoint" json:"event_midpoint,omitempty"`
	// 播放完毕监测
	EventComplete    []string `protobuf:"bytes,5,rep,name=event_complete" json:"event_complete,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *BidResponse_Ads_Video) Reset()         { *m = BidResponse_Ads_Video{} }
func (m *BidResponse_Ads_Video) String() string { return proto.CompactTextString(m) }
func (*BidResponse_Ads_Video) ProtoMessage()    {}

func (m *BidResponse_Ads_Video) GetDuration() int32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *BidResponse_Ads_Video) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *BidResponse_Ads_Video) GetEventStart() []string {
	if m != nil {
		return m.EventStart
	}
	return nil
}

func (m *BidResponse_Ads_Video) GetEventMidpoint() []string {
	if m != nil {
		return m.EventMidpoint
	}
	return nil
}

func (m *BidResponse_Ads_Video) GetEventComplete() []string {
	if m != nil {
		return m.EventComplete
	}
	return nil
}

// BidResult消息已废弃，请忽略
type BidResult struct {
	// 当前协议版本号，目前为3
	Version *int32 `protobuf:"varint,1,req,name=version" json:"version,omitempty"`
	// 对应BidRequest.bid字段
	Bid              *string          `protobuf:"bytes,2,req,name=bid" json:"bid,omitempty"`
	Res              []*BidResult_Res `protobuf:"bytes,3,rep,name=res" json:"res,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *BidResult) Reset()         { *m = BidResult{} }
func (m *BidResult) String() string { return proto.CompactTextString(m) }
func (*BidResult) ProtoMessage()    {}

func (m *BidResult) GetVersion() int32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *BidResult) GetBid() string {
	if m != nil && m.Bid != nil {
		return *m.Bid
	}
	return ""
}

func (m *BidResult) GetRes() []*BidResult_Res {
	if m != nil {
		return m.Res
	}
	return nil
}

type BidResult_Res struct {
	// 竞价成功的广告所对应的推广位编号，目前为0
	AdzinfoId *uint32 `protobuf:"varint,1,req,name=adzinfo_id" json:"adzinfo_id,omitempty"`
	// 竞价成功的广告在对应推广位上的下标值
	AdBidCountIdx *uint32 `protobuf:"varint,2,opt,name=ad_bid_count_idx" json:"ad_bid_count_idx,omitempty"`
	// 该字段已废弃
	ResultCode *int32 `protobuf:"varint,3,opt,name=result_code,def=0" json:"result_code,omitempty"`
	// 竞价成功的广告的结算价格
	ResultPrice *uint32 `protobuf:"varint,4,opt,name=result_price" json:"result_price,omitempty"`
	// DSP自定义的数据
	// 为对应的BidResponse消息中的Ads.extend_data字段值
	ExtendData       *string `protobuf:"bytes,5,opt,name=extend_data" json:"extend_data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BidResult_Res) Reset()         { *m = BidResult_Res{} }
func (m *BidResult_Res) String() string { return proto.CompactTextString(m) }
func (*BidResult_Res) ProtoMessage()    {}

const Default_BidResult_Res_ResultCode int32 = 0

func (m *BidResult_Res) GetAdzinfoId() uint32 {
	if m != nil && m.AdzinfoId != nil {
		return *m.AdzinfoId
	}
	return 0
}

func (m *BidResult_Res) GetAdBidCountIdx() uint32 {
	if m != nil && m.AdBidCountIdx != nil {
		return *m.AdBidCountIdx
	}
	return 0
}

func (m *BidResult_Res) GetResultCode() int32 {
	if m != nil && m.ResultCode != nil {
		return *m.ResultCode
	}
	return Default_BidResult_Res_ResultCode
}

func (m *BidResult_Res) GetResultPrice() uint32 {
	if m != nil && m.ResultPrice != nil {
		return *m.ResultPrice
	}
	return 0
}

func (m *BidResult_Res) GetExtendData() string {
	if m != nil && m.ExtendData != nil {
		return *m.ExtendData
	}
	return ""
}

// 该接口仅适用于移动设备上native流量的竞价请求
type MobileCreative struct {
	// 当前协议版本号，目前为3
	Version *int32 `protobuf:"varint,1,req,name=version" json:"version,omitempty"`
	// 竞价过程中生成的唯一竞价ID
	Bid *string `protobuf:"bytes,2,req,name=bid" json:"bid,omitempty"`
	// 预留字段，请暂时忽略
	ViewType  *uint32                    `protobuf:"varint,3,opt,name=view_type" json:"view_type,omitempty"`
	Creatives []*MobileCreative_Creative `protobuf:"bytes,4,rep,name=creatives" json:"creatives,omitempty"`
	// dsp返回广告的模板编号，必须填充
	// 参见文档 native-template.pdf
	NativeTemplateId *string `protobuf:"bytes,5,opt,name=native_template_id" json:"native_template_id,omitempty"`
	// 广告区域，多值
	Areas            []*MobileCreative_Area `protobuf:"bytes,6,rep,name=areas" json:"areas,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *MobileCreative) Reset()         { *m = MobileCreative{} }
func (m *MobileCreative) String() string { return proto.CompactTextString(m) }
func (*MobileCreative) ProtoMessage()    {}

func (m *MobileCreative) GetVersion() int32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *MobileCreative) GetBid() string {
	if m != nil && m.Bid != nil {
		return *m.Bid
	}
	return ""
}

func (m *MobileCreative) GetViewType() uint32 {
	if m != nil && m.ViewType != nil {
		return *m.ViewType
	}
	return 0
}

func (m *MobileCreative) GetCreatives() []*MobileCreative_Creative {
	if m != nil {
		return m.Creatives
	}
	return nil
}

func (m *MobileCreative) GetNativeTemplateId() string {
	if m != nil && m.NativeTemplateId != nil {
		return *m.NativeTemplateId
	}
	return ""
}

func (m *MobileCreative) GetAreas() []*MobileCreative_Area {
	if m != nil {
		return m.Areas
	}
	return nil
}

type MobileCreative_Creative struct {
	// 图片地址，暂不支持gif
	ImgUrl *string `protobuf:"bytes,1,opt,name=img_url" json:"img_url,omitempty"`
	// 图片尺寸，格式为：宽x高
	// 例如：320x50
	ImgSize *string `protobuf:"bytes,2,opt,name=img_size" json:"img_size,omitempty"`
	// 创意说明
	// utf-8编码，编码后长度不超过50个字符
	Title *string `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	// 点击地址
	ClickUrl *string `protobuf:"bytes,4,opt,name=click_url" json:"click_url,omitempty"`
	// 创意的最终目标地址
	// 必须以http://或者https://开头
	DestinationUrl *string                         `protobuf:"bytes,5,opt,name=destination_url" json:"destination_url,omitempty"`
	Attr           []*MobileCreative_Creative_Attr `protobuf:"bytes,6,rep,name=attr" json:"attr,omitempty"`
	// 由DSP设置的创意ID
	// 长度不能超过64位
	// 且不能包含空格/回车/换行和其他不可见字符
	CreativeId *string `protobuf:"bytes,7,opt,name=creative_id" json:"creative_id,omitempty"`
	// 预留字段，请暂时忽略
	Category         []int32                                 `protobuf:"varint,8,rep,name=category" json:"category,omitempty"`
	TrackingEvents   *MobileCreative_Creative_TrackingEvents `protobuf:"bytes,9,opt,name=tracking_events" json:"tracking_events,omitempty"`
	XXX_unrecognized []byte                                  `json:"-"`
}

func (m *MobileCreative_Creative) Reset()         { *m = MobileCreative_Creative{} }
func (m *MobileCreative_Creative) String() string { return proto.CompactTextString(m) }
func (*MobileCreative_Creative) ProtoMessage()    {}

func (m *MobileCreative_Creative) GetImgUrl() string {
	if m != nil && m.ImgUrl != nil {
		return *m.ImgUrl
	}
	return ""
}

func (m *MobileCreative_Creative) GetImgSize() string {
	if m != nil && m.ImgSize != nil {
		return *m.ImgSize
	}
	return ""
}

func (m *MobileCreative_Creative) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *MobileCreative_Creative) GetClickUrl() string {
	if m != nil && m.ClickUrl != nil {
		return *m.ClickUrl
	}
	return ""
}

func (m *MobileCreative_Creative) GetDestinationUrl() string {
	if m != nil && m.DestinationUrl != nil {
		return *m.DestinationUrl
	}
	return ""
}

func (m *MobileCreative_Creative) GetAttr() []*MobileCreative_Creative_Attr {
	if m != nil {
		return m.Attr
	}
	return nil
}

func (m *MobileCreative_Creative) GetCreativeId() string {
	if m != nil && m.CreativeId != nil {
		return *m.CreativeId
	}
	return ""
}

func (m *MobileCreative_Creative) GetCategory() []int32 {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *MobileCreative_Creative) GetTrackingEvents() *MobileCreative_Creative_TrackingEvents {
	if m != nil {
		return m.TrackingEvents
	}
	return nil
}

// 属性（描述）信息
type MobileCreative_Creative_Attr struct {
	// 属性名
	// 参见文档 native-template.pdf
	Name *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	// 属性值
	Value            *string `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MobileCreative_Creative_Attr) Reset()         { *m = MobileCreative_Creative_Attr{} }
func (m *MobileCreative_Creative_Attr) String() string { return proto.CompactTextString(m) }
func (*MobileCreative_Creative_Attr) ProtoMessage()    {}

func (m *MobileCreative_Creative_Attr) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *MobileCreative_Creative_Attr) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

// in-app广告事件跟踪
// 用于反馈广告事件信息
type MobileCreative_Creative_TrackingEvents struct {
	// 展现反馈地址
	ImpressionEvent []string `protobuf:"bytes,1,rep,name=impression_event" json:"impression_event,omitempty"`
	// 点击反馈地址
	ClickEvent []string `protobuf:"bytes,2,rep,name=click_event" json:"click_event,omitempty"`
	// app下载完成反馈地址
	DownloadCompleteEvent []string `protobuf:"bytes,3,rep,name=download_complete_event" json:"download_complete_event,omitempty"`
	XXX_unrecognized      []byte   `json:"-"`
}

func (m *MobileCreative_Creative_TrackingEvents) Reset() {
	*m = MobileCreative_Creative_TrackingEvents{}
}
func (m *MobileCreative_Creative_TrackingEvents) String() string { return proto.CompactTextString(m) }
func (*MobileCreative_Creative_TrackingEvents) ProtoMessage()    {}

func (m *MobileCreative_Creative_TrackingEvents) GetImpressionEvent() []string {
	if m != nil {
		return m.ImpressionEvent
	}
	return nil
}

func (m *MobileCreative_Creative_TrackingEvents) GetClickEvent() []string {
	if m != nil {
		return m.ClickEvent
	}
	return nil
}

func (m *MobileCreative_Creative_TrackingEvents) GetDownloadCompleteEvent() []string {
	if m != nil {
		return m.DownloadCompleteEvent
	}
	return nil
}

// 广告区域
type MobileCreative_Area struct {
	// 广告区域id
	Id *int32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	// 创意列表
	Creatives        []*MobileCreative_Creative `protobuf:"bytes,2,rep,name=creatives" json:"creatives,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *MobileCreative_Area) Reset()         { *m = MobileCreative_Area{} }
func (m *MobileCreative_Area) String() string { return proto.CompactTextString(m) }
func (*MobileCreative_Area) ProtoMessage()    {}

func (m *MobileCreative_Area) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *MobileCreative_Area) GetCreatives() []*MobileCreative_Creative {
	if m != nil {
		return m.Creatives
	}
	return nil
}

func init() {
	proto.RegisterType((*BidRequest)(nil), "tanx.BidRequest")
	proto.RegisterType((*BidRequest_Content)(nil), "tanx.BidRequest.Content")
	proto.RegisterType((*BidRequest_AdzInfo)(nil), "tanx.BidRequest.AdzInfo")
	proto.RegisterType((*BidRequest_AdzInfo_BuyerRule)(nil), "tanx.BidRequest.AdzInfo.BuyerRule")
	proto.RegisterType((*BidRequest_AdzInfo_Video)(nil), "tanx.BidRequest.AdzInfo.Video")
	proto.RegisterType((*BidRequest_AdzInfo_Deal)(nil), "tanx.BidRequest.AdzInfo.Deal")
	proto.RegisterType((*BidRequest_UserAttribute)(nil), "tanx.BidRequest.UserAttribute")
	proto.RegisterType((*BidRequest_PrivateInfo)(nil), "tanx.BidRequest.PrivateInfo")
	proto.RegisterType((*BidRequest_Mobile)(nil), "tanx.BidRequest.Mobile")
	proto.RegisterType((*BidRequest_Mobile_Device)(nil), "tanx.BidRequest.Mobile.Device")
	proto.RegisterType((*BidRequest_Mobile_AppCategory)(nil), "tanx.BidRequest.Mobile.AppCategory")
	proto.RegisterType((*BidRequest_Mobile_NativeAdTemplate)(nil), "tanx.BidRequest.Mobile.NativeAdTemplate")
	proto.RegisterType((*BidRequest_Mobile_NativeAdTemplate_Area)(nil), "tanx.BidRequest.Mobile.NativeAdTemplate.Area")
	proto.RegisterType((*BidRequest_Mobile_NativeAdTemplate_Area_Creative)(nil), "tanx.BidRequest.Mobile.NativeAdTemplate.Area.Creative")
	proto.RegisterType((*BidRequest_ContentCategory)(nil), "tanx.BidRequest.ContentCategory")
	proto.RegisterType((*BidRequest_Video)(nil), "tanx.BidRequest.Video")
	proto.RegisterType((*BidRequest_Video_Content)(nil), "tanx.BidRequest.Video.Content")
	proto.RegisterType((*BidRequest_Deal)(nil), "tanx.BidRequest.Deal")
	proto.RegisterType((*BidRequest_Deal_PreferredDeal)(nil), "tanx.BidRequest.Deal.PreferredDeal")
	proto.RegisterType((*BidRequest_Deal_PrivateAuction)(nil), "tanx.BidRequest.Deal.PrivateAuction")
	proto.RegisterType((*BidRequest_Deal_PrivateAuction_BuyerRule)(nil), "tanx.BidRequest.Deal.PrivateAuction.BuyerRule")
	proto.RegisterType((*BidRequest_CrowdCategory)(nil), "tanx.BidRequest.CrowdCategory")
	proto.RegisterType((*BidResponse)(nil), "tanx.BidResponse")
	proto.RegisterType((*BidResponse_Ads)(nil), "tanx.BidResponse.Ads")
	proto.RegisterType((*BidResponse_Ads_Video)(nil), "tanx.BidResponse.Ads.Video")
	proto.RegisterType((*BidResult)(nil), "tanx.BidResult")
	proto.RegisterType((*BidResult_Res)(nil), "tanx.BidResult.Res")
	proto.RegisterType((*MobileCreative)(nil), "tanx.MobileCreative")
	proto.RegisterType((*MobileCreative_Creative)(nil), "tanx.MobileCreative.Creative")
	proto.RegisterType((*MobileCreative_Creative_Attr)(nil), "tanx.MobileCreative.Creative.Attr")
	proto.RegisterType((*MobileCreative_Creative_TrackingEvents)(nil), "tanx.MobileCreative.Creative.TrackingEvents")
	proto.RegisterType((*MobileCreative_Area)(nil), "tanx.MobileCreative.Area")
	proto.RegisterEnum("tanx.BidRequest_AdzInfo_Location", BidRequest_AdzInfo_Location_name, BidRequest_AdzInfo_Location_value)
	proto.RegisterEnum("tanx.BidRequest_AdzInfo_ViewScreen", BidRequest_AdzInfo_ViewScreen_name, BidRequest_AdzInfo_ViewScreen_value)
	proto.RegisterEnum("tanx.BidRequest_AdzInfo_Deal_DealType", BidRequest_AdzInfo_Deal_DealType_name, BidRequest_AdzInfo_Deal_DealType_value)
	proto.RegisterEnum("tanx.BidRequest_Mobile_Device_ScreenOrientation", BidRequest_Mobile_Device_ScreenOrientation_name, BidRequest_Mobile_Device_ScreenOrientation_value)
	proto.RegisterEnum("tanx.BidRequest_Video_VideoFormat", BidRequest_Video_VideoFormat_name, BidRequest_Video_VideoFormat_value)
}
