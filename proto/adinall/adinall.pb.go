// Code generated by protoc-gen-go.
// source: adinall.proto
// DO NOT EDIT!

/*
Package adinall is a generated protocol buffer package.

聚告PMP DSP接口

It is generated from these files:
	adinall.proto

It has these top-level messages:
	BidRequest
	BidResponse
*/
package adinall

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 推广位在页面所在的屏数
// 0: 未识别; 1-5: 第1-5屏; 6: 第六屏及以外
type BidRequest_AdInfo_ViewScreen int32

const (
	BidRequest_AdInfo_SCREEN_NA     BidRequest_AdInfo_ViewScreen = 0
	BidRequest_AdInfo_SCREEN_FIRST  BidRequest_AdInfo_ViewScreen = 1
	BidRequest_AdInfo_SCREEN_SECOND BidRequest_AdInfo_ViewScreen = 2
	BidRequest_AdInfo_SCREEN_THIRD  BidRequest_AdInfo_ViewScreen = 3
	BidRequest_AdInfo_SCREEN_FOURTH BidRequest_AdInfo_ViewScreen = 4
	BidRequest_AdInfo_SCREEN_FIFTH  BidRequest_AdInfo_ViewScreen = 5
	BidRequest_AdInfo_SCREEN_OTHER  BidRequest_AdInfo_ViewScreen = 6
)

var BidRequest_AdInfo_ViewScreen_name = map[int32]string{
	0: "SCREEN_NA",
	1: "SCREEN_FIRST",
	2: "SCREEN_SECOND",
	3: "SCREEN_THIRD",
	4: "SCREEN_FOURTH",
	5: "SCREEN_FIFTH",
	6: "SCREEN_OTHER",
}
var BidRequest_AdInfo_ViewScreen_value = map[string]int32{
	"SCREEN_NA":     0,
	"SCREEN_FIRST":  1,
	"SCREEN_SECOND": 2,
	"SCREEN_THIRD":  3,
	"SCREEN_FOURTH": 4,
	"SCREEN_FIFTH":  5,
	"SCREEN_OTHER":  6,
}

func (x BidRequest_AdInfo_ViewScreen) Enum() *BidRequest_AdInfo_ViewScreen {
	p := new(BidRequest_AdInfo_ViewScreen)
	*p = x
	return p
}
func (x BidRequest_AdInfo_ViewScreen) String() string {
	return proto.EnumName(BidRequest_AdInfo_ViewScreen_name, int32(x))
}
func (x *BidRequest_AdInfo_ViewScreen) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_AdInfo_ViewScreen_value, data, "BidRequest_AdInfo_ViewScreen")
	if err != nil {
		return err
	}
	*x = BidRequest_AdInfo_ViewScreen(value)
	return nil
}

type BidRequest struct {
	// 当前协议版本号, 目前版本号为2
	Version *int32 `protobuf:"varint,1,req,name=version" json:"version,omitempty"`
	// 聚告PMP生成的唯一竞价ID, 32字节的字符串
	Bid *string `protobuf:"bytes,2,req,name=bid" json:"bid,omitempty"`
	// 如果不为0, 那么这是一个测试请求
	// DSP需要返回一个正常填写的应答
	// 聚告PMP不会展现给用户, 且不会对该次请求计费
	IsTest *uint32 `protobuf:"varint,3,opt,name=is_test,def=0" json:"is_test,omitempty"`
	// 如果不为0, 那么这是一个ping请求
	// DSP需要返回一个空的应答
	IsPing *uint32 `protobuf:"varint,4,opt,name=is_ping,def=0" json:"is_ping,omitempty"`
	// 用户的IP地址, ipv4
	// 例如：192.168.1.1
	// 当前用户的IP地址(如192.168.1.1)
	Ip *string `protobuf:"bytes,5,opt,name=ip" json:"ip,omitempty"`
	// 用户的浏览器类型, 来源于 HTTP 请求头部的 User-Agent
	UserAgent *string `protobuf:"bytes,6,opt,name=user_agent" json:"user_agent,omitempty"`
	// http 请求 header 中的 referer 信息
	Referer *string `protobuf:"bytes,7,opt,name=referer" json:"referer,omitempty"`
	// 用户的默认系统语言
	Language *string `protobuf:"bytes,8,opt,name=language" json:"language,omitempty"`
	// 用户的屏幕尺寸, 格式为“长 x 宽”, 例如1024x768
	ScreenSize *string `protobuf:"bytes,9,opt,name=screen_size" json:"screen_size,omitempty"`
	// 用户的浏览器flash版本, 0为未知
	FlashVersion *int32 `protobuf:"varint,10,opt,name=flash_version,def=0" json:"flash_version,omitempty"`
	// 用户在聚告PMP平台中的唯一ID（当前Cookie的Visitor ID）
	VisitorId *string `protobuf:"bytes,11,opt,name=visitor_id" json:"visitor_id,omitempty"`
	// 用户的地理位置信息(国家,城市)
	Geo *string `protobuf:"bytes,12,opt,name=geo" json:"geo,omitempty"`
	// 媒体域名
	Domain *string `protobuf:"bytes,13,opt,name=domain" json:"domain,omitempty"`
	// 广告位所在的页面URL
	Url *string `protobuf:"bytes,14,opt,name=url" json:"url,omitempty"`
	// 标识一个页面pv
	// 对于同一个页面的单个PV，聚告PMP会生成一个相同且唯一的page_session_id
	PageSessionId *string `protobuf:"bytes,15,opt,name=page_session_id" json:"page_session_id,omitempty"`
	// 广告位所在媒体的分类
	// 参见数据字典 dict-site-category.txt
	Category []uint32 `protobuf:"varint,16,rep,name=category" json:"category,omitempty"`
	// 媒体用户的人群标签
	// 参见数据字典 dict-user-segment.txt
	UserSegment []string `protobuf:"bytes,17,rep,name=user_segment" json:"user_segment,omitempty"`
	// 用户的内容标签
	// 参见数据字典 dict-content-tags.txt
	ContentTags []string `protobuf:"bytes,18,rep,name=content_tags" json:"content_tags,omitempty"`
	// 流量所属来源, 预留字段, 目前为0
	// adx type 0表示SSP流量
	AdxType *uint32              `protobuf:"varint,19,opt,name=adx_type,def=0" json:"adx_type,omitempty"`
	Adinfo  []*BidRequest_AdInfo `protobuf:"bytes,20,rep,name=adinfo" json:"adinfo,omitempty"`
	App     *BidRequest_App      `protobuf:"bytes,22,opt,name=app" json:"app,omitempty"`
	// 所有该dsp参与的交易
	Deals            *BidRequest_Deal         `protobuf:"bytes,23,opt,name=deals" json:"deals,omitempty"`
	AdinallVideo     *BidRequest_AdinallVideo `protobuf:"bytes,24,opt,name=adinall_video" json:"adinall_video,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *BidRequest) Reset()         { *m = BidRequest{} }
func (m *BidRequest) String() string { return proto.CompactTextString(m) }
func (*BidRequest) ProtoMessage()    {}

const Default_BidRequest_IsTest uint32 = 0
const Default_BidRequest_IsPing uint32 = 0
const Default_BidRequest_FlashVersion int32 = 0
const Default_BidRequest_AdxType uint32 = 0

func (m *BidRequest) GetVersion() int32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *BidRequest) GetBid() string {
	if m != nil && m.Bid != nil {
		return *m.Bid
	}
	return ""
}

func (m *BidRequest) GetIsTest() uint32 {
	if m != nil && m.IsTest != nil {
		return *m.IsTest
	}
	return Default_BidRequest_IsTest
}

func (m *BidRequest) GetIsPing() uint32 {
	if m != nil && m.IsPing != nil {
		return *m.IsPing
	}
	return Default_BidRequest_IsPing
}

func (m *BidRequest) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *BidRequest) GetUserAgent() string {
	if m != nil && m.UserAgent != nil {
		return *m.UserAgent
	}
	return ""
}

func (m *BidRequest) GetReferer() string {
	if m != nil && m.Referer != nil {
		return *m.Referer
	}
	return ""
}

func (m *BidRequest) GetLanguage() string {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return ""
}

func (m *BidRequest) GetScreenSize() string {
	if m != nil && m.ScreenSize != nil {
		return *m.ScreenSize
	}
	return ""
}

func (m *BidRequest) GetFlashVersion() int32 {
	if m != nil && m.FlashVersion != nil {
		return *m.FlashVersion
	}
	return Default_BidRequest_FlashVersion
}

func (m *BidRequest) GetVisitorId() string {
	if m != nil && m.VisitorId != nil {
		return *m.VisitorId
	}
	return ""
}

func (m *BidRequest) GetGeo() string {
	if m != nil && m.Geo != nil {
		return *m.Geo
	}
	return ""
}

func (m *BidRequest) GetDomain() string {
	if m != nil && m.Domain != nil {
		return *m.Domain
	}
	return ""
}

func (m *BidRequest) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *BidRequest) GetPageSessionId() string {
	if m != nil && m.PageSessionId != nil {
		return *m.PageSessionId
	}
	return ""
}

func (m *BidRequest) GetCategory() []uint32 {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *BidRequest) GetUserSegment() []string {
	if m != nil {
		return m.UserSegment
	}
	return nil
}

func (m *BidRequest) GetContentTags() []string {
	if m != nil {
		return m.ContentTags
	}
	return nil
}

func (m *BidRequest) GetAdxType() uint32 {
	if m != nil && m.AdxType != nil {
		return *m.AdxType
	}
	return Default_BidRequest_AdxType
}

func (m *BidRequest) GetAdinfo() []*BidRequest_AdInfo {
	if m != nil {
		return m.Adinfo
	}
	return nil
}

func (m *BidRequest) GetApp() *BidRequest_App {
	if m != nil {
		return m.App
	}
	return nil
}

func (m *BidRequest) GetDeals() *BidRequest_Deal {
	if m != nil {
		return m.Deals
	}
	return nil
}

func (m *BidRequest) GetAdinallVideo() *BidRequest_AdinallVideo {
	if m != nil {
		return m.AdinallVideo
	}
	return nil
}

type BidRequest_AdInfo struct {
	// 媒体在聚告PMP中的唯一ID
	MediaId *string `protobuf:"bytes,1,req,name=media_id" json:"media_id,omitempty"`
	// 当前页面广告位在聚告PMP中唯一的ID
	Adid *uint32 `protobuf:"varint,2,req,name=adid" json:"adid,omitempty"`
	// 媒体广告位在聚告PMP中的类型(1 - PC, 2 - WAP, 3 - APP)
	MediaDevice *uint32 `protobuf:"varint,3,opt,name=media_device" json:"media_device,omitempty"`
	// 广告位展现形式(1:固定, 3:弹窗)
	// 参见数据字典 dict-view-type.txt
	ViewType *uint32 `protobuf:"varint,4,req,name=view_type" json:"view_type,omitempty"`
	// 广告位的尺寸: 宽 x 高
	// 例如: 300x250
	Size *string `protobuf:"bytes,5,req,name=size" json:"size,omitempty"`
	// 最低竞标价格，货币单位为人民币，数值含义为分/千次展现
	MinCpmPrice *uint32 `protobuf:"varint,6,req,name=min_cpm_price" json:"min_cpm_price,omitempty"`
	// 媒体禁止的敏感类目
	// 参见数据字典 dict-sensitive-category.txt
	ExcludeSensitiveCategory []uint32 `protobuf:"varint,7,rep,name=exclude_sensitive_category" json:"exclude_sensitive_category,omitempty"`
	// 媒体禁止的目标主域名, 多个情况下以半角逗号分隔
	ExcludeDomain []string `protobuf:"bytes,8,rep,name=exclude_domain" json:"exclude_domain,omitempty"`
	// 媒体禁止的DSP(buyer)买家ID
	ExcludeBuyerId []string                      `protobuf:"bytes,9,rep,name=exclude_buyer_id" json:"exclude_buyer_id,omitempty"`
	ViewScreen     *BidRequest_AdInfo_ViewScreen `protobuf:"varint,10,opt,name=view_screen,enum=adinall.BidRequest_AdInfo_ViewScreen" json:"view_screen,omitempty"`
	// 所属的交易类型(1:竞价, 2:固定价格)
	TransactionType  *uint32 `protobuf:"varint,11,req,name=transaction_type" json:"transaction_type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BidRequest_AdInfo) Reset()         { *m = BidRequest_AdInfo{} }
func (m *BidRequest_AdInfo) String() string { return proto.CompactTextString(m) }
func (*BidRequest_AdInfo) ProtoMessage()    {}

func (m *BidRequest_AdInfo) GetMediaId() string {
	if m != nil && m.MediaId != nil {
		return *m.MediaId
	}
	return ""
}

func (m *BidRequest_AdInfo) GetAdid() uint32 {
	if m != nil && m.Adid != nil {
		return *m.Adid
	}
	return 0
}

func (m *BidRequest_AdInfo) GetMediaDevice() uint32 {
	if m != nil && m.MediaDevice != nil {
		return *m.MediaDevice
	}
	return 0
}

func (m *BidRequest_AdInfo) GetViewType() uint32 {
	if m != nil && m.ViewType != nil {
		return *m.ViewType
	}
	return 0
}

func (m *BidRequest_AdInfo) GetSize() string {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return ""
}

func (m *BidRequest_AdInfo) GetMinCpmPrice() uint32 {
	if m != nil && m.MinCpmPrice != nil {
		return *m.MinCpmPrice
	}
	return 0
}

func (m *BidRequest_AdInfo) GetExcludeSensitiveCategory() []uint32 {
	if m != nil {
		return m.ExcludeSensitiveCategory
	}
	return nil
}

func (m *BidRequest_AdInfo) GetExcludeDomain() []string {
	if m != nil {
		return m.ExcludeDomain
	}
	return nil
}

func (m *BidRequest_AdInfo) GetExcludeBuyerId() []string {
	if m != nil {
		return m.ExcludeBuyerId
	}
	return nil
}

func (m *BidRequest_AdInfo) GetViewScreen() BidRequest_AdInfo_ViewScreen {
	if m != nil && m.ViewScreen != nil {
		return *m.ViewScreen
	}
	return BidRequest_AdInfo_SCREEN_NA
}

func (m *BidRequest_AdInfo) GetTransactionType() uint32 {
	if m != nil && m.TransactionType != nil {
		return *m.TransactionType
	}
	return 0
}

type BidRequest_App struct {
	// 媒体投放广告类型
	// 1：横幅；2：开屏；3：插屏；4：原生信息流
	Adtype           *uint32                    `protobuf:"varint,1,req,name=adtype" json:"adtype,omitempty"`
	Device           *BidRequest_App_DeviceInfo `protobuf:"bytes,2,req,name=device" json:"device,omitempty"`
	Appinfo          *BidRequest_App_AppInfo    `protobuf:"bytes,3,req,name=appinfo" json:"appinfo,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *BidRequest_App) Reset()         { *m = BidRequest_App{} }
func (m *BidRequest_App) String() string { return proto.CompactTextString(m) }
func (*BidRequest_App) ProtoMessage()    {}

func (m *BidRequest_App) GetAdtype() uint32 {
	if m != nil && m.Adtype != nil {
		return *m.Adtype
	}
	return 0
}

func (m *BidRequest_App) GetDevice() *BidRequest_App_DeviceInfo {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *BidRequest_App) GetAppinfo() *BidRequest_App_AppInfo {
	if m != nil {
		return m.Appinfo
	}
	return nil
}

type BidRequest_App_DeviceInfo struct {
	// 用户的设备系统类型
	// 1：安卓系统；2：ios系统; 3:未知; 4:window phone
	Os *uint32 `protobuf:"varint,3,req,name=os" json:"os,omitempty"`
	// 用户设备系统的版本号
	// 例如：7.0.2
	OsVersion *string `protobuf:"bytes,4,req,name=os_version" json:"os_version,omitempty"`
	// 用户设备运营商
	// 1：中国移动；2：中国联通；3：中国电信; 4:未知
	Carrier *uint32 `protobuf:"varint,5,req,name=carrier" json:"carrier,omitempty"`
	// 用户设备网络连接类型
	// 1：2g；2：3g；3：wifi；4：4g; 5：未识别；
	Conn *uint32 `protobuf:"varint,6,req,name=conn" json:"conn,omitempty"`
	// 用户设备屏幕的密度，预留字段
	// 千分位表示，默认1000
	Density *uint32 `protobuf:"varint,7,opt,name=density" json:"density,omitempty"`
	// 用户设备制造厂商
	// 例如：nokia, samsung
	Brand *string `protobuf:"bytes,8,req,name=brand" json:"brand,omitempty"`
	// 用户设备型号
	// 例如：n70, galaxy
	Model *string `protobuf:"bytes,9,req,name=model" json:"model,omitempty"`
	// 用户设备唯一标识
	// 对于android设备，该值是设备的imei加密后的值
	// 对于ios设备，该值是设备的idfa加密后的值
	DeviceId *string `protobuf:"bytes,10,req,name=device_id" json:"device_id,omitempty"`
	// 安卓设备的Android ID
	// 对于android设备，该值是设备的Android ID加密后的值
	// 对于ios设备，该值是设备的idfa加密后的值
	Anid *string `protobuf:"bytes,11,req,name=anid" json:"anid,omitempty"`
	// 用户设备的mac地址
	// 对于ios(6.0及以上)设备，该值为idfa加密后的值
	// 对于ios(6.0以下)设备，该值为mac地址加密后的值
	// 对于android设备，该值为mac地址加密后值
	Mac *string `protobuf:"bytes,12,req,name=mac" json:"mac,omitempty"`
	// 用户设备的屏幕宽度，以像素为单位
	Dvw *uint32 `protobuf:"varint,13,req,name=dvw" json:"dvw,omitempty"`
	// 用户设备的屏幕高度，以像素为单位
	Dvh *uint32 `protobuf:"varint,14,req,name=dvh" json:"dvh,omitempty"`
	// 用户的设备类型
	// 1：移动手机；2：平板电脑; 3:未知
	Devicetype *uint32 `protobuf:"varint,15,req,name=devicetype" json:"devicetype,omitempty"`
	// 用户设备的屏幕方向
	// 1：竖屏；2：横屏；3：未知；
	Orientation *uint32 `protobuf:"varint,16,req,name=orientation" json:"orientation,omitempty"`
	// 用户设备所在地理位置的经度（小数点格式）
	// 例如：116.41667
	Lon *string `protobuf:"bytes,17,opt,name=lon" json:"lon,omitempty"`
	// 用户设备所在位置的经度（小数点格式）
	// 例如：39.91667
	Lat *string `protobuf:"bytes,18,opt,name=lat" json:"lat,omitempty"`
	// 是否支持Javascript脚本(1：支持；2：不支持)
	Js *uint32 `protobuf:"varint,19,opt,name=js" json:"js,omitempty"`
	// 设备的语言设置，使用alpha-2/ISO 639-1
	Language         *string `protobuf:"bytes,20,opt,name=language" json:"language,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BidRequest_App_DeviceInfo) Reset()         { *m = BidRequest_App_DeviceInfo{} }
func (m *BidRequest_App_DeviceInfo) String() string { return proto.CompactTextString(m) }
func (*BidRequest_App_DeviceInfo) ProtoMessage()    {}

func (m *BidRequest_App_DeviceInfo) GetOs() uint32 {
	if m != nil && m.Os != nil {
		return *m.Os
	}
	return 0
}

func (m *BidRequest_App_DeviceInfo) GetOsVersion() string {
	if m != nil && m.OsVersion != nil {
		return *m.OsVersion
	}
	return ""
}

func (m *BidRequest_App_DeviceInfo) GetCarrier() uint32 {
	if m != nil && m.Carrier != nil {
		return *m.Carrier
	}
	return 0
}

func (m *BidRequest_App_DeviceInfo) GetConn() uint32 {
	if m != nil && m.Conn != nil {
		return *m.Conn
	}
	return 0
}

func (m *BidRequest_App_DeviceInfo) GetDensity() uint32 {
	if m != nil && m.Density != nil {
		return *m.Density
	}
	return 0
}

func (m *BidRequest_App_DeviceInfo) GetBrand() string {
	if m != nil && m.Brand != nil {
		return *m.Brand
	}
	return ""
}

func (m *BidRequest_App_DeviceInfo) GetModel() string {
	if m != nil && m.Model != nil {
		return *m.Model
	}
	return ""
}

func (m *BidRequest_App_DeviceInfo) GetDeviceId() string {
	if m != nil && m.DeviceId != nil {
		return *m.DeviceId
	}
	return ""
}

func (m *BidRequest_App_DeviceInfo) GetAnid() string {
	if m != nil && m.Anid != nil {
		return *m.Anid
	}
	return ""
}

func (m *BidRequest_App_DeviceInfo) GetMac() string {
	if m != nil && m.Mac != nil {
		return *m.Mac
	}
	return ""
}

func (m *BidRequest_App_DeviceInfo) GetDvw() uint32 {
	if m != nil && m.Dvw != nil {
		return *m.Dvw
	}
	return 0
}

func (m *BidRequest_App_DeviceInfo) GetDvh() uint32 {
	if m != nil && m.Dvh != nil {
		return *m.Dvh
	}
	return 0
}

func (m *BidRequest_App_DeviceInfo) GetDevicetype() uint32 {
	if m != nil && m.Devicetype != nil {
		return *m.Devicetype
	}
	return 0
}

func (m *BidRequest_App_DeviceInfo) GetOrientation() uint32 {
	if m != nil && m.Orientation != nil {
		return *m.Orientation
	}
	return 0
}

func (m *BidRequest_App_DeviceInfo) GetLon() string {
	if m != nil && m.Lon != nil {
		return *m.Lon
	}
	return ""
}

func (m *BidRequest_App_DeviceInfo) GetLat() string {
	if m != nil && m.Lat != nil {
		return *m.Lat
	}
	return ""
}

func (m *BidRequest_App_DeviceInfo) GetJs() uint32 {
	if m != nil && m.Js != nil {
		return *m.Js
	}
	return 0
}

func (m *BidRequest_App_DeviceInfo) GetLanguage() string {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return ""
}

type BidRequest_App_AppInfo struct {
	// APP的主包名
	// 例如：com.moji.MojiWeather
	Pckname *string `protobuf:"bytes,1,req,name=pckname" json:"pckname,omitempty"`
	// 应用程序名称
	// 例如：陌陌
	// 先base64解码后再进行urldecode解码得到名称
	Appname *string `protobuf:"bytes,2,req,name=appname" json:"appname,omitempty"`
	// 应用程序的类型ID
	// 参见数据字典 dict-app-category.txt
	CategoryId       *uint32 `protobuf:"varint,3,req,name=category_id" json:"category_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BidRequest_App_AppInfo) Reset()         { *m = BidRequest_App_AppInfo{} }
func (m *BidRequest_App_AppInfo) String() string { return proto.CompactTextString(m) }
func (*BidRequest_App_AppInfo) ProtoMessage()    {}

func (m *BidRequest_App_AppInfo) GetPckname() string {
	if m != nil && m.Pckname != nil {
		return *m.Pckname
	}
	return ""
}

func (m *BidRequest_App_AppInfo) GetAppname() string {
	if m != nil && m.Appname != nil {
		return *m.Appname
	}
	return ""
}

func (m *BidRequest_App_AppInfo) GetCategoryId() uint32 {
	if m != nil && m.CategoryId != nil {
		return *m.CategoryId
	}
	return 0
}

type BidRequest_Deal struct {
	PreferDeal       *BidRequest_Deal_PreferredDeal  `protobuf:"bytes,1,opt,name=prefer_deal" json:"prefer_deal,omitempty"`
	PrivAuc          *BidRequest_Deal_PrivateAuction `protobuf:"bytes,2,opt,name=priv_auc" json:"priv_auc,omitempty"`
	XXX_unrecognized []byte                          `json:"-"`
}

func (m *BidRequest_Deal) Reset()         { *m = BidRequest_Deal{} }
func (m *BidRequest_Deal) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Deal) ProtoMessage()    {}

func (m *BidRequest_Deal) GetPreferDeal() *BidRequest_Deal_PreferredDeal {
	if m != nil {
		return m.PreferDeal
	}
	return nil
}

func (m *BidRequest_Deal) GetPrivAuc() *BidRequest_Deal_PrivateAuction {
	if m != nil {
		return m.PrivAuc
	}
	return nil
}

// 优先交易
type BidRequest_Deal_PreferredDeal struct {
	Dealid *uint32 `protobuf:"varint,1,req,name=dealid" json:"dealid,omitempty"`
	// 允许的广告主白名单，不设置则默认所有均允许
	AdvertiserIds []uint32 `protobuf:"varint,2,rep,name=advertiser_ids" json:"advertiser_ids,omitempty"`
	// 优先交易固定价格
	FixCpmPrice      *uint32 `protobuf:"varint,3,opt,name=fix_cpm_price" json:"fix_cpm_price,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BidRequest_Deal_PreferredDeal) Reset()         { *m = BidRequest_Deal_PreferredDeal{} }
func (m *BidRequest_Deal_PreferredDeal) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Deal_PreferredDeal) ProtoMessage()    {}

func (m *BidRequest_Deal_PreferredDeal) GetDealid() uint32 {
	if m != nil && m.Dealid != nil {
		return *m.Dealid
	}
	return 0
}

func (m *BidRequest_Deal_PreferredDeal) GetAdvertiserIds() []uint32 {
	if m != nil {
		return m.AdvertiserIds
	}
	return nil
}

func (m *BidRequest_Deal_PreferredDeal) GetFixCpmPrice() uint32 {
	if m != nil && m.FixCpmPrice != nil {
		return *m.FixCpmPrice
	}
	return 0
}

// 私有竞价
type BidRequest_Deal_PrivateAuction struct {
	Dealid           *uint32                                     `protobuf:"varint,1,req,name=dealid" json:"dealid,omitempty"`
	BuyerRules       []*BidRequest_Deal_PrivateAuction_BuyerRule `protobuf:"bytes,2,rep,name=buyer_rules" json:"buyer_rules,omitempty"`
	XXX_unrecognized []byte                                      `json:"-"`
}

func (m *BidRequest_Deal_PrivateAuction) Reset()         { *m = BidRequest_Deal_PrivateAuction{} }
func (m *BidRequest_Deal_PrivateAuction) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Deal_PrivateAuction) ProtoMessage()    {}

func (m *BidRequest_Deal_PrivateAuction) GetDealid() uint32 {
	if m != nil && m.Dealid != nil {
		return *m.Dealid
	}
	return 0
}

func (m *BidRequest_Deal_PrivateAuction) GetBuyerRules() []*BidRequest_Deal_PrivateAuction_BuyerRule {
	if m != nil {
		return m.BuyerRules
	}
	return nil
}

// 购买的规则
type BidRequest_Deal_PrivateAuction_BuyerRule struct {
	// 允许的广告主白名单，不设置则默认所有均允许
	AdvertiserIds []uint32 `protobuf:"varint,1,rep,name=advertiser_ids" json:"advertiser_ids,omitempty"`
	// 私有竞价底价
	MinCpmPrice      *uint32 `protobuf:"varint,2,opt,name=min_cpm_price" json:"min_cpm_price,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BidRequest_Deal_PrivateAuction_BuyerRule) Reset() {
	*m = BidRequest_Deal_PrivateAuction_BuyerRule{}
}
func (m *BidRequest_Deal_PrivateAuction_BuyerRule) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Deal_PrivateAuction_BuyerRule) ProtoMessage()    {}

func (m *BidRequest_Deal_PrivateAuction_BuyerRule) GetAdvertiserIds() []uint32 {
	if m != nil {
		return m.AdvertiserIds
	}
	return nil
}

func (m *BidRequest_Deal_PrivateAuction_BuyerRule) GetMinCpmPrice() uint32 {
	if m != nil && m.MinCpmPrice != nil {
		return *m.MinCpmPrice
	}
	return 0
}

// 聚告WAP或APP端 H5扩展视频模式，WIFI情况下将自动播放，非WIFI情况下以常规广告内容填充
type BidRequest_AdinallVideo struct {
	// 视频最长秒数，单位：秒
	MaxVideoDuration *uint32 `protobuf:"varint,1,req,name=max_video_duration" json:"max_video_duration,omitempty"`
	// 聚告视频格式, 目前默认mp4
	Mime *string `protobuf:"bytes,2,req,name=mime" json:"mime,omitempty"`
	// 聚告视频尺寸比例, 例如：4:3或16:9
	Size             *string `protobuf:"bytes,3,req,name=size" json:"size,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BidRequest_AdinallVideo) Reset()         { *m = BidRequest_AdinallVideo{} }
func (m *BidRequest_AdinallVideo) String() string { return proto.CompactTextString(m) }
func (*BidRequest_AdinallVideo) ProtoMessage()    {}

func (m *BidRequest_AdinallVideo) GetMaxVideoDuration() uint32 {
	if m != nil && m.MaxVideoDuration != nil {
		return *m.MaxVideoDuration
	}
	return 0
}

func (m *BidRequest_AdinallVideo) GetMime() string {
	if m != nil && m.Mime != nil {
		return *m.Mime
	}
	return ""
}

func (m *BidRequest_AdinallVideo) GetSize() string {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return ""
}

type BidResponse struct {
	// 当前协议版本号，目前为2
	Version *int32 `protobuf:"varint,1,req,name=version" json:"version,omitempty"`
	// 请填充BidRequest中的bid, 32字节的字符串
	Bid              *string            `protobuf:"bytes,2,req,name=bid" json:"bid,omitempty"`
	Ads              []*BidResponse_Ads `protobuf:"bytes,3,rep,name=ads" json:"ads,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *BidResponse) Reset()         { *m = BidResponse{} }
func (m *BidResponse) String() string { return proto.CompactTextString(m) }
func (*BidResponse) ProtoMessage()    {}

func (m *BidResponse) GetVersion() int32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *BidResponse) GetBid() string {
	if m != nil && m.Bid != nil {
		return *m.Bid
	}
	return ""
}

func (m *BidResponse) GetAds() []*BidResponse_Ads {
	if m != nil {
		return m.Ads
	}
	return nil
}

// ------------------------------------------- 广告内容信息
// 若DSP不对本次请求报价，则不要设置本字段
type BidResponse_Ads struct {
	// 请填充BidRequest中的adid
	Adid *uint32 `protobuf:"varint,1,req,name=adid" json:"adid,omitempty"`
	// 广告竞标价格（人民币）, 单位为分/千次展现
	// 该字段值不允许为0
	// 且不能低于推广位最低竞标价格（BidRequest.min_cpm_price）
	MaxCpmPrice *uint32 `protobuf:"varint,2,req,name=max_cpm_price" json:"max_cpm_price,omitempty"`
	// 创意在DSP中的唯一ID, 仅收集(用于数据对比和创意审核)
	CreativeId *string `protobuf:"bytes,3,opt,name=creative_id" json:"creative_id,omitempty"`
	// DSP声明的本次广告类型
	// 参见数据字典 dict-creative-type.txt
	CreativeType *uint32 `protobuf:"varint,4,req,name=creative_type" json:"creative_type,omitempty"`
	// DSP声明的本次广告所属的广告行业类目
	// 参见数据字典 dict-content-tags.txt 或 dict-app-content-tags.txt
	Category []uint32 `protobuf:"varint,5,rep,name=category" json:"category,omitempty"`
	// 广告缩略图地址, 用于在聚告PMP统计分析
	ThumbImgUrl *string `protobuf:"bytes,6,opt,name=thumb_img_url" json:"thumb_img_url,omitempty"`
	// 广告 landing page 主域名
	AdDomain *string `protobuf:"bytes,7,opt,name=ad_domain" json:"ad_domain,omitempty"`
	// 广告代码HTML片段
	// 点击宏 %%AD_CLICK_URL%%
	// 聚告PMP会根据点击宏替换HTML片段中的内容，APP不建议使用改字段并请填充1
	// (例如: <a href="%%AD_CLICK_URL%%http://www.dsp.com/ad.html"><img src="http://www.dsp.com/ad.jpg" /></a> 替换为 <a href="http://cm.adinall.com/?dspid=123456&target=http://www.dsp.com/ad.html"><img src="http://www.dsp.com/ad.jpg" /></a>)
	// 价格宏，具体见开发文档
	HtmlSnippet *string `protobuf:"bytes,8,req,name=html_snippet" json:"html_snippet,omitempty"`
	// DSP买家ID, 与BidRequest中exclude_buyer_id对应
	BuyerId *string `protobuf:"bytes,9,opt,name=buyer_id" json:"buyer_id,omitempty"`
	// 参与PMP竞价的id, 要和请求中Deal定义中的dealid一致
	// 如果不设置标识参与公开竞价
	Dealid           *uint32                       `protobuf:"varint,10,opt,name=dealid" json:"dealid,omitempty"`
	App              []*BidResponse_Ads_App        `protobuf:"bytes,11,rep,name=app" json:"app,omitempty"`
	AdinallVideo     *BidResponse_Ads_AdinallVideo `protobuf:"bytes,12,opt,name=adinall_video" json:"adinall_video,omitempty"`
	XXX_unrecognized []byte                        `json:"-"`
}

func (m *BidResponse_Ads) Reset()         { *m = BidResponse_Ads{} }
func (m *BidResponse_Ads) String() string { return proto.CompactTextString(m) }
func (*BidResponse_Ads) ProtoMessage()    {}

func (m *BidResponse_Ads) GetAdid() uint32 {
	if m != nil && m.Adid != nil {
		return *m.Adid
	}
	return 0
}

func (m *BidResponse_Ads) GetMaxCpmPrice() uint32 {
	if m != nil && m.MaxCpmPrice != nil {
		return *m.MaxCpmPrice
	}
	return 0
}

func (m *BidResponse_Ads) GetCreativeId() string {
	if m != nil && m.CreativeId != nil {
		return *m.CreativeId
	}
	return ""
}

func (m *BidResponse_Ads) GetCreativeType() uint32 {
	if m != nil && m.CreativeType != nil {
		return *m.CreativeType
	}
	return 0
}

func (m *BidResponse_Ads) GetCategory() []uint32 {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *BidResponse_Ads) GetThumbImgUrl() string {
	if m != nil && m.ThumbImgUrl != nil {
		return *m.ThumbImgUrl
	}
	return ""
}

func (m *BidResponse_Ads) GetAdDomain() string {
	if m != nil && m.AdDomain != nil {
		return *m.AdDomain
	}
	return ""
}

func (m *BidResponse_Ads) GetHtmlSnippet() string {
	if m != nil && m.HtmlSnippet != nil {
		return *m.HtmlSnippet
	}
	return ""
}

func (m *BidResponse_Ads) GetBuyerId() string {
	if m != nil && m.BuyerId != nil {
		return *m.BuyerId
	}
	return ""
}

func (m *BidResponse_Ads) GetDealid() uint32 {
	if m != nil && m.Dealid != nil {
		return *m.Dealid
	}
	return 0
}

func (m *BidResponse_Ads) GetApp() []*BidResponse_Ads_App {
	if m != nil {
		return m.App
	}
	return nil
}

func (m *BidResponse_Ads) GetAdinallVideo() *BidResponse_Ads_AdinallVideo {
	if m != nil {
		return m.AdinallVideo
	}
	return nil
}

type BidResponse_Ads_App struct {
	// 广告物料地址，图片地址
	Imgurl *string `protobuf:"bytes,1,req,name=imgurl" json:"imgurl,omitempty"`
	// 素材标题，仅适用于native广告
	// 一般10个汉字(20个字节)左右
	Title *string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	// 素材描述，仅适用于native广告
	// 一般20个汉字(40个字节)左右
	Desc *string `protobuf:"bytes,3,opt,name=desc" json:"desc,omitempty"`
	// 数组，当广告展示的时候的反馈地址
	Impressionreport []string `protobuf:"bytes,4,rep,name=impressionreport" json:"impressionreport,omitempty"`
	// 数组，当广告点击的时候的反馈地址
	Clickreport []string `protobuf:"bytes,5,rep,name=clickreport" json:"clickreport,omitempty"`
	// 价格宏
	// %%AD_WIN_NOTICE%%
	// 聚告ssp会根据展示宏替换竞价胜出上报中的内容
	// 竞价胜出反馈地址,详细参见文档
	Winnotice *string `protobuf:"bytes,6,req,name=winnotice" json:"winnotice,omitempty"`
	// 广告最终落地页地址
	Ldp              *string `protobuf:"bytes,7,opt,name=ldp" json:"ldp,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BidResponse_Ads_App) Reset()         { *m = BidResponse_Ads_App{} }
func (m *BidResponse_Ads_App) String() string { return proto.CompactTextString(m) }
func (*BidResponse_Ads_App) ProtoMessage()    {}

func (m *BidResponse_Ads_App) GetImgurl() string {
	if m != nil && m.Imgurl != nil {
		return *m.Imgurl
	}
	return ""
}

func (m *BidResponse_Ads_App) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *BidResponse_Ads_App) GetDesc() string {
	if m != nil && m.Desc != nil {
		return *m.Desc
	}
	return ""
}

func (m *BidResponse_Ads_App) GetImpressionreport() []string {
	if m != nil {
		return m.Impressionreport
	}
	return nil
}

func (m *BidResponse_Ads_App) GetClickreport() []string {
	if m != nil {
		return m.Clickreport
	}
	return nil
}

func (m *BidResponse_Ads_App) GetWinnotice() string {
	if m != nil && m.Winnotice != nil {
		return *m.Winnotice
	}
	return ""
}

func (m *BidResponse_Ads_App) GetLdp() string {
	if m != nil && m.Ldp != nil {
		return *m.Ldp
	}
	return ""
}

// 聚告WAP、APP H5扩展视频物料对象
type BidResponse_Ads_AdinallVideo struct {
	// 视频图片地址
	Imgurl *string `protobuf:"bytes,1,req,name=imgurl" json:"imgurl,omitempty"`
	// 视频链接
	VideoLink *string `protobuf:"bytes,2,req,name=video_link" json:"video_link,omitempty"`
	// 数组，当广告展示的时候的反馈地址，支持价格宏
	Impressionreport []string `protobuf:"bytes,3,rep,name=impressionreport" json:"impressionreport,omitempty"`
	// 数组，当广告点击的时候的反馈地址
	Clickreport []string `protobuf:"bytes,4,rep,name=clickreport" json:"clickreport,omitempty"`
	// 广告最终落地页地址
	Ldp              *string `protobuf:"bytes,7,req,name=ldp" json:"ldp,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BidResponse_Ads_AdinallVideo) Reset()         { *m = BidResponse_Ads_AdinallVideo{} }
func (m *BidResponse_Ads_AdinallVideo) String() string { return proto.CompactTextString(m) }
func (*BidResponse_Ads_AdinallVideo) ProtoMessage()    {}

func (m *BidResponse_Ads_AdinallVideo) GetImgurl() string {
	if m != nil && m.Imgurl != nil {
		return *m.Imgurl
	}
	return ""
}

func (m *BidResponse_Ads_AdinallVideo) GetVideoLink() string {
	if m != nil && m.VideoLink != nil {
		return *m.VideoLink
	}
	return ""
}

func (m *BidResponse_Ads_AdinallVideo) GetImpressionreport() []string {
	if m != nil {
		return m.Impressionreport
	}
	return nil
}

func (m *BidResponse_Ads_AdinallVideo) GetClickreport() []string {
	if m != nil {
		return m.Clickreport
	}
	return nil
}

func (m *BidResponse_Ads_AdinallVideo) GetLdp() string {
	if m != nil && m.Ldp != nil {
		return *m.Ldp
	}
	return ""
}

func init() {
	proto.RegisterType((*BidRequest)(nil), "adinall.BidRequest")
	proto.RegisterType((*BidRequest_AdInfo)(nil), "adinall.BidRequest.AdInfo")
	proto.RegisterType((*BidRequest_App)(nil), "adinall.BidRequest.App")
	proto.RegisterType((*BidRequest_App_DeviceInfo)(nil), "adinall.BidRequest.App.DeviceInfo")
	proto.RegisterType((*BidRequest_App_AppInfo)(nil), "adinall.BidRequest.App.AppInfo")
	proto.RegisterType((*BidRequest_Deal)(nil), "adinall.BidRequest.Deal")
	proto.RegisterType((*BidRequest_Deal_PreferredDeal)(nil), "adinall.BidRequest.Deal.PreferredDeal")
	proto.RegisterType((*BidRequest_Deal_PrivateAuction)(nil), "adinall.BidRequest.Deal.PrivateAuction")
	proto.RegisterType((*BidRequest_Deal_PrivateAuction_BuyerRule)(nil), "adinall.BidRequest.Deal.PrivateAuction.BuyerRule")
	proto.RegisterType((*BidRequest_AdinallVideo)(nil), "adinall.BidRequest.AdinallVideo")
	proto.RegisterType((*BidResponse)(nil), "adinall.BidResponse")
	proto.RegisterType((*BidResponse_Ads)(nil), "adinall.BidResponse.Ads")
	proto.RegisterType((*BidResponse_Ads_App)(nil), "adinall.BidResponse.Ads.App")
	proto.RegisterType((*BidResponse_Ads_AdinallVideo)(nil), "adinall.BidResponse.Ads.AdinallVideo")
	proto.RegisterEnum("adinall.BidRequest_AdInfo_ViewScreen", BidRequest_AdInfo_ViewScreen_name, BidRequest_AdInfo_ViewScreen_value)
}
