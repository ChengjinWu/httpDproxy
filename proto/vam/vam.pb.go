// Code generated by protoc-gen-go.
// source: vam.proto
// DO NOT EDIT!

/*
Package vam is a generated protocol buffer package.

It is generated from these files:
	vam.proto

It has these top-level messages:
	VamRequest
	VamResponse
*/
package vam

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 第三方名称
type VamRequest_THIRDNAME int32

const (
	VamRequest_YOUKU VamRequest_THIRDNAME = 1
)

var VamRequest_THIRDNAME_name = map[int32]string{
	1: "YOUKU",
}
var VamRequest_THIRDNAME_value = map[string]int32{
	"YOUKU": 1,
}

func (x VamRequest_THIRDNAME) Enum() *VamRequest_THIRDNAME {
	p := new(VamRequest_THIRDNAME)
	*p = x
	return p
}
func (x VamRequest_THIRDNAME) String() string {
	return proto.EnumName(VamRequest_THIRDNAME_name, int32(x))
}
func (x *VamRequest_THIRDNAME) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(VamRequest_THIRDNAME_value, data, "VamRequest_THIRDNAME")
	if err != nil {
		return err
	}
	*x = VamRequest_THIRDNAME(value)
	return nil
}

// 用户的设备类型
type VamRequest_DEVICETYPE int32

const (
	VamRequest_PC       VamRequest_DEVICETYPE = 1
	VamRequest_MOBILE   VamRequest_DEVICETYPE = 2
	VamRequest_PAD      VamRequest_DEVICETYPE = 3
	VamRequest_SMART_TV VamRequest_DEVICETYPE = 4
)

var VamRequest_DEVICETYPE_name = map[int32]string{
	1: "PC",
	2: "MOBILE",
	3: "PAD",
	4: "SMART_TV",
}
var VamRequest_DEVICETYPE_value = map[string]int32{
	"PC":       1,
	"MOBILE":   2,
	"PAD":      3,
	"SMART_TV": 4,
}

func (x VamRequest_DEVICETYPE) Enum() *VamRequest_DEVICETYPE {
	p := new(VamRequest_DEVICETYPE)
	*p = x
	return p
}
func (x VamRequest_DEVICETYPE) String() string {
	return proto.EnumName(VamRequest_DEVICETYPE_name, int32(x))
}
func (x *VamRequest_DEVICETYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(VamRequest_DEVICETYPE_value, data, "VamRequest_DEVICETYPE")
	if err != nil {
		return err
	}
	*x = VamRequest_DEVICETYPE(value)
	return nil
}

// -----------------用户数据、媒体数据以及三方检测数据
type VamRequest_DATASOURCE int32

const (
	VamRequest_VAM      VamRequest_DATASOURCE = 1
	VamRequest_ADMASTER VamRequest_DATASOURCE = 2
)

var VamRequest_DATASOURCE_name = map[int32]string{
	1: "VAM",
	2: "ADMASTER",
}
var VamRequest_DATASOURCE_value = map[string]int32{
	"VAM":      1,
	"ADMASTER": 2,
}

func (x VamRequest_DATASOURCE) Enum() *VamRequest_DATASOURCE {
	p := new(VamRequest_DATASOURCE)
	*p = x
	return p
}
func (x VamRequest_DATASOURCE) String() string {
	return proto.EnumName(VamRequest_DATASOURCE_name, int32(x))
}
func (x *VamRequest_DATASOURCE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(VamRequest_DATASOURCE_value, data, "VamRequest_DATASOURCE")
	if err != nil {
		return err
	}
	*x = VamRequest_DATASOURCE(value)
	return nil
}

// 广告位所处页面第几屏信息
type VamRequest_Display_SCREEN int32

const (
	VamRequest_Display_FIRST  VamRequest_Display_SCREEN = 1
	VamRequest_Display_SECOND VamRequest_Display_SCREEN = 2
	VamRequest_Display_THIRD  VamRequest_Display_SCREEN = 3
	VamRequest_Display_OTHER  VamRequest_Display_SCREEN = 4
)

var VamRequest_Display_SCREEN_name = map[int32]string{
	1: "FIRST",
	2: "SECOND",
	3: "THIRD",
	4: "OTHER",
}
var VamRequest_Display_SCREEN_value = map[string]int32{
	"FIRST":  1,
	"SECOND": 2,
	"THIRD":  3,
	"OTHER":  4,
}

func (x VamRequest_Display_SCREEN) Enum() *VamRequest_Display_SCREEN {
	p := new(VamRequest_Display_SCREEN)
	*p = x
	return p
}
func (x VamRequest_Display_SCREEN) String() string {
	return proto.EnumName(VamRequest_Display_SCREEN_name, int32(x))
}
func (x *VamRequest_Display_SCREEN) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(VamRequest_Display_SCREEN_value, data, "VamRequest_Display_SCREEN")
	if err != nil {
		return err
	}
	*x = VamRequest_Display_SCREEN(value)
	return nil
}

// 允许的广告展示格式
type VamRequest_Display_ADFORMAT int32

const (
	VamRequest_Display_STATIC_PIC  VamRequest_Display_ADFORMAT = 1
	VamRequest_Display_DYNAMIC_PIC VamRequest_Display_ADFORMAT = 2
	VamRequest_Display_SWF         VamRequest_Display_ADFORMAT = 3
	VamRequest_Display_TXT         VamRequest_Display_ADFORMAT = 4
	VamRequest_Display_FLV         VamRequest_Display_ADFORMAT = 5
	VamRequest_Display_MP4         VamRequest_Display_ADFORMAT = 6
	VamRequest_Display_OGG         VamRequest_Display_ADFORMAT = 7
	VamRequest_Display_WebM        VamRequest_Display_ADFORMAT = 8
)

var VamRequest_Display_ADFORMAT_name = map[int32]string{
	1: "STATIC_PIC",
	2: "DYNAMIC_PIC",
	3: "SWF",
	4: "TXT",
	5: "FLV",
	6: "MP4",
	7: "OGG",
	8: "WebM",
}
var VamRequest_Display_ADFORMAT_value = map[string]int32{
	"STATIC_PIC":  1,
	"DYNAMIC_PIC": 2,
	"SWF":         3,
	"TXT":         4,
	"FLV":         5,
	"MP4":         6,
	"OGG":         7,
	"WebM":        8,
}

func (x VamRequest_Display_ADFORMAT) Enum() *VamRequest_Display_ADFORMAT {
	p := new(VamRequest_Display_ADFORMAT)
	*p = x
	return p
}
func (x VamRequest_Display_ADFORMAT) String() string {
	return proto.EnumName(VamRequest_Display_ADFORMAT_name, int32(x))
}
func (x *VamRequest_Display_ADFORMAT) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(VamRequest_Display_ADFORMAT_value, data, "VamRequest_Display_ADFORMAT")
	if err != nil {
		return err
	}
	*x = VamRequest_Display_ADFORMAT(value)
	return nil
}

// 广告位类型
type VamRequest_Display_ADFORM int32

const (
	VamRequest_Display_BANNER      VamRequest_Display_ADFORM = 1
	VamRequest_Display_POPUP       VamRequest_Display_ADFORM = 2
	VamRequest_Display_PC_CLIENT   VamRequest_Display_ADFORM = 3
	VamRequest_Display_VIDEO_PAUSE VamRequest_Display_ADFORM = 4
)

var VamRequest_Display_ADFORM_name = map[int32]string{
	1: "BANNER",
	2: "POPUP",
	3: "PC_CLIENT",
	4: "VIDEO_PAUSE",
}
var VamRequest_Display_ADFORM_value = map[string]int32{
	"BANNER":      1,
	"POPUP":       2,
	"PC_CLIENT":   3,
	"VIDEO_PAUSE": 4,
}

func (x VamRequest_Display_ADFORM) Enum() *VamRequest_Display_ADFORM {
	p := new(VamRequest_Display_ADFORM)
	*p = x
	return p
}
func (x VamRequest_Display_ADFORM) String() string {
	return proto.EnumName(VamRequest_Display_ADFORM_name, int32(x))
}
func (x *VamRequest_Display_ADFORM) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(VamRequest_Display_ADFORM_value, data, "VamRequest_Display_ADFORM")
	if err != nil {
		return err
	}
	*x = VamRequest_Display_ADFORM(value)
	return nil
}

type VamRequest_Video_Linearity int32

const (
	VamRequest_Video_LINEAR_IN_STREAM  VamRequest_Video_Linearity = 1
	VamRequest_Video_NO_LINEAR_OVERLAY VamRequest_Video_Linearity = 2
)

var VamRequest_Video_Linearity_name = map[int32]string{
	1: "LINEAR_IN_STREAM",
	2: "NO_LINEAR_OVERLAY",
}
var VamRequest_Video_Linearity_value = map[string]int32{
	"LINEAR_IN_STREAM":  1,
	"NO_LINEAR_OVERLAY": 2,
}

func (x VamRequest_Video_Linearity) Enum() *VamRequest_Video_Linearity {
	p := new(VamRequest_Video_Linearity)
	*p = x
	return p
}
func (x VamRequest_Video_Linearity) String() string {
	return proto.EnumName(VamRequest_Video_Linearity_name, int32(x))
}
func (x *VamRequest_Video_Linearity) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(VamRequest_Video_Linearity_value, data, "VamRequest_Video_Linearity")
	if err != nil {
		return err
	}
	*x = VamRequest_Video_Linearity(value)
	return nil
}

type VamRequest_Video_PROTOCOL int32

const (
	VamRequest_Video_VAST_1_0         VamRequest_Video_PROTOCOL = 1
	VamRequest_Video_VAST_2_0         VamRequest_Video_PROTOCOL = 2
	VamRequest_Video_VAST_3_0         VamRequest_Video_PROTOCOL = 3
	VamRequest_Video_VAST_1_0_WRAPPER VamRequest_Video_PROTOCOL = 4
	VamRequest_Video_VAST_2_0_WRAPPER VamRequest_Video_PROTOCOL = 5
	VamRequest_Video_VAST_3_0_WRAPPER VamRequest_Video_PROTOCOL = 6
)

var VamRequest_Video_PROTOCOL_name = map[int32]string{
	1: "VAST_1_0",
	2: "VAST_2_0",
	3: "VAST_3_0",
	4: "VAST_1_0_WRAPPER",
	5: "VAST_2_0_WRAPPER",
	6: "VAST_3_0_WRAPPER",
}
var VamRequest_Video_PROTOCOL_value = map[string]int32{
	"VAST_1_0":         1,
	"VAST_2_0":         2,
	"VAST_3_0":         3,
	"VAST_1_0_WRAPPER": 4,
	"VAST_2_0_WRAPPER": 5,
	"VAST_3_0_WRAPPER": 6,
}

func (x VamRequest_Video_PROTOCOL) Enum() *VamRequest_Video_PROTOCOL {
	p := new(VamRequest_Video_PROTOCOL)
	*p = x
	return p
}
func (x VamRequest_Video_PROTOCOL) String() string {
	return proto.EnumName(VamRequest_Video_PROTOCOL_name, int32(x))
}
func (x *VamRequest_Video_PROTOCOL) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(VamRequest_Video_PROTOCOL_value, data, "VamRequest_Video_PROTOCOL")
	if err != nil {
		return err
	}
	*x = VamRequest_Video_PROTOCOL(value)
	return nil
}

// 媒体支持视频格式类型
type VamRequest_Video_ADFORMAT int32

const (
	VamRequest_Video_STATIC_PIC  VamRequest_Video_ADFORMAT = 1
	VamRequest_Video_DYNAMIC_PIC VamRequest_Video_ADFORMAT = 2
	VamRequest_Video_SWF         VamRequest_Video_ADFORMAT = 3
	VamRequest_Video_FLV         VamRequest_Video_ADFORMAT = 5
	VamRequest_Video_MP4         VamRequest_Video_ADFORMAT = 6
)

var VamRequest_Video_ADFORMAT_name = map[int32]string{
	1: "STATIC_PIC",
	2: "DYNAMIC_PIC",
	3: "SWF",
	5: "FLV",
	6: "MP4",
}
var VamRequest_Video_ADFORMAT_value = map[string]int32{
	"STATIC_PIC":  1,
	"DYNAMIC_PIC": 2,
	"SWF":         3,
	"FLV":         5,
	"MP4":         6,
}

func (x VamRequest_Video_ADFORMAT) Enum() *VamRequest_Video_ADFORMAT {
	p := new(VamRequest_Video_ADFORMAT)
	*p = x
	return p
}
func (x VamRequest_Video_ADFORMAT) String() string {
	return proto.EnumName(VamRequest_Video_ADFORMAT_name, int32(x))
}
func (x *VamRequest_Video_ADFORMAT) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(VamRequest_Video_ADFORMAT_value, data, "VamRequest_Video_ADFORMAT")
	if err != nil {
		return err
	}
	*x = VamRequest_Video_ADFORMAT(value)
	return nil
}

type VamRequest_Video_ADTECH int32

const (
	VamRequest_Video_FLASH VamRequest_Video_ADTECH = 1
	VamRequest_Video_HTML5 VamRequest_Video_ADTECH = 2
)

var VamRequest_Video_ADTECH_name = map[int32]string{
	1: "FLASH",
	2: "HTML5",
}
var VamRequest_Video_ADTECH_value = map[string]int32{
	"FLASH": 1,
	"HTML5": 2,
}

func (x VamRequest_Video_ADTECH) Enum() *VamRequest_Video_ADTECH {
	p := new(VamRequest_Video_ADTECH)
	*p = x
	return p
}
func (x VamRequest_Video_ADTECH) String() string {
	return proto.EnumName(VamRequest_Video_ADTECH_name, int32(x))
}
func (x *VamRequest_Video_ADTECH) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(VamRequest_Video_ADTECH_value, data, "VamRequest_Video_ADTECH")
	if err != nil {
		return err
	}
	*x = VamRequest_Video_ADTECH(value)
	return nil
}

type VamRequest_Mobile_LOCATION_OF_SCREEN int32

const (
	VamRequest_Mobile_TOP VamRequest_Mobile_LOCATION_OF_SCREEN = 1
	VamRequest_Mobile_MID VamRequest_Mobile_LOCATION_OF_SCREEN = 2
	VamRequest_Mobile_BTM VamRequest_Mobile_LOCATION_OF_SCREEN = 3
)

var VamRequest_Mobile_LOCATION_OF_SCREEN_name = map[int32]string{
	1: "TOP",
	2: "MID",
	3: "BTM",
}
var VamRequest_Mobile_LOCATION_OF_SCREEN_value = map[string]int32{
	"TOP": 1,
	"MID": 2,
	"BTM": 3,
}

func (x VamRequest_Mobile_LOCATION_OF_SCREEN) Enum() *VamRequest_Mobile_LOCATION_OF_SCREEN {
	p := new(VamRequest_Mobile_LOCATION_OF_SCREEN)
	*p = x
	return p
}
func (x VamRequest_Mobile_LOCATION_OF_SCREEN) String() string {
	return proto.EnumName(VamRequest_Mobile_LOCATION_OF_SCREEN_name, int32(x))
}
func (x *VamRequest_Mobile_LOCATION_OF_SCREEN) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(VamRequest_Mobile_LOCATION_OF_SCREEN_value, data, "VamRequest_Mobile_LOCATION_OF_SCREEN")
	if err != nil {
		return err
	}
	*x = VamRequest_Mobile_LOCATION_OF_SCREEN(value)
	return nil
}

// 允许的广告展示格式
type VamRequest_Mobile_ADFORMAT int32

const (
	VamRequest_Mobile_STATIC_PIC  VamRequest_Mobile_ADFORMAT = 1
	VamRequest_Mobile_DYNAMIC_PIC VamRequest_Mobile_ADFORMAT = 2
	VamRequest_Mobile_TXT         VamRequest_Mobile_ADFORMAT = 4
)

var VamRequest_Mobile_ADFORMAT_name = map[int32]string{
	1: "STATIC_PIC",
	2: "DYNAMIC_PIC",
	4: "TXT",
}
var VamRequest_Mobile_ADFORMAT_value = map[string]int32{
	"STATIC_PIC":  1,
	"DYNAMIC_PIC": 2,
	"TXT":         4,
}

func (x VamRequest_Mobile_ADFORMAT) Enum() *VamRequest_Mobile_ADFORMAT {
	p := new(VamRequest_Mobile_ADFORMAT)
	*p = x
	return p
}
func (x VamRequest_Mobile_ADFORMAT) String() string {
	return proto.EnumName(VamRequest_Mobile_ADFORMAT_name, int32(x))
}
func (x *VamRequest_Mobile_ADFORMAT) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(VamRequest_Mobile_ADFORMAT_value, data, "VamRequest_Mobile_ADFORMAT")
	if err != nil {
		return err
	}
	*x = VamRequest_Mobile_ADFORMAT(value)
	return nil
}

// 广告位所处页面第几屏信息
type VamRequest_Mobile_SCREEN int32

const (
	VamRequest_Mobile_FIRST  VamRequest_Mobile_SCREEN = 1
	VamRequest_Mobile_SECOND VamRequest_Mobile_SCREEN = 2
	VamRequest_Mobile_THIRD  VamRequest_Mobile_SCREEN = 3
	VamRequest_Mobile_OTHER  VamRequest_Mobile_SCREEN = 4
)

var VamRequest_Mobile_SCREEN_name = map[int32]string{
	1: "FIRST",
	2: "SECOND",
	3: "THIRD",
	4: "OTHER",
}
var VamRequest_Mobile_SCREEN_value = map[string]int32{
	"FIRST":  1,
	"SECOND": 2,
	"THIRD":  3,
	"OTHER":  4,
}

func (x VamRequest_Mobile_SCREEN) Enum() *VamRequest_Mobile_SCREEN {
	p := new(VamRequest_Mobile_SCREEN)
	*p = x
	return p
}
func (x VamRequest_Mobile_SCREEN) String() string {
	return proto.EnumName(VamRequest_Mobile_SCREEN_name, int32(x))
}
func (x *VamRequest_Mobile_SCREEN) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(VamRequest_Mobile_SCREEN_value, data, "VamRequest_Mobile_SCREEN")
	if err != nil {
		return err
	}
	*x = VamRequest_Mobile_SCREEN(value)
	return nil
}

// 允许的广告展示格式
type VamRequest_Mobile_Video_ADFORMAT int32

const (
	VamRequest_Mobile_Video_STATIC_PIC  VamRequest_Mobile_Video_ADFORMAT = 1
	VamRequest_Mobile_Video_DYNAMIC_PIC VamRequest_Mobile_Video_ADFORMAT = 2
	VamRequest_Mobile_Video_SWF         VamRequest_Mobile_Video_ADFORMAT = 3
	VamRequest_Mobile_Video_TXT         VamRequest_Mobile_Video_ADFORMAT = 4
	VamRequest_Mobile_Video_FLV         VamRequest_Mobile_Video_ADFORMAT = 5
	VamRequest_Mobile_Video_MP4         VamRequest_Mobile_Video_ADFORMAT = 6
	VamRequest_Mobile_Video_OGG         VamRequest_Mobile_Video_ADFORMAT = 7
	VamRequest_Mobile_Video_WebM        VamRequest_Mobile_Video_ADFORMAT = 8
)

var VamRequest_Mobile_Video_ADFORMAT_name = map[int32]string{
	1: "STATIC_PIC",
	2: "DYNAMIC_PIC",
	3: "SWF",
	4: "TXT",
	5: "FLV",
	6: "MP4",
	7: "OGG",
	8: "WebM",
}
var VamRequest_Mobile_Video_ADFORMAT_value = map[string]int32{
	"STATIC_PIC":  1,
	"DYNAMIC_PIC": 2,
	"SWF":         3,
	"TXT":         4,
	"FLV":         5,
	"MP4":         6,
	"OGG":         7,
	"WebM":        8,
}

func (x VamRequest_Mobile_Video_ADFORMAT) Enum() *VamRequest_Mobile_Video_ADFORMAT {
	p := new(VamRequest_Mobile_Video_ADFORMAT)
	*p = x
	return p
}
func (x VamRequest_Mobile_Video_ADFORMAT) String() string {
	return proto.EnumName(VamRequest_Mobile_Video_ADFORMAT_name, int32(x))
}
func (x *VamRequest_Mobile_Video_ADFORMAT) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(VamRequest_Mobile_Video_ADFORMAT_value, data, "VamRequest_Mobile_Video_ADFORMAT")
	if err != nil {
		return err
	}
	*x = VamRequest_Mobile_Video_ADFORMAT(value)
	return nil
}

type VamRequest_Mobile_Video_Linearity int32

const (
	VamRequest_Mobile_Video_LINEAR_IN_STREAM  VamRequest_Mobile_Video_Linearity = 1
	VamRequest_Mobile_Video_NO_LINEAR_OVERLAY VamRequest_Mobile_Video_Linearity = 2
)

var VamRequest_Mobile_Video_Linearity_name = map[int32]string{
	1: "LINEAR_IN_STREAM",
	2: "NO_LINEAR_OVERLAY",
}
var VamRequest_Mobile_Video_Linearity_value = map[string]int32{
	"LINEAR_IN_STREAM":  1,
	"NO_LINEAR_OVERLAY": 2,
}

func (x VamRequest_Mobile_Video_Linearity) Enum() *VamRequest_Mobile_Video_Linearity {
	p := new(VamRequest_Mobile_Video_Linearity)
	*p = x
	return p
}
func (x VamRequest_Mobile_Video_Linearity) String() string {
	return proto.EnumName(VamRequest_Mobile_Video_Linearity_name, int32(x))
}
func (x *VamRequest_Mobile_Video_Linearity) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(VamRequest_Mobile_Video_Linearity_value, data, "VamRequest_Mobile_Video_Linearity")
	if err != nil {
		return err
	}
	*x = VamRequest_Mobile_Video_Linearity(value)
	return nil
}

type VamRequest_Mobile_Video_PROTOCOL int32

const (
	VamRequest_Mobile_Video_VAST_1_0         VamRequest_Mobile_Video_PROTOCOL = 1
	VamRequest_Mobile_Video_VAST_2_0         VamRequest_Mobile_Video_PROTOCOL = 2
	VamRequest_Mobile_Video_VAST_3_0         VamRequest_Mobile_Video_PROTOCOL = 3
	VamRequest_Mobile_Video_VAST_1_0_WRAPPER VamRequest_Mobile_Video_PROTOCOL = 4
	VamRequest_Mobile_Video_VAST_2_0_WRAPPER VamRequest_Mobile_Video_PROTOCOL = 5
	VamRequest_Mobile_Video_VAST_3_0_WRAPPER VamRequest_Mobile_Video_PROTOCOL = 6
)

var VamRequest_Mobile_Video_PROTOCOL_name = map[int32]string{
	1: "VAST_1_0",
	2: "VAST_2_0",
	3: "VAST_3_0",
	4: "VAST_1_0_WRAPPER",
	5: "VAST_2_0_WRAPPER",
	6: "VAST_3_0_WRAPPER",
}
var VamRequest_Mobile_Video_PROTOCOL_value = map[string]int32{
	"VAST_1_0":         1,
	"VAST_2_0":         2,
	"VAST_3_0":         3,
	"VAST_1_0_WRAPPER": 4,
	"VAST_2_0_WRAPPER": 5,
	"VAST_3_0_WRAPPER": 6,
}

func (x VamRequest_Mobile_Video_PROTOCOL) Enum() *VamRequest_Mobile_Video_PROTOCOL {
	p := new(VamRequest_Mobile_Video_PROTOCOL)
	*p = x
	return p
}
func (x VamRequest_Mobile_Video_PROTOCOL) String() string {
	return proto.EnumName(VamRequest_Mobile_Video_PROTOCOL_name, int32(x))
}
func (x *VamRequest_Mobile_Video_PROTOCOL) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(VamRequest_Mobile_Video_PROTOCOL_value, data, "VamRequest_Mobile_Video_PROTOCOL")
	if err != nil {
		return err
	}
	*x = VamRequest_Mobile_Video_PROTOCOL(value)
	return nil
}

// 创意格式
type VamResponse_Bid_Display_FORMAT int32

const (
	VamResponse_Bid_Display_STATIC_PIC  VamResponse_Bid_Display_FORMAT = 1
	VamResponse_Bid_Display_DYNAMIC_PIC VamResponse_Bid_Display_FORMAT = 2
	VamResponse_Bid_Display_SWF         VamResponse_Bid_Display_FORMAT = 3
	VamResponse_Bid_Display_TXT         VamResponse_Bid_Display_FORMAT = 4
)

var VamResponse_Bid_Display_FORMAT_name = map[int32]string{
	1: "STATIC_PIC",
	2: "DYNAMIC_PIC",
	3: "SWF",
	4: "TXT",
}
var VamResponse_Bid_Display_FORMAT_value = map[string]int32{
	"STATIC_PIC":  1,
	"DYNAMIC_PIC": 2,
	"SWF":         3,
	"TXT":         4,
}

func (x VamResponse_Bid_Display_FORMAT) Enum() *VamResponse_Bid_Display_FORMAT {
	p := new(VamResponse_Bid_Display_FORMAT)
	*p = x
	return p
}
func (x VamResponse_Bid_Display_FORMAT) String() string {
	return proto.EnumName(VamResponse_Bid_Display_FORMAT_name, int32(x))
}
func (x *VamResponse_Bid_Display_FORMAT) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(VamResponse_Bid_Display_FORMAT_value, data, "VamResponse_Bid_Display_FORMAT")
	if err != nil {
		return err
	}
	*x = VamResponse_Bid_Display_FORMAT(value)
	return nil
}

type VamRequest struct {
	// 由VAM生成的唯一的ID号，作为整个竞价通路的校验标志。
	Id *string `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	// 最大延迟时间，默认值120ms。
	TMax *int32 `protobuf:"varint,2,opt,name=t_max" json:"t_max,omitempty"`
	// vam用户的id号
	Cookie  *string               `protobuf:"bytes,3,opt,name=cookie" json:"cookie,omitempty"`
	ThirdId *VamRequest_THIRDNAME `protobuf:"varint,32,opt,name=third_id,enum=VamRequest_THIRDNAME" json:"third_id,omitempty"`
	// 第三方cookie值,根据third_id的值不同表征cookie所属三方
	ThirdCookie *string `protobuf:"bytes,33,opt,name=third_cookie" json:"third_cookie,omitempty"`
	// vam的cookie的版本号
	CookieVersion *uint32 `protobuf:"varint,4,opt,name=cookie_version" json:"cookie_version,omitempty"`
	// DSP托管的cookie_id值。若DSP要求vm做cookiemapping则该字段有值
	HostedMatchData *string `protobuf:"bytes,27,opt,name=hosted_match_data" json:"hosted_match_data,omitempty"`
	// vam所种cookie的存在时长。(新增)
	CookieAgeSeconds *int32 `protobuf:"varint,5,opt,name=cookie_age_seconds" json:"cookie_age_seconds,omitempty"`
	// 用户所在时区
	TimezoneOffset *string `protobuf:"bytes,6,opt,name=timezone_offset" json:"timezone_offset,omitempty"`
	// -----------------设备信息----------------------
	// 用户浏览器的UA信息
	UserAgent *string `protobuf:"bytes,8,opt,name=user_agent" json:"user_agent,omitempty"`
	// 用户是否设置dnt标示
	Dnt *bool `protobuf:"varint,9,opt,name=dnt" json:"dnt,omitempty"`
	// 用户IP地址
	Ip *string `protobuf:"bytes,10,opt,name=ip" json:"ip,omitempty"`
	// 浏览器语言类型
	Language   *string                `protobuf:"bytes,11,opt,name=language" json:"language,omitempty"`
	DeviceType *VamRequest_DEVICETYPE `protobuf:"varint,12,opt,name=device_type,enum=VamRequest_DEVICETYPE" json:"device_type,omitempty"`
	// -------------媒体信息---------------------
	// 媒体ID在VAM的ID号
	MediaId *int32 `protobuf:"varint,13,opt,name=media_id" json:"media_id,omitempty"`
	// 媒体网站域名
	Domain *string `protobuf:"bytes,14,opt,name=domain" json:"domain,omitempty"`
	// 当前流量产生的具体页面Url
	Page *string `protobuf:"bytes,15,opt,name=page" json:"page,omitempty"`
	// 页面行业信息分类，参见媒体页面类型分类
	Vertical []int32 `protobuf:"varint,22,rep,name=vertical" json:"vertical,omitempty"`
	// 页面内容分类的版本号
	VerticalVersion *int32 `protobuf:"varint,23,opt,name=vertical_version" json:"vertical_version,omitempty"`
	// http请求header中的referer信息
	Referer *string `protobuf:"bytes,28,opt,name=referer" json:"referer,omitempty"`
	// 0-非安全流量（http），1-安全流量（https）。默认值为0
	Secure *int32 `protobuf:"varint,37,opt,name=secure" json:"secure,omitempty"`
	// 表征用户数据源来自哪些系统,data_source值与DATASOURCE枚举值相关,如1表示只有VAM系统的数据源,2表示只有Admaster数据源,3表示有VAM和ADMASTER数据源供参考。目前该字段值为2
	DataSource *int32 `protobuf:"varint,29,opt,name=data_source" json:"data_source,omitempty"`
	// 用户属性特点（新增）
	UserCharacter []string                   `protobuf:"bytes,7,rep,name=user_character" json:"user_character,omitempty"`
	AdmasterData  []*VamRequest_AdmasterData `protobuf:"bytes,30,rep,name=admaster_data" json:"admaster_data,omitempty"`
	PmpInfo       []*VamRequest_PmpInfo      `protobuf:"bytes,31,rep,name=pmp_info" json:"pmp_info,omitempty"`
	// 表征流量来源，1或者不传表示万流客，2表示accuen
	MediaSource      *int32                   `protobuf:"varint,35,opt,name=media_source" json:"media_source,omitempty"`
	Display          []*VamRequest_Display    `protobuf:"bytes,26,rep,name=display" json:"display,omitempty"`
	VamVideo         *VamRequest_Video        `protobuf:"bytes,25,opt,name=vam_video" json:"vam_video,omitempty"`
	VamMobile        *VamRequest_Mobile       `protobuf:"bytes,34,opt,name=vam_mobile" json:"vam_mobile,omitempty"`
	VamMobileVideo   *VamRequest_Mobile_Video `protobuf:"bytes,36,opt,name=vam_mobile_video" json:"vam_mobile_video,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *VamRequest) Reset()         { *m = VamRequest{} }
func (m *VamRequest) String() string { return proto.CompactTextString(m) }
func (*VamRequest) ProtoMessage()    {}

func (m *VamRequest) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *VamRequest) GetTMax() int32 {
	if m != nil && m.TMax != nil {
		return *m.TMax
	}
	return 0
}

func (m *VamRequest) GetCookie() string {
	if m != nil && m.Cookie != nil {
		return *m.Cookie
	}
	return ""
}

func (m *VamRequest) GetThirdId() VamRequest_THIRDNAME {
	if m != nil && m.ThirdId != nil {
		return *m.ThirdId
	}
	return VamRequest_YOUKU
}

func (m *VamRequest) GetThirdCookie() string {
	if m != nil && m.ThirdCookie != nil {
		return *m.ThirdCookie
	}
	return ""
}

func (m *VamRequest) GetCookieVersion() uint32 {
	if m != nil && m.CookieVersion != nil {
		return *m.CookieVersion
	}
	return 0
}

func (m *VamRequest) GetHostedMatchData() string {
	if m != nil && m.HostedMatchData != nil {
		return *m.HostedMatchData
	}
	return ""
}

func (m *VamRequest) GetCookieAgeSeconds() int32 {
	if m != nil && m.CookieAgeSeconds != nil {
		return *m.CookieAgeSeconds
	}
	return 0
}

func (m *VamRequest) GetTimezoneOffset() string {
	if m != nil && m.TimezoneOffset != nil {
		return *m.TimezoneOffset
	}
	return ""
}

func (m *VamRequest) GetUserAgent() string {
	if m != nil && m.UserAgent != nil {
		return *m.UserAgent
	}
	return ""
}

func (m *VamRequest) GetDnt() bool {
	if m != nil && m.Dnt != nil {
		return *m.Dnt
	}
	return false
}

func (m *VamRequest) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *VamRequest) GetLanguage() string {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return ""
}

func (m *VamRequest) GetDeviceType() VamRequest_DEVICETYPE {
	if m != nil && m.DeviceType != nil {
		return *m.DeviceType
	}
	return VamRequest_PC
}

func (m *VamRequest) GetMediaId() int32 {
	if m != nil && m.MediaId != nil {
		return *m.MediaId
	}
	return 0
}

func (m *VamRequest) GetDomain() string {
	if m != nil && m.Domain != nil {
		return *m.Domain
	}
	return ""
}

func (m *VamRequest) GetPage() string {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return ""
}

func (m *VamRequest) GetVertical() []int32 {
	if m != nil {
		return m.Vertical
	}
	return nil
}

func (m *VamRequest) GetVerticalVersion() int32 {
	if m != nil && m.VerticalVersion != nil {
		return *m.VerticalVersion
	}
	return 0
}

func (m *VamRequest) GetReferer() string {
	if m != nil && m.Referer != nil {
		return *m.Referer
	}
	return ""
}

func (m *VamRequest) GetSecure() int32 {
	if m != nil && m.Secure != nil {
		return *m.Secure
	}
	return 0
}

func (m *VamRequest) GetDataSource() int32 {
	if m != nil && m.DataSource != nil {
		return *m.DataSource
	}
	return 0
}

func (m *VamRequest) GetUserCharacter() []string {
	if m != nil {
		return m.UserCharacter
	}
	return nil
}

func (m *VamRequest) GetAdmasterData() []*VamRequest_AdmasterData {
	if m != nil {
		return m.AdmasterData
	}
	return nil
}

func (m *VamRequest) GetPmpInfo() []*VamRequest_PmpInfo {
	if m != nil {
		return m.PmpInfo
	}
	return nil
}

func (m *VamRequest) GetMediaSource() int32 {
	if m != nil && m.MediaSource != nil {
		return *m.MediaSource
	}
	return 0
}

func (m *VamRequest) GetDisplay() []*VamRequest_Display {
	if m != nil {
		return m.Display
	}
	return nil
}

func (m *VamRequest) GetVamVideo() *VamRequest_Video {
	if m != nil {
		return m.VamVideo
	}
	return nil
}

func (m *VamRequest) GetVamMobile() *VamRequest_Mobile {
	if m != nil {
		return m.VamMobile
	}
	return nil
}

func (m *VamRequest) GetVamMobileVideo() *VamRequest_Mobile_Video {
	if m != nil {
		return m.VamMobileVideo
	}
	return nil
}

type VamRequest_AdmasterData struct {
	Order            *string  `protobuf:"bytes,1,opt,name=order" json:"order,omitempty"`
	Relevance        *float32 `protobuf:"fixed32,2,opt,name=relevance" json:"relevance,omitempty"`
	Threshold        *float32 `protobuf:"fixed32,3,opt,name=threshold" json:"threshold,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *VamRequest_AdmasterData) Reset()         { *m = VamRequest_AdmasterData{} }
func (m *VamRequest_AdmasterData) String() string { return proto.CompactTextString(m) }
func (*VamRequest_AdmasterData) ProtoMessage()    {}

func (m *VamRequest_AdmasterData) GetOrder() string {
	if m != nil && m.Order != nil {
		return *m.Order
	}
	return ""
}

func (m *VamRequest_AdmasterData) GetRelevance() float32 {
	if m != nil && m.Relevance != nil {
		return *m.Relevance
	}
	return 0
}

func (m *VamRequest_AdmasterData) GetThreshold() float32 {
	if m != nil && m.Threshold != nil {
		return *m.Threshold
	}
	return 0
}

type VamRequest_PmpInfo struct {
	DealId           *int32 `protobuf:"varint,1,opt,name=deal_id" json:"deal_id,omitempty"`
	PreferPrice      *int32 `protobuf:"varint,2,opt,name=prefer_price" json:"prefer_price,omitempty"`
	PremiumPrice     *int32 `protobuf:"varint,3,opt,name=premium_price" json:"premium_price,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *VamRequest_PmpInfo) Reset()         { *m = VamRequest_PmpInfo{} }
func (m *VamRequest_PmpInfo) String() string { return proto.CompactTextString(m) }
func (*VamRequest_PmpInfo) ProtoMessage()    {}

func (m *VamRequest_PmpInfo) GetDealId() int32 {
	if m != nil && m.DealId != nil {
		return *m.DealId
	}
	return 0
}

func (m *VamRequest_PmpInfo) GetPreferPrice() int32 {
	if m != nil && m.PreferPrice != nil {
		return *m.PreferPrice
	}
	return 0
}

func (m *VamRequest_PmpInfo) GetPremiumPrice() int32 {
	if m != nil && m.PremiumPrice != nil {
		return *m.PremiumPrice
	}
	return 0
}

// --------------------------Display广告------------------------
type VamRequest_Display struct {
	// 广告的曝光编号,从1开始
	Id *int32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	// 广告位ID
	AdspaceId *int32 `protobuf:"varint,2,opt,name=adspace_id" json:"adspace_id,omitempty"`
	// 底价(单位为分)
	Bidfloor    *int32                     `protobuf:"varint,3,opt,name=bidfloor" json:"bidfloor,omitempty"`
	ScreenLevel *VamRequest_Display_SCREEN `protobuf:"varint,4,opt,name=screen_level,enum=VamRequest_Display_SCREEN" json:"screen_level,omitempty"`
	// 广告位宽高
	Width    *int32                        `protobuf:"varint,5,opt,name=width" json:"width,omitempty"`
	Height   *int32                        `protobuf:"varint,6,opt,name=height" json:"height,omitempty"`
	Adformat []VamRequest_Display_ADFORMAT `protobuf:"varint,7,rep,name=adformat,enum=VamRequest_Display_ADFORMAT" json:"adformat,omitempty"`
	Adform   *VamRequest_Display_ADFORM    `protobuf:"varint,8,opt,name=adform,enum=VamRequest_Display_ADFORM" json:"adform,omitempty"`
	// 媒体屏蔽创意所属行业
	ExcludedCat []int32 `protobuf:"varint,9,rep,name=excluded_cat" json:"excluded_cat,omitempty"`
	// 媒体的域名屏蔽
	ExcludedAdv []string `protobuf:"bytes,10,rep,name=excluded_adv" json:"excluded_adv,omitempty"`
	// 广告位是否允许投放CPE创意
	Engagement       *bool  `protobuf:"varint,11,opt,name=engagement" json:"engagement,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *VamRequest_Display) Reset()         { *m = VamRequest_Display{} }
func (m *VamRequest_Display) String() string { return proto.CompactTextString(m) }
func (*VamRequest_Display) ProtoMessage()    {}

func (m *VamRequest_Display) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *VamRequest_Display) GetAdspaceId() int32 {
	if m != nil && m.AdspaceId != nil {
		return *m.AdspaceId
	}
	return 0
}

func (m *VamRequest_Display) GetBidfloor() int32 {
	if m != nil && m.Bidfloor != nil {
		return *m.Bidfloor
	}
	return 0
}

func (m *VamRequest_Display) GetScreenLevel() VamRequest_Display_SCREEN {
	if m != nil && m.ScreenLevel != nil {
		return *m.ScreenLevel
	}
	return VamRequest_Display_FIRST
}

func (m *VamRequest_Display) GetWidth() int32 {
	if m != nil && m.Width != nil {
		return *m.Width
	}
	return 0
}

func (m *VamRequest_Display) GetHeight() int32 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

func (m *VamRequest_Display) GetAdformat() []VamRequest_Display_ADFORMAT {
	if m != nil {
		return m.Adformat
	}
	return nil
}

func (m *VamRequest_Display) GetAdform() VamRequest_Display_ADFORM {
	if m != nil && m.Adform != nil {
		return *m.Adform
	}
	return VamRequest_Display_BANNER
}

func (m *VamRequest_Display) GetExcludedCat() []int32 {
	if m != nil {
		return m.ExcludedCat
	}
	return nil
}

func (m *VamRequest_Display) GetExcludedAdv() []string {
	if m != nil {
		return m.ExcludedAdv
	}
	return nil
}

func (m *VamRequest_Display) GetEngagement() bool {
	if m != nil && m.Engagement != nil {
		return *m.Engagement
	}
	return false
}

// -------------------Video------------------------------------------
type VamRequest_Video struct {
	// 广告位ID
	AdspaceId *int32 `protobuf:"varint,1,opt,name=adspace_id" json:"adspace_id,omitempty"`
	// 底价(单位为分)
	Bidfloor    *int32                      `protobuf:"varint,2,opt,name=bidfloor" json:"bidfloor,omitempty"`
	Linear      *VamRequest_Video_Linearity `protobuf:"varint,3,req,name=linear,enum=VamRequest_Video_Linearity,def=1" json:"linear,omitempty"`
	VamProtocol *VamRequest_Video_PROTOCOL  `protobuf:"varint,4,req,name=vam_protocol,enum=VamRequest_Video_PROTOCOL,def=3" json:"vam_protocol,omitempty"`
	Width       *int32                      `protobuf:"varint,5,opt,name=width" json:"width,omitempty"`
	Height      *int32                      `protobuf:"varint,6,opt,name=height" json:"height,omitempty"`
	MaxDuration *int32                      `protobuf:"varint,7,req,name=max_duration" json:"max_duration,omitempty"`
	MinDuration *int32                      `protobuf:"varint,8,req,name=min_duration" json:"min_duration,omitempty"`
	// VAM广告形式，0-前贴片/1-中贴片/2-后贴片/3-角标/4-overlay/99-其他。
	VideoAdform *int32 `protobuf:"varint,9,req,name=video_adform" json:"video_adform,omitempty"`
	// MIME类型,VAM目前为固定值"video/x-flv"
	Mimes         []string                    `protobuf:"bytes,10,rep,name=mimes" json:"mimes,omitempty"`
	VideoAdformat []VamRequest_Video_ADFORMAT `protobuf:"varint,11,rep,name=video_adformat,enum=VamRequest_Video_ADFORMAT" json:"video_adformat,omitempty"`
	// 视频包含的关键字，需要由媒体主动发送。
	Keyword *string `protobuf:"bytes,12,opt,name=keyword" json:"keyword,omitempty"`
	// 媒体屏蔽创意所属行业
	ExcludedCat []int32 `protobuf:"varint,13,rep,name=excluded_cat" json:"excluded_cat,omitempty"`
	// 媒体的域名屏蔽
	ExcludedAdv      []string                   `protobuf:"bytes,14,rep,name=excluded_adv" json:"excluded_adv,omitempty"`
	AdTech           *VamRequest_Video_ADTECH   `protobuf:"varint,15,opt,name=ad_tech,enum=VamRequest_Video_ADTECH" json:"ad_tech,omitempty"`
	Youkuext         *VamRequest_Video_YoukuExt `protobuf:"bytes,16,opt,name=youkuext" json:"youkuext,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *VamRequest_Video) Reset()         { *m = VamRequest_Video{} }
func (m *VamRequest_Video) String() string { return proto.CompactTextString(m) }
func (*VamRequest_Video) ProtoMessage()    {}

const Default_VamRequest_Video_Linear VamRequest_Video_Linearity = VamRequest_Video_LINEAR_IN_STREAM
const Default_VamRequest_Video_VamProtocol VamRequest_Video_PROTOCOL = VamRequest_Video_VAST_3_0

func (m *VamRequest_Video) GetAdspaceId() int32 {
	if m != nil && m.AdspaceId != nil {
		return *m.AdspaceId
	}
	return 0
}

func (m *VamRequest_Video) GetBidfloor() int32 {
	if m != nil && m.Bidfloor != nil {
		return *m.Bidfloor
	}
	return 0
}

func (m *VamRequest_Video) GetLinear() VamRequest_Video_Linearity {
	if m != nil && m.Linear != nil {
		return *m.Linear
	}
	return Default_VamRequest_Video_Linear
}

func (m *VamRequest_Video) GetVamProtocol() VamRequest_Video_PROTOCOL {
	if m != nil && m.VamProtocol != nil {
		return *m.VamProtocol
	}
	return Default_VamRequest_Video_VamProtocol
}

func (m *VamRequest_Video) GetWidth() int32 {
	if m != nil && m.Width != nil {
		return *m.Width
	}
	return 0
}

func (m *VamRequest_Video) GetHeight() int32 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

func (m *VamRequest_Video) GetMaxDuration() int32 {
	if m != nil && m.MaxDuration != nil {
		return *m.MaxDuration
	}
	return 0
}

func (m *VamRequest_Video) GetMinDuration() int32 {
	if m != nil && m.MinDuration != nil {
		return *m.MinDuration
	}
	return 0
}

func (m *VamRequest_Video) GetVideoAdform() int32 {
	if m != nil && m.VideoAdform != nil {
		return *m.VideoAdform
	}
	return 0
}

func (m *VamRequest_Video) GetMimes() []string {
	if m != nil {
		return m.Mimes
	}
	return nil
}

func (m *VamRequest_Video) GetVideoAdformat() []VamRequest_Video_ADFORMAT {
	if m != nil {
		return m.VideoAdformat
	}
	return nil
}

func (m *VamRequest_Video) GetKeyword() string {
	if m != nil && m.Keyword != nil {
		return *m.Keyword
	}
	return ""
}

func (m *VamRequest_Video) GetExcludedCat() []int32 {
	if m != nil {
		return m.ExcludedCat
	}
	return nil
}

func (m *VamRequest_Video) GetExcludedAdv() []string {
	if m != nil {
		return m.ExcludedAdv
	}
	return nil
}

func (m *VamRequest_Video) GetAdTech() VamRequest_Video_ADTECH {
	if m != nil && m.AdTech != nil {
		return *m.AdTech
	}
	return VamRequest_Video_FLASH
}

func (m *VamRequest_Video) GetYoukuext() *VamRequest_Video_YoukuExt {
	if m != nil {
		return m.Youkuext
	}
	return nil
}

type VamRequest_Video_YoukuExt struct {
	Title            *string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Channel          *string `protobuf:"bytes,2,opt,name=channel" json:"channel,omitempty"`
	Cs               *string `protobuf:"bytes,3,opt,name=cs" json:"cs,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *VamRequest_Video_YoukuExt) Reset()         { *m = VamRequest_Video_YoukuExt{} }
func (m *VamRequest_Video_YoukuExt) String() string { return proto.CompactTextString(m) }
func (*VamRequest_Video_YoukuExt) ProtoMessage()    {}

func (m *VamRequest_Video_YoukuExt) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *VamRequest_Video_YoukuExt) GetChannel() string {
	if m != nil && m.Channel != nil {
		return *m.Channel
	}
	return ""
}

func (m *VamRequest_Video_YoukuExt) GetCs() string {
	if m != nil && m.Cs != nil {
		return *m.Cs
	}
	return ""
}

// -------------------Mobile------------------------------------------
type VamRequest_Mobile struct {
	// 广告位ID
	AdspaceId *int32 `protobuf:"varint,1,opt,name=adspace_id" json:"adspace_id,omitempty"`
	// 底价(单位为分)
	Bidfloor *int32 `protobuf:"varint,2,opt,name=bidfloor" json:"bidfloor,omitempty"`
	// 设备品牌(小写),如：samsung,nokia
	Brand *string `protobuf:"bytes,3,opt,name=brand" json:"brand,omitempty"`
	// 设备型号(首字母大写),如:N70, Galaxy
	Model *string `protobuf:"bytes,4,opt,name=model" json:"model,omitempty"`
	// 操作系统,0-其他,1-android，2-ios
	Os *int32 `protobuf:"varint,5,opt,name=os" json:"os,omitempty"`
	// 操作系统版本,如4.5,9.0
	OsVersion *string `protobuf:"bytes,6,opt,name=os_version" json:"os_version,omitempty"`
	// os为1时，imei mac aid aaid不同时为空
	// os为2时，mac idfa OpenUDID不同时为空
	// 设备IMEI号
	Imei *string `protobuf:"bytes,7,opt,name=imei" json:"imei,omitempty"`
	// 终端网卡MAC地址
	Mac *string `protobuf:"bytes,8,opt,name=mac" json:"mac,omitempty"`
	// 用户终端的AndroidID
	Aid *string `protobuf:"bytes,9,opt,name=aid" json:"aid,omitempty"`
	// Android Advertiser ID
	Aaid *string `protobuf:"bytes,10,opt,name=aaid" json:"aaid,omitempty"`
	// Apple's identifier for advertising
	IDFA *string `protobuf:"bytes,11,opt,name=IDFA" json:"IDFA,omitempty"`
	// iOS终端设备的OpenUDID
	OpenUDID *string `protobuf:"bytes,12,opt,name=OpenUDID" json:"OpenUDID,omitempty"`
	// 流量源
	// 0-未识别,1-APP,2-手机浏览器,3-deeplink
	Source *int32 `protobuf:"varint,13,opt,name=source" json:"source,omitempty"`
	// app如果是ios应用，则该字段为app的ID号,
	// 如果是android应用,该字段为app的package名称。
	// 只有在流量源是app时该字段有值
	Pgn *string `protobuf:"bytes,14,opt,name=pgn" json:"pgn,omitempty"`
	// 应用名称
	AppName *string `protobuf:"bytes,15,opt,name=app_name" json:"app_name,omitempty"`
	// 应用版本
	AppVersion *string `protobuf:"bytes,33,opt,name=app_version" json:"app_version,omitempty"`
	// 设备分辨率,宽
	ScreenWidth *int32 `protobuf:"varint,16,opt,name=screen_width" json:"screen_width,omitempty"`
	// 设备分辨率,高
	ScreenHeight *int32 `protobuf:"varint,17,opt,name=screen_height" json:"screen_height,omitempty"`
	// 设备网络环境
	// 0-未识别, 1-wifi, 2-2g, 3-3g, 4-4g
	Network *int32 `protobuf:"varint,18,opt,name=network" json:"network,omitempty"`
	// 设备运营商
	// 0-未识别, 1-移动,2-联通,3-电信
	OperateId *int32 `protobuf:"varint,19,opt,name=operate_id" json:"operate_id,omitempty"`
	// 设备所在地点
	Corner *VamRequest_Mobile_Point `protobuf:"bytes,20,opt,name=corner" json:"corner,omitempty"`
	// 广告位能否全屏显示，True为能，False为不能
	FullScreen *bool `protobuf:"varint,21,opt,name=full_screen" json:"full_screen,omitempty"`
	// 广告位所在屏幕位置
	AdLocation *VamRequest_Mobile_LOCATION_OF_SCREEN `protobuf:"varint,22,opt,name=ad_location,enum=VamRequest_Mobile_LOCATION_OF_SCREEN" json:"ad_location,omitempty"`
	// app的行业分类id，使用google&apple行业分类标准。参见链接：https://developers.google.com/adwords/api/docs/appendix/mobileappcategories
	AppCategory *int32 `protobuf:"varint,23,opt,name=app_category" json:"app_category,omitempty"`
	// 广告位类型
	// 1-web硬广，2-app硬广，3-app开屏，4-app插屏，5-app信息流。
	// 该字段以后有可能扩展类型，请留意。
	Adform *int32 `protobuf:"varint,24,opt,name=adform" json:"adform,omitempty"`
	// 广告位子类型，当adform=2时有效。1-app banner（默认），2-app焦点图，3-app嵌入式。
	Subadform *int32 `protobuf:"varint,34,opt,name=subadform" json:"subadform,omitempty"`
	// MD5加密的手机号，出于隐私考虑，不直接接收手机号
	Mpn *string `protobuf:"bytes,25,opt,name=mpn" json:"mpn,omitempty"`
	// 性别，如果App可以获得用户性别
	// 0-未知,1-男性,2-女性
	Gender *int32 `protobuf:"varint,26,opt,name=gender" json:"gender,omitempty"`
	// 生日，如果App可以获取到用户生日YYYY[MMDD]
	Bd *int32 `protobuf:"varint,27,opt,name=bd" json:"bd,omitempty"`
	// 广告位宽高
	Width       *int32                       `protobuf:"varint,28,opt,name=width" json:"width,omitempty"`
	Height      *int32                       `protobuf:"varint,29,opt,name=height" json:"height,omitempty"`
	Adformat    []VamRequest_Mobile_ADFORMAT `protobuf:"varint,30,rep,name=adformat,enum=VamRequest_Mobile_ADFORMAT" json:"adformat,omitempty"`
	ScreenLevel *VamRequest_Mobile_SCREEN    `protobuf:"varint,31,opt,name=screen_level,enum=VamRequest_Mobile_SCREEN" json:"screen_level,omitempty"`
	// 媒体是否支持deeplink，APP类广告位有效，True为支持，False为不支持。
	Deeplink         *bool  `protobuf:"varint,32,opt,name=deeplink" json:"deeplink,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *VamRequest_Mobile) Reset()         { *m = VamRequest_Mobile{} }
func (m *VamRequest_Mobile) String() string { return proto.CompactTextString(m) }
func (*VamRequest_Mobile) ProtoMessage()    {}

func (m *VamRequest_Mobile) GetAdspaceId() int32 {
	if m != nil && m.AdspaceId != nil {
		return *m.AdspaceId
	}
	return 0
}

func (m *VamRequest_Mobile) GetBidfloor() int32 {
	if m != nil && m.Bidfloor != nil {
		return *m.Bidfloor
	}
	return 0
}

func (m *VamRequest_Mobile) GetBrand() string {
	if m != nil && m.Brand != nil {
		return *m.Brand
	}
	return ""
}

func (m *VamRequest_Mobile) GetModel() string {
	if m != nil && m.Model != nil {
		return *m.Model
	}
	return ""
}

func (m *VamRequest_Mobile) GetOs() int32 {
	if m != nil && m.Os != nil {
		return *m.Os
	}
	return 0
}

func (m *VamRequest_Mobile) GetOsVersion() string {
	if m != nil && m.OsVersion != nil {
		return *m.OsVersion
	}
	return ""
}

func (m *VamRequest_Mobile) GetImei() string {
	if m != nil && m.Imei != nil {
		return *m.Imei
	}
	return ""
}

func (m *VamRequest_Mobile) GetMac() string {
	if m != nil && m.Mac != nil {
		return *m.Mac
	}
	return ""
}

func (m *VamRequest_Mobile) GetAid() string {
	if m != nil && m.Aid != nil {
		return *m.Aid
	}
	return ""
}

func (m *VamRequest_Mobile) GetAaid() string {
	if m != nil && m.Aaid != nil {
		return *m.Aaid
	}
	return ""
}

func (m *VamRequest_Mobile) GetIDFA() string {
	if m != nil && m.IDFA != nil {
		return *m.IDFA
	}
	return ""
}

func (m *VamRequest_Mobile) GetOpenUDID() string {
	if m != nil && m.OpenUDID != nil {
		return *m.OpenUDID
	}
	return ""
}

func (m *VamRequest_Mobile) GetSource() int32 {
	if m != nil && m.Source != nil {
		return *m.Source
	}
	return 0
}

func (m *VamRequest_Mobile) GetPgn() string {
	if m != nil && m.Pgn != nil {
		return *m.Pgn
	}
	return ""
}

func (m *VamRequest_Mobile) GetAppName() string {
	if m != nil && m.AppName != nil {
		return *m.AppName
	}
	return ""
}

func (m *VamRequest_Mobile) GetAppVersion() string {
	if m != nil && m.AppVersion != nil {
		return *m.AppVersion
	}
	return ""
}

func (m *VamRequest_Mobile) GetScreenWidth() int32 {
	if m != nil && m.ScreenWidth != nil {
		return *m.ScreenWidth
	}
	return 0
}

func (m *VamRequest_Mobile) GetScreenHeight() int32 {
	if m != nil && m.ScreenHeight != nil {
		return *m.ScreenHeight
	}
	return 0
}

func (m *VamRequest_Mobile) GetNetwork() int32 {
	if m != nil && m.Network != nil {
		return *m.Network
	}
	return 0
}

func (m *VamRequest_Mobile) GetOperateId() int32 {
	if m != nil && m.OperateId != nil {
		return *m.OperateId
	}
	return 0
}

func (m *VamRequest_Mobile) GetCorner() *VamRequest_Mobile_Point {
	if m != nil {
		return m.Corner
	}
	return nil
}

func (m *VamRequest_Mobile) GetFullScreen() bool {
	if m != nil && m.FullScreen != nil {
		return *m.FullScreen
	}
	return false
}

func (m *VamRequest_Mobile) GetAdLocation() VamRequest_Mobile_LOCATION_OF_SCREEN {
	if m != nil && m.AdLocation != nil {
		return *m.AdLocation
	}
	return VamRequest_Mobile_TOP
}

func (m *VamRequest_Mobile) GetAppCategory() int32 {
	if m != nil && m.AppCategory != nil {
		return *m.AppCategory
	}
	return 0
}

func (m *VamRequest_Mobile) GetAdform() int32 {
	if m != nil && m.Adform != nil {
		return *m.Adform
	}
	return 0
}

func (m *VamRequest_Mobile) GetSubadform() int32 {
	if m != nil && m.Subadform != nil {
		return *m.Subadform
	}
	return 0
}

func (m *VamRequest_Mobile) GetMpn() string {
	if m != nil && m.Mpn != nil {
		return *m.Mpn
	}
	return ""
}

func (m *VamRequest_Mobile) GetGender() int32 {
	if m != nil && m.Gender != nil {
		return *m.Gender
	}
	return 0
}

func (m *VamRequest_Mobile) GetBd() int32 {
	if m != nil && m.Bd != nil {
		return *m.Bd
	}
	return 0
}

func (m *VamRequest_Mobile) GetWidth() int32 {
	if m != nil && m.Width != nil {
		return *m.Width
	}
	return 0
}

func (m *VamRequest_Mobile) GetHeight() int32 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

func (m *VamRequest_Mobile) GetAdformat() []VamRequest_Mobile_ADFORMAT {
	if m != nil {
		return m.Adformat
	}
	return nil
}

func (m *VamRequest_Mobile) GetScreenLevel() VamRequest_Mobile_SCREEN {
	if m != nil && m.ScreenLevel != nil {
		return *m.ScreenLevel
	}
	return VamRequest_Mobile_FIRST
}

func (m *VamRequest_Mobile) GetDeeplink() bool {
	if m != nil && m.Deeplink != nil {
		return *m.Deeplink
	}
	return false
}

type VamRequest_Mobile_Point struct {
	// 经度
	Latitude *float32 `protobuf:"fixed32,1,opt,name=latitude" json:"latitude,omitempty"`
	// 纬度
	Longitude        *float32 `protobuf:"fixed32,2,opt,name=longitude" json:"longitude,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *VamRequest_Mobile_Point) Reset()         { *m = VamRequest_Mobile_Point{} }
func (m *VamRequest_Mobile_Point) String() string { return proto.CompactTextString(m) }
func (*VamRequest_Mobile_Point) ProtoMessage()    {}

func (m *VamRequest_Mobile_Point) GetLatitude() float32 {
	if m != nil && m.Latitude != nil {
		return *m.Latitude
	}
	return 0
}

func (m *VamRequest_Mobile_Point) GetLongitude() float32 {
	if m != nil && m.Longitude != nil {
		return *m.Longitude
	}
	return 0
}

// -------------------Mobile Video------------------------------------------
type VamRequest_Mobile_Video struct {
	// 广告位ID
	AdspaceId *int32 `protobuf:"varint,1,opt,name=adspace_id" json:"adspace_id,omitempty"`
	// 底价(单位为分)
	Bidfloor *int32 `protobuf:"varint,2,opt,name=bidfloor" json:"bidfloor,omitempty"`
	// 设备品牌(小写),如：samsung,nokia
	Brand *string `protobuf:"bytes,3,opt,name=brand" json:"brand,omitempty"`
	// 设备型号(首字母大写),如:N70, Galaxy
	Model *string `protobuf:"bytes,4,opt,name=model" json:"model,omitempty"`
	// 操作系统,0-其他,1-android，2-ios
	Os *int32 `protobuf:"varint,5,opt,name=os" json:"os,omitempty"`
	// 操作系统版本,如4.5,9.0
	OsVersion *string `protobuf:"bytes,6,opt,name=os_version" json:"os_version,omitempty"`
	// os为1时，imei mac aid aaid不同时为空
	// os为2时，mac idfa OpenUDID不同时为空
	// 设备IMEI号
	Imei *string `protobuf:"bytes,7,opt,name=imei" json:"imei,omitempty"`
	// 终端网卡MAC地址去除冒号分隔符，比如：C8AA21024952
	Mac *string `protobuf:"bytes,8,opt,name=mac" json:"mac,omitempty"`
	// 用户终端的AndroidID
	Aid *string `protobuf:"bytes,9,opt,name=aid" json:"aid,omitempty"`
	// Android Advertiser ID
	Aaid *string `protobuf:"bytes,10,opt,name=aaid" json:"aaid,omitempty"`
	// Apple's identifier for advertising
	IDFA *string `protobuf:"bytes,11,opt,name=IDFA" json:"IDFA,omitempty"`
	// iOS终端设备的OpenUDID
	OpenUDID *string `protobuf:"bytes,12,opt,name=OpenUDID" json:"OpenUDID,omitempty"`
	// 流量源
	// 0-未识别,1-APP,2-手机浏览器,3-deeplink
	Source *int32 `protobuf:"varint,13,opt,name=source" json:"source,omitempty"`
	// app如果是ios应用，则该字段为app的ID号,
	// 如果是android应用,该字段为app的package名称。
	// 只有在流量源是app时该字段有值
	Pgn *string `protobuf:"bytes,14,opt,name=pgn" json:"pgn,omitempty"`
	// 应用名称
	AppName *string `protobuf:"bytes,15,opt,name=app_name" json:"app_name,omitempty"`
	// 设备分辨率,宽
	ScreenWidth *int32 `protobuf:"varint,16,opt,name=screen_width" json:"screen_width,omitempty"`
	// 设备分辨率,高
	ScreenHeight *int32 `protobuf:"varint,17,opt,name=screen_height" json:"screen_height,omitempty"`
	// 设备网络环境
	// 0-未识别, 1-wifi, 2-2g, 3-3g, 4-4g
	Network *int32 `protobuf:"varint,18,opt,name=network" json:"network,omitempty"`
	// 设备运营商
	// 0-未识别, 1-移动,2-联通,3-电信
	OperateId *int32 `protobuf:"varint,19,opt,name=operate_id" json:"operate_id,omitempty"`
	// 设备所在地点
	Corner *VamRequest_Mobile_Video_Point `protobuf:"bytes,20,opt,name=corner" json:"corner,omitempty"`
	// MD5加密的手机号，出于隐私考虑，不直接接收手机号
	Mpn *string `protobuf:"bytes,25,opt,name=mpn" json:"mpn,omitempty"`
	// 性别，如果App可以获得用户性别
	// 0-未知,1-男性,2-女性
	Gender *int32 `protobuf:"varint,26,opt,name=gender" json:"gender,omitempty"`
	// 生日，如果App可以获取到用户生日YYYY[MMDD]
	Bd *int32 `protobuf:"varint,27,opt,name=bd" json:"bd,omitempty"`
	// 广告位宽高
	Width       *int32                             `protobuf:"varint,28,opt,name=width" json:"width,omitempty"`
	Height      *int32                             `protobuf:"varint,29,opt,name=height" json:"height,omitempty"`
	Adformat    []VamRequest_Mobile_Video_ADFORMAT `protobuf:"varint,30,rep,name=adformat,enum=VamRequest_Mobile_Video_ADFORMAT" json:"adformat,omitempty"`
	Linear      *VamRequest_Mobile_Video_Linearity `protobuf:"varint,31,req,name=linear,enum=VamRequest_Mobile_Video_Linearity,def=1" json:"linear,omitempty"`
	VamProtocol *VamRequest_Mobile_Video_PROTOCOL  `protobuf:"varint,32,req,name=vam_protocol,enum=VamRequest_Mobile_Video_PROTOCOL,def=3" json:"vam_protocol,omitempty"`
	MaxDuration *int32                             `protobuf:"varint,33,req,name=max_duration" json:"max_duration,omitempty"`
	MinDuration *int32                             `protobuf:"varint,34,req,name=min_duration" json:"min_duration,omitempty"`
	// VAM广告形式，0-前贴片/1-中贴片/2-后贴片/3-角标/4-overlay/99-其他。
	VideoAdform *int32 `protobuf:"varint,35,req,name=video_adform" json:"video_adform,omitempty"`
	// MIME类型,VAM目前为固定值"video/x-flv"
	Mimes []string `protobuf:"bytes,36,rep,name=mimes" json:"mimes,omitempty"`
	// 视频包含的关键字，需要由媒体主动发送。
	Keyword *string `protobuf:"bytes,37,opt,name=keyword" json:"keyword,omitempty"`
	// 媒体屏蔽创意所属行业
	ExcludedCat []int32 `protobuf:"varint,38,rep,name=excluded_cat" json:"excluded_cat,omitempty"`
	// 媒体的域名屏蔽
	ExcludedAdv      []string `protobuf:"bytes,39,rep,name=excluded_adv" json:"excluded_adv,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *VamRequest_Mobile_Video) Reset()         { *m = VamRequest_Mobile_Video{} }
func (m *VamRequest_Mobile_Video) String() string { return proto.CompactTextString(m) }
func (*VamRequest_Mobile_Video) ProtoMessage()    {}

const Default_VamRequest_Mobile_Video_Linear VamRequest_Mobile_Video_Linearity = VamRequest_Mobile_Video_LINEAR_IN_STREAM
const Default_VamRequest_Mobile_Video_VamProtocol VamRequest_Mobile_Video_PROTOCOL = VamRequest_Mobile_Video_VAST_3_0

func (m *VamRequest_Mobile_Video) GetAdspaceId() int32 {
	if m != nil && m.AdspaceId != nil {
		return *m.AdspaceId
	}
	return 0
}

func (m *VamRequest_Mobile_Video) GetBidfloor() int32 {
	if m != nil && m.Bidfloor != nil {
		return *m.Bidfloor
	}
	return 0
}

func (m *VamRequest_Mobile_Video) GetBrand() string {
	if m != nil && m.Brand != nil {
		return *m.Brand
	}
	return ""
}

func (m *VamRequest_Mobile_Video) GetModel() string {
	if m != nil && m.Model != nil {
		return *m.Model
	}
	return ""
}

func (m *VamRequest_Mobile_Video) GetOs() int32 {
	if m != nil && m.Os != nil {
		return *m.Os
	}
	return 0
}

func (m *VamRequest_Mobile_Video) GetOsVersion() string {
	if m != nil && m.OsVersion != nil {
		return *m.OsVersion
	}
	return ""
}

func (m *VamRequest_Mobile_Video) GetImei() string {
	if m != nil && m.Imei != nil {
		return *m.Imei
	}
	return ""
}

func (m *VamRequest_Mobile_Video) GetMac() string {
	if m != nil && m.Mac != nil {
		return *m.Mac
	}
	return ""
}

func (m *VamRequest_Mobile_Video) GetAid() string {
	if m != nil && m.Aid != nil {
		return *m.Aid
	}
	return ""
}

func (m *VamRequest_Mobile_Video) GetAaid() string {
	if m != nil && m.Aaid != nil {
		return *m.Aaid
	}
	return ""
}

func (m *VamRequest_Mobile_Video) GetIDFA() string {
	if m != nil && m.IDFA != nil {
		return *m.IDFA
	}
	return ""
}

func (m *VamRequest_Mobile_Video) GetOpenUDID() string {
	if m != nil && m.OpenUDID != nil {
		return *m.OpenUDID
	}
	return ""
}

func (m *VamRequest_Mobile_Video) GetSource() int32 {
	if m != nil && m.Source != nil {
		return *m.Source
	}
	return 0
}

func (m *VamRequest_Mobile_Video) GetPgn() string {
	if m != nil && m.Pgn != nil {
		return *m.Pgn
	}
	return ""
}

func (m *VamRequest_Mobile_Video) GetAppName() string {
	if m != nil && m.AppName != nil {
		return *m.AppName
	}
	return ""
}

func (m *VamRequest_Mobile_Video) GetScreenWidth() int32 {
	if m != nil && m.ScreenWidth != nil {
		return *m.ScreenWidth
	}
	return 0
}

func (m *VamRequest_Mobile_Video) GetScreenHeight() int32 {
	if m != nil && m.ScreenHeight != nil {
		return *m.ScreenHeight
	}
	return 0
}

func (m *VamRequest_Mobile_Video) GetNetwork() int32 {
	if m != nil && m.Network != nil {
		return *m.Network
	}
	return 0
}

func (m *VamRequest_Mobile_Video) GetOperateId() int32 {
	if m != nil && m.OperateId != nil {
		return *m.OperateId
	}
	return 0
}

func (m *VamRequest_Mobile_Video) GetCorner() *VamRequest_Mobile_Video_Point {
	if m != nil {
		return m.Corner
	}
	return nil
}

func (m *VamRequest_Mobile_Video) GetMpn() string {
	if m != nil && m.Mpn != nil {
		return *m.Mpn
	}
	return ""
}

func (m *VamRequest_Mobile_Video) GetGender() int32 {
	if m != nil && m.Gender != nil {
		return *m.Gender
	}
	return 0
}

func (m *VamRequest_Mobile_Video) GetBd() int32 {
	if m != nil && m.Bd != nil {
		return *m.Bd
	}
	return 0
}

func (m *VamRequest_Mobile_Video) GetWidth() int32 {
	if m != nil && m.Width != nil {
		return *m.Width
	}
	return 0
}

func (m *VamRequest_Mobile_Video) GetHeight() int32 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

func (m *VamRequest_Mobile_Video) GetAdformat() []VamRequest_Mobile_Video_ADFORMAT {
	if m != nil {
		return m.Adformat
	}
	return nil
}

func (m *VamRequest_Mobile_Video) GetLinear() VamRequest_Mobile_Video_Linearity {
	if m != nil && m.Linear != nil {
		return *m.Linear
	}
	return Default_VamRequest_Mobile_Video_Linear
}

func (m *VamRequest_Mobile_Video) GetVamProtocol() VamRequest_Mobile_Video_PROTOCOL {
	if m != nil && m.VamProtocol != nil {
		return *m.VamProtocol
	}
	return Default_VamRequest_Mobile_Video_VamProtocol
}

func (m *VamRequest_Mobile_Video) GetMaxDuration() int32 {
	if m != nil && m.MaxDuration != nil {
		return *m.MaxDuration
	}
	return 0
}

func (m *VamRequest_Mobile_Video) GetMinDuration() int32 {
	if m != nil && m.MinDuration != nil {
		return *m.MinDuration
	}
	return 0
}

func (m *VamRequest_Mobile_Video) GetVideoAdform() int32 {
	if m != nil && m.VideoAdform != nil {
		return *m.VideoAdform
	}
	return 0
}

func (m *VamRequest_Mobile_Video) GetMimes() []string {
	if m != nil {
		return m.Mimes
	}
	return nil
}

func (m *VamRequest_Mobile_Video) GetKeyword() string {
	if m != nil && m.Keyword != nil {
		return *m.Keyword
	}
	return ""
}

func (m *VamRequest_Mobile_Video) GetExcludedCat() []int32 {
	if m != nil {
		return m.ExcludedCat
	}
	return nil
}

func (m *VamRequest_Mobile_Video) GetExcludedAdv() []string {
	if m != nil {
		return m.ExcludedAdv
	}
	return nil
}

type VamRequest_Mobile_Video_Point struct {
	// 经度
	Latitude *float32 `protobuf:"fixed32,1,opt,name=latitude" json:"latitude,omitempty"`
	// 纬度
	Longitude        *float32 `protobuf:"fixed32,2,opt,name=longitude" json:"longitude,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *VamRequest_Mobile_Video_Point) Reset()         { *m = VamRequest_Mobile_Video_Point{} }
func (m *VamRequest_Mobile_Video_Point) String() string { return proto.CompactTextString(m) }
func (*VamRequest_Mobile_Video_Point) ProtoMessage()    {}

func (m *VamRequest_Mobile_Video_Point) GetLatitude() float32 {
	if m != nil && m.Latitude != nil {
		return *m.Latitude
	}
	return 0
}

func (m *VamRequest_Mobile_Video_Point) GetLongitude() float32 {
	if m != nil && m.Longitude != nil {
		return *m.Longitude
	}
	return 0
}

type VamResponse struct {
	// 与REQUEST中的id一致，否则会被认为无效。
	Id  *string            `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	Bid []*VamResponse_Bid `protobuf:"bytes,2,rep,name=bid" json:"bid,omitempty"`
	// 固定值为CNY，可以考虑不要
	Cur              *string `protobuf:"bytes,3,opt,name=cur" json:"cur,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *VamResponse) Reset()         { *m = VamResponse{} }
func (m *VamResponse) String() string { return proto.CompactTextString(m) }
func (*VamResponse) ProtoMessage()    {}

func (m *VamResponse) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *VamResponse) GetBid() []*VamResponse_Bid {
	if m != nil {
		return m.Bid
	}
	return nil
}

func (m *VamResponse) GetCur() string {
	if m != nil && m.Cur != nil {
		return *m.Cur
	}
	return ""
}

type VamResponse_Bid struct {
	// 由竞价方提供的创意ID号，每个创意必须有一个创意ID号，每个创意ID号只能绑定给一个创意。
	Crid *string `protobuf:"bytes,1,req,name=crid" json:"crid,omitempty"`
	// 出价价格，请使用整形，如：1.29元请填写129.
	Price *int32 `protobuf:"varint,2,req,name=price" json:"price,omitempty"`
	// 广告的id编号，与广告请求中的display.id相同，视频时，该字段不填。
	Id             *int32                   `protobuf:"varint,3,opt,name=id" json:"id,omitempty"`
	VideoBidding   *VamResponse_Bid_Video   `protobuf:"bytes,4,opt,name=video_bidding" json:"video_bidding,omitempty"`
	DisplayBidding *VamResponse_Bid_Display `protobuf:"bytes,5,opt,name=display_bidding" json:"display_bidding,omitempty"`
	MobileBidding  *VamResponse_Bid_Mobile  `protobuf:"bytes,12,opt,name=mobile_bidding" json:"mobile_bidding,omitempty"`
	// Mobile Video
	MobileVideoBidding *VamResponse_Bid_Video `protobuf:"bytes,13,opt,name=mobile_video_bidding" json:"mobile_video_bidding,omitempty"`
	// 广告主名称，目前该字段暂时没用
	AdvertiserName []string `protobuf:"bytes,6,rep,name=advertiser_name" json:"advertiser_name,omitempty"`
	// DEAL_ID
	DealId *int32 `protobuf:"varint,7,opt,name=deal_id" json:"deal_id,omitempty"`
	// winnotice_url
	WinnoticeUrl *string `protobuf:"bytes,8,opt,name=winnotice_url" json:"winnotice_url,omitempty"`
	// 广告代理机构agencies.txt,目前该字段暂时没用
	AgencyId *int32 `protobuf:"varint,9,opt,name=agency_id" json:"agency_id,omitempty"`
	// cookiemapping 1打开 0取消
	Cmflag *int32 `protobuf:"varint,10,opt,name=cmflag" json:"cmflag,omitempty"`
	// dsp自定义宏，用于替换${VAM_EXTDATA}
	Extdata *string `protobuf:"bytes,11,opt,name=extdata" json:"extdata,omitempty"`
	// 表明此次竞价归属的席位ID，线下提供ID列表，默认为0表示没有归属的席位。
	SeatId           *int32 `protobuf:"varint,14,opt,name=seat_id,def=0" json:"seat_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *VamResponse_Bid) Reset()         { *m = VamResponse_Bid{} }
func (m *VamResponse_Bid) String() string { return proto.CompactTextString(m) }
func (*VamResponse_Bid) ProtoMessage()    {}

const Default_VamResponse_Bid_SeatId int32 = 0

func (m *VamResponse_Bid) GetCrid() string {
	if m != nil && m.Crid != nil {
		return *m.Crid
	}
	return ""
}

func (m *VamResponse_Bid) GetPrice() int32 {
	if m != nil && m.Price != nil {
		return *m.Price
	}
	return 0
}

func (m *VamResponse_Bid) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *VamResponse_Bid) GetVideoBidding() *VamResponse_Bid_Video {
	if m != nil {
		return m.VideoBidding
	}
	return nil
}

func (m *VamResponse_Bid) GetDisplayBidding() *VamResponse_Bid_Display {
	if m != nil {
		return m.DisplayBidding
	}
	return nil
}

func (m *VamResponse_Bid) GetMobileBidding() *VamResponse_Bid_Mobile {
	if m != nil {
		return m.MobileBidding
	}
	return nil
}

func (m *VamResponse_Bid) GetMobileVideoBidding() *VamResponse_Bid_Video {
	if m != nil {
		return m.MobileVideoBidding
	}
	return nil
}

func (m *VamResponse_Bid) GetAdvertiserName() []string {
	if m != nil {
		return m.AdvertiserName
	}
	return nil
}

func (m *VamResponse_Bid) GetDealId() int32 {
	if m != nil && m.DealId != nil {
		return *m.DealId
	}
	return 0
}

func (m *VamResponse_Bid) GetWinnoticeUrl() string {
	if m != nil && m.WinnoticeUrl != nil {
		return *m.WinnoticeUrl
	}
	return ""
}

func (m *VamResponse_Bid) GetAgencyId() int32 {
	if m != nil && m.AgencyId != nil {
		return *m.AgencyId
	}
	return 0
}

func (m *VamResponse_Bid) GetCmflag() int32 {
	if m != nil && m.Cmflag != nil {
		return *m.Cmflag
	}
	return 0
}

func (m *VamResponse_Bid) GetExtdata() string {
	if m != nil && m.Extdata != nil {
		return *m.Extdata
	}
	return ""
}

func (m *VamResponse_Bid) GetSeatId() int32 {
	if m != nil && m.SeatId != nil {
		return *m.SeatId
	}
	return Default_VamResponse_Bid_SeatId
}

// VideoInfo只在竞价视频广告时使用，只有在广告请求中标示本次广告请求的是视频广告时该字段才有效。
type VamResponse_Bid_Video struct {
	// 点击监测Url
	ClickUrls []string `protobuf:"bytes,1,rep,name=click_urls" json:"click_urls,omitempty"`
	// 曝光监测Url
	ShowUrls         []string                       `protobuf:"bytes,2,rep,name=show_urls" json:"show_urls,omitempty"`
	Events           []*VamResponse_Bid_Video_Event `protobuf:"bytes,3,rep,name=events" json:"events,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *VamResponse_Bid_Video) Reset()         { *m = VamResponse_Bid_Video{} }
func (m *VamResponse_Bid_Video) String() string { return proto.CompactTextString(m) }
func (*VamResponse_Bid_Video) ProtoMessage()    {}

func (m *VamResponse_Bid_Video) GetClickUrls() []string {
	if m != nil {
		return m.ClickUrls
	}
	return nil
}

func (m *VamResponse_Bid_Video) GetShowUrls() []string {
	if m != nil {
		return m.ShowUrls
	}
	return nil
}

func (m *VamResponse_Bid_Video) GetEvents() []*VamResponse_Bid_Video_Event {
	if m != nil {
		return m.Events
	}
	return nil
}

// events是指用户触发的events的事件，events类别详见vam对接文档。
type VamResponse_Bid_Video_Event struct {
	// evet的名字
	EventName *string `protobuf:"bytes,1,opt,name=event_name" json:"event_name,omitempty"`
	// event监测地址
	TrackUrl *string `protobuf:"bytes,2,opt,name=track_url" json:"track_url,omitempty"`
	// 在progress事件种使用offset值
	Offset           *string `protobuf:"bytes,3,opt,name=offset" json:"offset,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *VamResponse_Bid_Video_Event) Reset()         { *m = VamResponse_Bid_Video_Event{} }
func (m *VamResponse_Bid_Video_Event) String() string { return proto.CompactTextString(m) }
func (*VamResponse_Bid_Video_Event) ProtoMessage()    {}

func (m *VamResponse_Bid_Video_Event) GetEventName() string {
	if m != nil && m.EventName != nil {
		return *m.EventName
	}
	return ""
}

func (m *VamResponse_Bid_Video_Event) GetTrackUrl() string {
	if m != nil && m.TrackUrl != nil {
		return *m.TrackUrl
	}
	return ""
}

func (m *VamResponse_Bid_Video_Event) GetOffset() string {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return ""
}

// DisplayInfo只在竞价展示广告时使用，只有在广告请求中标示本次广告请求的是展示广告时该字段才有效。
type VamResponse_Bid_Display struct {
	// 目标跳转页的主域名。
	Adomain []string `protobuf:"bytes,1,rep,name=adomain" json:"adomain,omitempty"`
	// HTML代码片段,html_snippet,该类代码片段将被放在网页上以展示广告。
	HtmlSnippet *string                         `protobuf:"bytes,2,opt,name=html_snippet" json:"html_snippet,omitempty"`
	Fmt         *VamResponse_Bid_Display_FORMAT `protobuf:"varint,3,opt,name=fmt,enum=VamResponse_Bid_Display_FORMAT" json:"fmt,omitempty"`
	// 创意的行业分类
	Category *int32 `protobuf:"varint,5,opt,name=category" json:"category,omitempty"`
	// 曝光监测url
	ShowUrl *string `protobuf:"bytes,6,opt,name=show_url" json:"show_url,omitempty"`
	// 点击检测url
	ClickUrl *string `protobuf:"bytes,7,opt,name=click_url" json:"click_url,omitempty"`
	// 竞价类型，0-普通PC硬广（默认），1-CPE
	Bidtype *int32 `protobuf:"varint,8,opt,name=bidtype" json:"bidtype,omitempty"`
	// bidtype=1时有效，CPE创意用于图片曝光监测。
	ShowUrls []string `protobuf:"bytes,9,rep,name=show_urls" json:"show_urls,omitempty"`
	// bidtype=1时有效，CPE创意用于图片点击监测。
	ClickUrls []string `protobuf:"bytes,10,rep,name=click_urls" json:"click_urls,omitempty"`
	// bidtype=1时有效，CPE创意用于视频曝光监测。
	CpeShowUrls []string `protobuf:"bytes,11,rep,name=cpe_show_urls" json:"cpe_show_urls,omitempty"`
	// bidtype=1时有效，CPE创意用于视频点击监测。
	CpeClickUrls []string `protobuf:"bytes,12,rep,name=cpe_click_urls" json:"cpe_click_urls,omitempty"`
	// bidtype=1时有效，CPE创意用于可视化曝光监测。
	VisibleUrls      []string `protobuf:"bytes,13,rep,name=visible_urls" json:"visible_urls,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *VamResponse_Bid_Display) Reset()         { *m = VamResponse_Bid_Display{} }
func (m *VamResponse_Bid_Display) String() string { return proto.CompactTextString(m) }
func (*VamResponse_Bid_Display) ProtoMessage()    {}

func (m *VamResponse_Bid_Display) GetAdomain() []string {
	if m != nil {
		return m.Adomain
	}
	return nil
}

func (m *VamResponse_Bid_Display) GetHtmlSnippet() string {
	if m != nil && m.HtmlSnippet != nil {
		return *m.HtmlSnippet
	}
	return ""
}

func (m *VamResponse_Bid_Display) GetFmt() VamResponse_Bid_Display_FORMAT {
	if m != nil && m.Fmt != nil {
		return *m.Fmt
	}
	return VamResponse_Bid_Display_STATIC_PIC
}

func (m *VamResponse_Bid_Display) GetCategory() int32 {
	if m != nil && m.Category != nil {
		return *m.Category
	}
	return 0
}

func (m *VamResponse_Bid_Display) GetShowUrl() string {
	if m != nil && m.ShowUrl != nil {
		return *m.ShowUrl
	}
	return ""
}

func (m *VamResponse_Bid_Display) GetClickUrl() string {
	if m != nil && m.ClickUrl != nil {
		return *m.ClickUrl
	}
	return ""
}

func (m *VamResponse_Bid_Display) GetBidtype() int32 {
	if m != nil && m.Bidtype != nil {
		return *m.Bidtype
	}
	return 0
}

func (m *VamResponse_Bid_Display) GetShowUrls() []string {
	if m != nil {
		return m.ShowUrls
	}
	return nil
}

func (m *VamResponse_Bid_Display) GetClickUrls() []string {
	if m != nil {
		return m.ClickUrls
	}
	return nil
}

func (m *VamResponse_Bid_Display) GetCpeShowUrls() []string {
	if m != nil {
		return m.CpeShowUrls
	}
	return nil
}

func (m *VamResponse_Bid_Display) GetCpeClickUrls() []string {
	if m != nil {
		return m.CpeClickUrls
	}
	return nil
}

func (m *VamResponse_Bid_Display) GetVisibleUrls() []string {
	if m != nil {
		return m.VisibleUrls
	}
	return nil
}

// Mobile只在竞价移动广告时使用,只有在广告请求中标示本次广告请求的是移动广告时该字段才有效。
type VamResponse_Bid_Mobile struct {
	// 曝光监测url
	ShowUrls []string `protobuf:"bytes,1,rep,name=show_urls" json:"show_urls,omitempty"`
	// 点击监测url
	ClickUrls        []string `protobuf:"bytes,2,rep,name=click_urls" json:"click_urls,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *VamResponse_Bid_Mobile) Reset()         { *m = VamResponse_Bid_Mobile{} }
func (m *VamResponse_Bid_Mobile) String() string { return proto.CompactTextString(m) }
func (*VamResponse_Bid_Mobile) ProtoMessage()    {}

func (m *VamResponse_Bid_Mobile) GetShowUrls() []string {
	if m != nil {
		return m.ShowUrls
	}
	return nil
}

func (m *VamResponse_Bid_Mobile) GetClickUrls() []string {
	if m != nil {
		return m.ClickUrls
	}
	return nil
}

func init() {
	proto.RegisterType((*VamRequest)(nil), "VamRequest")
	proto.RegisterType((*VamRequest_AdmasterData)(nil), "VamRequest.Admaster_data")
	proto.RegisterType((*VamRequest_PmpInfo)(nil), "VamRequest.PmpInfo")
	proto.RegisterType((*VamRequest_Display)(nil), "VamRequest.Display")
	proto.RegisterType((*VamRequest_Video)(nil), "VamRequest.Video")
	proto.RegisterType((*VamRequest_Video_YoukuExt)(nil), "VamRequest.Video.YoukuExt")
	proto.RegisterType((*VamRequest_Mobile)(nil), "VamRequest.Mobile")
	proto.RegisterType((*VamRequest_Mobile_Point)(nil), "VamRequest.Mobile.Point")
	proto.RegisterType((*VamRequest_Mobile_Video)(nil), "VamRequest.Mobile_Video")
	proto.RegisterType((*VamRequest_Mobile_Video_Point)(nil), "VamRequest.Mobile_Video.Point")
	proto.RegisterType((*VamResponse)(nil), "VamResponse")
	proto.RegisterType((*VamResponse_Bid)(nil), "VamResponse.Bid")
	proto.RegisterType((*VamResponse_Bid_Video)(nil), "VamResponse.Bid.Video")
	proto.RegisterType((*VamResponse_Bid_Video_Event)(nil), "VamResponse.Bid.Video.Event")
	proto.RegisterType((*VamResponse_Bid_Display)(nil), "VamResponse.Bid.Display")
	proto.RegisterType((*VamResponse_Bid_Mobile)(nil), "VamResponse.Bid.Mobile")
	proto.RegisterEnum("VamRequest_THIRDNAME", VamRequest_THIRDNAME_name, VamRequest_THIRDNAME_value)
	proto.RegisterEnum("VamRequest_DEVICETYPE", VamRequest_DEVICETYPE_name, VamRequest_DEVICETYPE_value)
	proto.RegisterEnum("VamRequest_DATASOURCE", VamRequest_DATASOURCE_name, VamRequest_DATASOURCE_value)
	proto.RegisterEnum("VamRequest_Display_SCREEN", VamRequest_Display_SCREEN_name, VamRequest_Display_SCREEN_value)
	proto.RegisterEnum("VamRequest_Display_ADFORMAT", VamRequest_Display_ADFORMAT_name, VamRequest_Display_ADFORMAT_value)
	proto.RegisterEnum("VamRequest_Display_ADFORM", VamRequest_Display_ADFORM_name, VamRequest_Display_ADFORM_value)
	proto.RegisterEnum("VamRequest_Video_Linearity", VamRequest_Video_Linearity_name, VamRequest_Video_Linearity_value)
	proto.RegisterEnum("VamRequest_Video_PROTOCOL", VamRequest_Video_PROTOCOL_name, VamRequest_Video_PROTOCOL_value)
	proto.RegisterEnum("VamRequest_Video_ADFORMAT", VamRequest_Video_ADFORMAT_name, VamRequest_Video_ADFORMAT_value)
	proto.RegisterEnum("VamRequest_Video_ADTECH", VamRequest_Video_ADTECH_name, VamRequest_Video_ADTECH_value)
	proto.RegisterEnum("VamRequest_Mobile_LOCATION_OF_SCREEN", VamRequest_Mobile_LOCATION_OF_SCREEN_name, VamRequest_Mobile_LOCATION_OF_SCREEN_value)
	proto.RegisterEnum("VamRequest_Mobile_ADFORMAT", VamRequest_Mobile_ADFORMAT_name, VamRequest_Mobile_ADFORMAT_value)
	proto.RegisterEnum("VamRequest_Mobile_SCREEN", VamRequest_Mobile_SCREEN_name, VamRequest_Mobile_SCREEN_value)
	proto.RegisterEnum("VamRequest_Mobile_Video_ADFORMAT", VamRequest_Mobile_Video_ADFORMAT_name, VamRequest_Mobile_Video_ADFORMAT_value)
	proto.RegisterEnum("VamRequest_Mobile_Video_Linearity", VamRequest_Mobile_Video_Linearity_name, VamRequest_Mobile_Video_Linearity_value)
	proto.RegisterEnum("VamRequest_Mobile_Video_PROTOCOL", VamRequest_Mobile_Video_PROTOCOL_name, VamRequest_Mobile_Video_PROTOCOL_value)
	proto.RegisterEnum("VamResponse_Bid_Display_FORMAT", VamResponse_Bid_Display_FORMAT_name, VamResponse_Bid_Display_FORMAT_value)
}
