// Code generated by protoc-gen-go.
// source: ftx.proto
// DO NOT EDIT!

/*
Package ftx is a generated protocol buffer package.

本文档为本系统用来请求广告信息的协议文档。

It is generated from these files:
	ftx.proto

It has these top-level messages:
	BidRequest
	BidResponse
*/
package ftx

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type BidRequest_AdSlot_Native_Asset_NativeType int32

const (
	BidRequest_AdSlot_Native_Asset_NATIVE_TITLE       BidRequest_AdSlot_Native_Asset_NativeType = 1
	BidRequest_AdSlot_Native_Asset_NATIVE_IMAGE       BidRequest_AdSlot_Native_Asset_NativeType = 2
	BidRequest_AdSlot_Native_Asset_NATIVE_ICON        BidRequest_AdSlot_Native_Asset_NativeType = 3
	BidRequest_AdSlot_Native_Asset_NATIVE_SUBTITLE    BidRequest_AdSlot_Native_Asset_NativeType = 4
	BidRequest_AdSlot_Native_Asset_NATIVE_DESCRIPTION BidRequest_AdSlot_Native_Asset_NativeType = 5
	BidRequest_AdSlot_Native_Asset_NATIVE_BUTTON_TEXT BidRequest_AdSlot_Native_Asset_NativeType = 6
	BidRequest_AdSlot_Native_Asset_NATIVE_VIDEO       BidRequest_AdSlot_Native_Asset_NativeType = 7
	BidRequest_AdSlot_Native_Asset_NATIVE_LOGO        BidRequest_AdSlot_Native_Asset_NativeType = 8
)

var BidRequest_AdSlot_Native_Asset_NativeType_name = map[int32]string{
	1: "NATIVE_TITLE",
	2: "NATIVE_IMAGE",
	3: "NATIVE_ICON",
	4: "NATIVE_SUBTITLE",
	5: "NATIVE_DESCRIPTION",
	6: "NATIVE_BUTTON_TEXT",
	7: "NATIVE_VIDEO",
	8: "NATIVE_LOGO",
}
var BidRequest_AdSlot_Native_Asset_NativeType_value = map[string]int32{
	"NATIVE_TITLE":       1,
	"NATIVE_IMAGE":       2,
	"NATIVE_ICON":        3,
	"NATIVE_SUBTITLE":    4,
	"NATIVE_DESCRIPTION": 5,
	"NATIVE_BUTTON_TEXT": 6,
	"NATIVE_VIDEO":       7,
	"NATIVE_LOGO":        8,
}

func (x BidRequest_AdSlot_Native_Asset_NativeType) Enum() *BidRequest_AdSlot_Native_Asset_NativeType {
	p := new(BidRequest_AdSlot_Native_Asset_NativeType)
	*p = x
	return p
}
func (x BidRequest_AdSlot_Native_Asset_NativeType) String() string {
	return proto.EnumName(BidRequest_AdSlot_Native_Asset_NativeType_name, int32(x))
}
func (x *BidRequest_AdSlot_Native_Asset_NativeType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_AdSlot_Native_Asset_NativeType_value, data, "BidRequest_AdSlot_Native_Asset_NativeType")
	if err != nil {
		return err
	}
	*x = BidRequest_AdSlot_Native_Asset_NativeType(value)
	return nil
}

type BidRequest_Mobile_IDEnc int32

const (
	BidRequest_Mobile_DEFAULT BidRequest_Mobile_IDEnc = 0
	BidRequest_Mobile_MD5     BidRequest_Mobile_IDEnc = 1
	BidRequest_Mobile_SHA1    BidRequest_Mobile_IDEnc = 2
)

var BidRequest_Mobile_IDEnc_name = map[int32]string{
	0: "DEFAULT",
	1: "MD5",
	2: "SHA1",
}
var BidRequest_Mobile_IDEnc_value = map[string]int32{
	"DEFAULT": 0,
	"MD5":     1,
	"SHA1":    2,
}

func (x BidRequest_Mobile_IDEnc) Enum() *BidRequest_Mobile_IDEnc {
	p := new(BidRequest_Mobile_IDEnc)
	*p = x
	return p
}
func (x BidRequest_Mobile_IDEnc) String() string {
	return proto.EnumName(BidRequest_Mobile_IDEnc_name, int32(x))
}
func (x *BidRequest_Mobile_IDEnc) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_Mobile_IDEnc_value, data, "BidRequest_Mobile_IDEnc")
	if err != nil {
		return err
	}
	*x = BidRequest_Mobile_IDEnc(value)
	return nil
}

type BidRequest struct {
	// 由系统生成的唯一的ID号，作为整个竞价通路的校验标志。
	Id *string `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	// 用户IP地址,点分十进制字符串
	Ip *string `protobuf:"bytes,2,opt,name=ip" json:"ip,omitempty"`
	// ip转成geo code
	GeoId *int64 `protobuf:"varint,3,opt,name=geo_id" json:"geo_id,omitempty"`
	// 用户浏览器的UA信息
	UserAgent *string `protobuf:"bytes,4,opt,name=user_agent" json:"user_agent,omitempty"`
	// 用户的设备类型,文档补足
	DeviceType *int32 `protobuf:"varint,5,opt,name=device_type" json:"device_type,omitempty"`
	// 默认每次请求一个广告位
	AdSlot []*BidRequest_AdSlot `protobuf:"bytes,6,rep,name=ad_slot" json:"ad_slot,omitempty"`
	// 用户信息
	User *BidRequest_User `protobuf:"bytes,7,opt,name=user" json:"user,omitempty"`
	// 页面信息
	Site   *BidRequest_Site   `protobuf:"bytes,8,opt,name=site" json:"site,omitempty"`
	Mobile *BidRequest_Mobile `protobuf:"bytes,9,opt,name=mobile" json:"mobile,omitempty"`
	// vendor对http支持情况
	// 1表示仅支持http
	// 2表示仅支持https
	// 3表示都支持
	MonitorUrlProtocol *int32 `protobuf:"varint,10,opt,name=monitor_url_protocol,def=3" json:"monitor_url_protocol,omitempty"`
	// vendor对302跳转支持 0表示不支持，1表示支持
	ClientDirection *int32 `protobuf:"varint,11,opt,name=client_direction,def=1" json:"client_direction,omitempty"`
	// 流量来源id
	SourceId         *int32                    `protobuf:"varint,12,opt,name=source_id" json:"source_id,omitempty"`
	SourceChannel    *BidRequest_SourceChannel `protobuf:"bytes,13,opt,name=source_channel" json:"source_channel,omitempty"`
	IsDebug          *bool                     `protobuf:"varint,20,opt,name=is_debug,def=0" json:"is_debug,omitempty"`
	IsTest           *bool                     `protobuf:"varint,21,opt,name=is_test,def=0" json:"is_test,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *BidRequest) Reset()         { *m = BidRequest{} }
func (m *BidRequest) String() string { return proto.CompactTextString(m) }
func (*BidRequest) ProtoMessage()    {}

const Default_BidRequest_MonitorUrlProtocol int32 = 3
const Default_BidRequest_ClientDirection int32 = 1
const Default_BidRequest_IsDebug bool = false
const Default_BidRequest_IsTest bool = false

func (m *BidRequest) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *BidRequest) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *BidRequest) GetGeoId() int64 {
	if m != nil && m.GeoId != nil {
		return *m.GeoId
	}
	return 0
}

func (m *BidRequest) GetUserAgent() string {
	if m != nil && m.UserAgent != nil {
		return *m.UserAgent
	}
	return ""
}

func (m *BidRequest) GetDeviceType() int32 {
	if m != nil && m.DeviceType != nil {
		return *m.DeviceType
	}
	return 0
}

func (m *BidRequest) GetAdSlot() []*BidRequest_AdSlot {
	if m != nil {
		return m.AdSlot
	}
	return nil
}

func (m *BidRequest) GetUser() *BidRequest_User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *BidRequest) GetSite() *BidRequest_Site {
	if m != nil {
		return m.Site
	}
	return nil
}

func (m *BidRequest) GetMobile() *BidRequest_Mobile {
	if m != nil {
		return m.Mobile
	}
	return nil
}

func (m *BidRequest) GetMonitorUrlProtocol() int32 {
	if m != nil && m.MonitorUrlProtocol != nil {
		return *m.MonitorUrlProtocol
	}
	return Default_BidRequest_MonitorUrlProtocol
}

func (m *BidRequest) GetClientDirection() int32 {
	if m != nil && m.ClientDirection != nil {
		return *m.ClientDirection
	}
	return Default_BidRequest_ClientDirection
}

func (m *BidRequest) GetSourceId() int32 {
	if m != nil && m.SourceId != nil {
		return *m.SourceId
	}
	return 0
}

func (m *BidRequest) GetSourceChannel() *BidRequest_SourceChannel {
	if m != nil {
		return m.SourceChannel
	}
	return nil
}

func (m *BidRequest) GetIsDebug() bool {
	if m != nil && m.IsDebug != nil {
		return *m.IsDebug
	}
	return Default_BidRequest_IsDebug
}

func (m *BidRequest) GetIsTest() bool {
	if m != nil && m.IsTest != nil {
		return *m.IsTest
	}
	return Default_BidRequest_IsTest
}

type BidRequest_AdSlot struct {
	// 广告位曝光ID
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// 广告位ID
	TagId *string `protobuf:"bytes,2,opt,name=tag_id" json:"tag_id,omitempty"`
	// 曝光底价,单位 千次曝光分
	BidFloor *float32 `protobuf:"fixed32,3,opt,name=bid_floor" json:"bid_floor,omitempty"`
	// 展示类型,文档补足
	SlotType *int32                    `protobuf:"varint,4,opt,name=slot_type" json:"slot_type,omitempty"`
	Size     []*BidRequest_AdSlot_Size `protobuf:"bytes,5,rep,name=size" json:"size,omitempty"`
	// 发布商允许的创意类型,文档补足
	CreativeType []int32 `protobuf:"varint,7,rep,packed,name=creative_type" json:"creative_type,omitempty"`
	// 发布商不允许的landing page url
	ExcludedLandingPageUrl []string `protobuf:"bytes,8,rep,name=excluded_landing_page_url" json:"excluded_landing_page_url,omitempty"`
	// 广告位所处页面第几屏信息0:未知,1:第一屏,2:第二屏,3:第三屏,4:其他屏
	SlotPos *int32 `protobuf:"varint,9,opt,name=slot_pos" json:"slot_pos,omitempty"`
	// pmp相关信息
	PmpInfo []*BidRequest_AdSlot_PmpInfo `protobuf:"bytes,10,rep,name=pmp_info" json:"pmp_info,omitempty"`
	// 视频流量的媒体信息
	Video *BidRequest_AdSlot_Video `protobuf:"bytes,11,opt,name=video" json:"video,omitempty"`
	// 展现监控url数量限制,-1:表示不限制,0:表示不支持,1:表示只能1个,2:表示2个
	ImpMonitorLimit *int32 `protobuf:"varint,12,opt,name=imp_monitor_limit,def=-1" json:"imp_monitor_limit,omitempty"`
	// 点击监控url数量限制,-1:表示不限制,0:表示不支持,1:表示只能1个,2:表示2个
	ClkMonitorLimit *int32                    `protobuf:"varint,13,opt,name=clk_monitor_limit,def=0" json:"clk_monitor_limit,omitempty"`
	Native          *BidRequest_AdSlot_Native `protobuf:"bytes,15,opt,name=native" json:"native,omitempty"`
	// 0:all 1:redirect 2:download
	ClickAction *int32 `protobuf:"varint,18,opt,name=click_action" json:"click_action,omitempty"`
	// 广告的模板id,图文广告或者某些需要的情况下存在
	TemplateId       []int32 `protobuf:"varint,19,rep,name=template_id" json:"template_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BidRequest_AdSlot) Reset()         { *m = BidRequest_AdSlot{} }
func (m *BidRequest_AdSlot) String() string { return proto.CompactTextString(m) }
func (*BidRequest_AdSlot) ProtoMessage()    {}

const Default_BidRequest_AdSlot_ImpMonitorLimit int32 = -1
const Default_BidRequest_AdSlot_ClkMonitorLimit int32 = 0

func (m *BidRequest_AdSlot) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *BidRequest_AdSlot) GetTagId() string {
	if m != nil && m.TagId != nil {
		return *m.TagId
	}
	return ""
}

func (m *BidRequest_AdSlot) GetBidFloor() float32 {
	if m != nil && m.BidFloor != nil {
		return *m.BidFloor
	}
	return 0
}

func (m *BidRequest_AdSlot) GetSlotType() int32 {
	if m != nil && m.SlotType != nil {
		return *m.SlotType
	}
	return 0
}

func (m *BidRequest_AdSlot) GetSize() []*BidRequest_AdSlot_Size {
	if m != nil {
		return m.Size
	}
	return nil
}

func (m *BidRequest_AdSlot) GetCreativeType() []int32 {
	if m != nil {
		return m.CreativeType
	}
	return nil
}

func (m *BidRequest_AdSlot) GetExcludedLandingPageUrl() []string {
	if m != nil {
		return m.ExcludedLandingPageUrl
	}
	return nil
}

func (m *BidRequest_AdSlot) GetSlotPos() int32 {
	if m != nil && m.SlotPos != nil {
		return *m.SlotPos
	}
	return 0
}

func (m *BidRequest_AdSlot) GetPmpInfo() []*BidRequest_AdSlot_PmpInfo {
	if m != nil {
		return m.PmpInfo
	}
	return nil
}

func (m *BidRequest_AdSlot) GetVideo() *BidRequest_AdSlot_Video {
	if m != nil {
		return m.Video
	}
	return nil
}

func (m *BidRequest_AdSlot) GetImpMonitorLimit() int32 {
	if m != nil && m.ImpMonitorLimit != nil {
		return *m.ImpMonitorLimit
	}
	return Default_BidRequest_AdSlot_ImpMonitorLimit
}

func (m *BidRequest_AdSlot) GetClkMonitorLimit() int32 {
	if m != nil && m.ClkMonitorLimit != nil {
		return *m.ClkMonitorLimit
	}
	return Default_BidRequest_AdSlot_ClkMonitorLimit
}

func (m *BidRequest_AdSlot) GetNative() *BidRequest_AdSlot_Native {
	if m != nil {
		return m.Native
	}
	return nil
}

func (m *BidRequest_AdSlot) GetClickAction() int32 {
	if m != nil && m.ClickAction != nil {
		return *m.ClickAction
	}
	return 0
}

func (m *BidRequest_AdSlot) GetTemplateId() []int32 {
	if m != nil {
		return m.TemplateId
	}
	return nil
}

type BidRequest_AdSlot_Size struct {
	// 宽
	Width *int32 `protobuf:"varint,1,opt,name=width" json:"width,omitempty"`
	// 高
	Height           *int32 `protobuf:"varint,2,opt,name=height" json:"height,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BidRequest_AdSlot_Size) Reset()         { *m = BidRequest_AdSlot_Size{} }
func (m *BidRequest_AdSlot_Size) String() string { return proto.CompactTextString(m) }
func (*BidRequest_AdSlot_Size) ProtoMessage()    {}

func (m *BidRequest_AdSlot_Size) GetWidth() int32 {
	if m != nil && m.Width != nil {
		return *m.Width
	}
	return 0
}

func (m *BidRequest_AdSlot_Size) GetHeight() int32 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

type BidRequest_AdSlot_PmpInfo struct {
	// 优先交易id
	OrderId *int32 `protobuf:"varint,1,opt,name=order_id" json:"order_id,omitempty"`
	// 该优先交易的交易价格,单位是分
	BidFloor         *int32 `protobuf:"varint,2,opt,name=bid_floor" json:"bid_floor,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BidRequest_AdSlot_PmpInfo) Reset()         { *m = BidRequest_AdSlot_PmpInfo{} }
func (m *BidRequest_AdSlot_PmpInfo) String() string { return proto.CompactTextString(m) }
func (*BidRequest_AdSlot_PmpInfo) ProtoMessage()    {}

func (m *BidRequest_AdSlot_PmpInfo) GetOrderId() int32 {
	if m != nil && m.OrderId != nil {
		return *m.OrderId
	}
	return 0
}

func (m *BidRequest_AdSlot_PmpInfo) GetBidFloor() int32 {
	if m != nil && m.BidFloor != nil {
		return *m.BidFloor
	}
	return 0
}

type BidRequest_AdSlot_Video struct {
	// 广告视频最短时长,单位秒
	MinDuration *int32 `protobuf:"varint,1,opt,name=min_duration" json:"min_duration,omitempty"`
	// 广告视频最长时长,单位秒
	MaxDuration *int32 `protobuf:"varint,2,opt,name=max_duration" json:"max_duration,omitempty"`
	// 该字段仅在linearity=1时有效;线性贴片,0:前帖;-1:中贴;-2:后贴
	StartDelay *int32 `protobuf:"varint,3,opt,name=start_delay" json:"start_delay,omitempty"`
	// 本次请求的曝光中,需要播放的广告素材数量.只有贴片广告才会带这个字段.
	// 例如repeat=4,表示最后会竞价出4个出价最高的广告素材进行投放.
	// 一般情况下,前贴有可能有1至4贴广告,此时若大于一帖,则repeat=2~4.
	// 同时竞价多贴时可以一个SeatBid,多个Bid
	Repeat *int32 `protobuf:"varint,4,opt,name=repeat" json:"repeat,omitempty"`
	// 最大bit rate
	MaxBitrate *int32 `protobuf:"varint,5,opt,name=max_bitrate" json:"max_bitrate,omitempty"`
	// 是否可以跳过
	CanSkip *int32 `protobuf:"varint,6,opt,name=can_skip" json:"can_skip,omitempty"`
	// 最大文件尺寸
	MaxFilesize      *int32 `protobuf:"varint,7,opt,name=max_filesize" json:"max_filesize,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BidRequest_AdSlot_Video) Reset()         { *m = BidRequest_AdSlot_Video{} }
func (m *BidRequest_AdSlot_Video) String() string { return proto.CompactTextString(m) }
func (*BidRequest_AdSlot_Video) ProtoMessage()    {}

func (m *BidRequest_AdSlot_Video) GetMinDuration() int32 {
	if m != nil && m.MinDuration != nil {
		return *m.MinDuration
	}
	return 0
}

func (m *BidRequest_AdSlot_Video) GetMaxDuration() int32 {
	if m != nil && m.MaxDuration != nil {
		return *m.MaxDuration
	}
	return 0
}

func (m *BidRequest_AdSlot_Video) GetStartDelay() int32 {
	if m != nil && m.StartDelay != nil {
		return *m.StartDelay
	}
	return 0
}

func (m *BidRequest_AdSlot_Video) GetRepeat() int32 {
	if m != nil && m.Repeat != nil {
		return *m.Repeat
	}
	return 0
}

func (m *BidRequest_AdSlot_Video) GetMaxBitrate() int32 {
	if m != nil && m.MaxBitrate != nil {
		return *m.MaxBitrate
	}
	return 0
}

func (m *BidRequest_AdSlot_Video) GetCanSkip() int32 {
	if m != nil && m.CanSkip != nil {
		return *m.CanSkip
	}
	return 0
}

func (m *BidRequest_AdSlot_Video) GetMaxFilesize() int32 {
	if m != nil && m.MaxFilesize != nil {
		return *m.MaxFilesize
	}
	return 0
}

type BidRequest_AdSlot_Native struct {
	Asset            []*BidRequest_AdSlot_Native_Asset `protobuf:"bytes,2,rep,name=asset" json:"asset,omitempty"`
	XXX_unrecognized []byte                            `json:"-"`
}

func (m *BidRequest_AdSlot_Native) Reset()         { *m = BidRequest_AdSlot_Native{} }
func (m *BidRequest_AdSlot_Native) String() string { return proto.CompactTextString(m) }
func (*BidRequest_AdSlot_Native) ProtoMessage()    {}

func (m *BidRequest_AdSlot_Native) GetAsset() []*BidRequest_AdSlot_Native_Asset {
	if m != nil {
		return m.Asset
	}
	return nil
}

type BidRequest_AdSlot_Native_Asset struct {
	Id               *int32                                     `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Type             *BidRequest_AdSlot_Native_Asset_NativeType `protobuf:"varint,2,opt,name=type,enum=ftx.BidRequest_AdSlot_Native_Asset_NativeType" json:"type,omitempty"`
	Image            *BidRequest_AdSlot_Native_Asset_Image      `protobuf:"bytes,3,opt,name=image" json:"image,omitempty"`
	Text             *BidRequest_AdSlot_Native_Asset_Text       `protobuf:"bytes,4,opt,name=text" json:"text,omitempty"`
	Video            *BidRequest_AdSlot_Native_Asset_Video      `protobuf:"bytes,5,opt,name=video" json:"video,omitempty"`
	XXX_unrecognized []byte                                     `json:"-"`
}

func (m *BidRequest_AdSlot_Native_Asset) Reset()         { *m = BidRequest_AdSlot_Native_Asset{} }
func (m *BidRequest_AdSlot_Native_Asset) String() string { return proto.CompactTextString(m) }
func (*BidRequest_AdSlot_Native_Asset) ProtoMessage()    {}

func (m *BidRequest_AdSlot_Native_Asset) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *BidRequest_AdSlot_Native_Asset) GetType() BidRequest_AdSlot_Native_Asset_NativeType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return BidRequest_AdSlot_Native_Asset_NATIVE_TITLE
}

func (m *BidRequest_AdSlot_Native_Asset) GetImage() *BidRequest_AdSlot_Native_Asset_Image {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *BidRequest_AdSlot_Native_Asset) GetText() *BidRequest_AdSlot_Native_Asset_Text {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *BidRequest_AdSlot_Native_Asset) GetVideo() *BidRequest_AdSlot_Native_Asset_Video {
	if m != nil {
		return m.Video
	}
	return nil
}

type BidRequest_AdSlot_Native_Asset_Text struct {
	// 文字
	MaxLength        *int32 `protobuf:"varint,1,opt,name=max_length" json:"max_length,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BidRequest_AdSlot_Native_Asset_Text) Reset()         { *m = BidRequest_AdSlot_Native_Asset_Text{} }
func (m *BidRequest_AdSlot_Native_Asset_Text) String() string { return proto.CompactTextString(m) }
func (*BidRequest_AdSlot_Native_Asset_Text) ProtoMessage()    {}

func (m *BidRequest_AdSlot_Native_Asset_Text) GetMaxLength() int32 {
	if m != nil && m.MaxLength != nil {
		return *m.MaxLength
	}
	return 0
}

type BidRequest_AdSlot_Native_Asset_Video struct {
	MinDuration      *int32 `protobuf:"varint,1,opt,name=min_duration" json:"min_duration,omitempty"`
	MaxDuration      *int32 `protobuf:"varint,2,opt,name=max_duration" json:"max_duration,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BidRequest_AdSlot_Native_Asset_Video) Reset()         { *m = BidRequest_AdSlot_Native_Asset_Video{} }
func (m *BidRequest_AdSlot_Native_Asset_Video) String() string { return proto.CompactTextString(m) }
func (*BidRequest_AdSlot_Native_Asset_Video) ProtoMessage()    {}

func (m *BidRequest_AdSlot_Native_Asset_Video) GetMinDuration() int32 {
	if m != nil && m.MinDuration != nil {
		return *m.MinDuration
	}
	return 0
}

func (m *BidRequest_AdSlot_Native_Asset_Video) GetMaxDuration() int32 {
	if m != nil && m.MaxDuration != nil {
		return *m.MaxDuration
	}
	return 0
}

type BidRequest_AdSlot_Native_Asset_Image struct {
	// 图片url
	Width            *int32 `protobuf:"varint,1,opt,name=width" json:"width,omitempty"`
	Height           *int32 `protobuf:"varint,2,opt,name=height" json:"height,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BidRequest_AdSlot_Native_Asset_Image) Reset()         { *m = BidRequest_AdSlot_Native_Asset_Image{} }
func (m *BidRequest_AdSlot_Native_Asset_Image) String() string { return proto.CompactTextString(m) }
func (*BidRequest_AdSlot_Native_Asset_Image) ProtoMessage()    {}

func (m *BidRequest_AdSlot_Native_Asset_Image) GetWidth() int32 {
	if m != nil && m.Width != nil {
		return *m.Width
	}
	return 0
}

func (m *BidRequest_AdSlot_Native_Asset_Image) GetHeight() int32 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

type BidRequest_User struct {
	// 用户的id号
	UserId *string `protobuf:"bytes,1,opt,name=user_id" json:"user_id,omitempty"`
	// cookie的版本号
	UserIdVersion *uint32 `protobuf:"varint,2,opt,name=user_id_version" json:"user_id_version,omitempty"`
	// 流量来源id，后续请使用外层source_id,此字段不再填充值
	SourceId *int32 `protobuf:"varint,3,opt,name=source_id" json:"source_id,omitempty"`
	// 流量来源第三方cookie值,根据source_id的值不同表征cookie所属三方
	ThirdUserId *string `protobuf:"bytes,4,opt,name=third_user_id" json:"third_user_id,omitempty"`
	// 用户分类,文档补足
	UserCategory     []int64 `protobuf:"varint,5,rep,name=user_category" json:"user_category,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BidRequest_User) Reset()         { *m = BidRequest_User{} }
func (m *BidRequest_User) String() string { return proto.CompactTextString(m) }
func (*BidRequest_User) ProtoMessage()    {}

func (m *BidRequest_User) GetUserId() string {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return ""
}

func (m *BidRequest_User) GetUserIdVersion() uint32 {
	if m != nil && m.UserIdVersion != nil {
		return *m.UserIdVersion
	}
	return 0
}

func (m *BidRequest_User) GetSourceId() int32 {
	if m != nil && m.SourceId != nil {
		return *m.SourceId
	}
	return 0
}

func (m *BidRequest_User) GetThirdUserId() string {
	if m != nil && m.ThirdUserId != nil {
		return *m.ThirdUserId
	}
	return ""
}

func (m *BidRequest_User) GetUserCategory() []int64 {
	if m != nil {
		return m.UserCategory
	}
	return nil
}

type BidRequest_Site struct {
	// 当前页面URL
	Url *string `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	// 请求的refer
	Referer *string `protobuf:"bytes,2,opt,name=referer" json:"referer,omitempty"`
	// 页面语言类型
	Language *string `protobuf:"bytes,3,opt,name=language" json:"language,omitempty"`
	// 页面分类,文档补足
	PageCategory []int32 `protobuf:"varint,4,rep,name=page_category" json:"page_category,omitempty"`
	// 页面关键词
	PageKeyword []string `protobuf:"bytes,5,rep,name=page_keyword" json:"page_keyword,omitempty"`
	// 发布商不允许的广告行业,文档补足
	ExcludedProductCategory []int32 `protobuf:"varint,6,rep,packed,name=excluded_product_category" json:"excluded_product_category,omitempty"`
	// 视频的内容相关信息.只有视频贴片类型的广告位才会有这个字段
	VideoContent     *BidRequest_Site_VideoContent `protobuf:"bytes,7,opt,name=video_content" json:"video_content,omitempty"`
	CountryCode      *string                       `protobuf:"bytes,8,opt,name=country_code" json:"country_code,omitempty"`
	XXX_unrecognized []byte                        `json:"-"`
}

func (m *BidRequest_Site) Reset()         { *m = BidRequest_Site{} }
func (m *BidRequest_Site) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Site) ProtoMessage()    {}

func (m *BidRequest_Site) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *BidRequest_Site) GetReferer() string {
	if m != nil && m.Referer != nil {
		return *m.Referer
	}
	return ""
}

func (m *BidRequest_Site) GetLanguage() string {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return ""
}

func (m *BidRequest_Site) GetPageCategory() []int32 {
	if m != nil {
		return m.PageCategory
	}
	return nil
}

func (m *BidRequest_Site) GetPageKeyword() []string {
	if m != nil {
		return m.PageKeyword
	}
	return nil
}

func (m *BidRequest_Site) GetExcludedProductCategory() []int32 {
	if m != nil {
		return m.ExcludedProductCategory
	}
	return nil
}

func (m *BidRequest_Site) GetVideoContent() *BidRequest_Site_VideoContent {
	if m != nil {
		return m.VideoContent
	}
	return nil
}

func (m *BidRequest_Site) GetCountryCode() string {
	if m != nil && m.CountryCode != nil {
		return *m.CountryCode
	}
	return ""
}

type BidRequest_Site_VideoContent struct {
	// 视频的标题
	Title *string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	// 视频标签关键字
	VideoKeyword []string `protobuf:"bytes,2,rep,name=video_keyword" json:"video_keyword,omitempty"`
	// 频道id和页面分类相同
	ChannelId []int64 `protobuf:"varint,3,rep,name=channel_id" json:"channel_id,omitempty"`
	// 视频的播放时长
	VideoLength      *int32 `protobuf:"varint,4,opt,name=video_length" json:"video_length,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BidRequest_Site_VideoContent) Reset()         { *m = BidRequest_Site_VideoContent{} }
func (m *BidRequest_Site_VideoContent) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Site_VideoContent) ProtoMessage()    {}

func (m *BidRequest_Site_VideoContent) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *BidRequest_Site_VideoContent) GetVideoKeyword() []string {
	if m != nil {
		return m.VideoKeyword
	}
	return nil
}

func (m *BidRequest_Site_VideoContent) GetChannelId() []int64 {
	if m != nil {
		return m.ChannelId
	}
	return nil
}

func (m *BidRequest_Site_VideoContent) GetVideoLength() int32 {
	if m != nil && m.VideoLength != nil {
		return *m.VideoLength
	}
	return 0
}

type BidRequest_Mobile struct {
	// 设备操作系统,文档补足
	Os *int32 `protobuf:"varint,1,opt,name=os" json:"os,omitempty"`
	// 设备操作系统版本，如"3.1.2"
	OsVersion *string `protobuf:"bytes,2,opt,name=os_version" json:"os_version,omitempty"`
	// 纬度,取值从-90到90，南为负值
	Latitude *float32 `protobuf:"fixed32,3,opt,name=latitude" json:"latitude,omitempty"`
	// 经度,取值从-180到180，西为负值
	Longitude *float32 `protobuf:"fixed32,4,opt,name=longitude" json:"longitude,omitempty"`
	// 设备屏宽
	ScreenWidth *int32 `protobuf:"varint,5,opt,name=screen_width" json:"screen_width,omitempty"`
	// 设备屏高
	ScreenHeight *int32 `protobuf:"varint,6,opt,name=screen_height" json:"screen_height,omitempty"`
	// 流量源,0:未识别,1:APP,2:WAP
	Source *int32 `protobuf:"varint,7,opt,name=source" json:"source,omitempty"`
	// idfa,默认不加密, (如果以MD5方式加密，MD5(idfa)转大写)
	Idfa *string `protobuf:"bytes,8,opt,name=idfa" json:"idfa,omitempty"`
	// idfa加密方式, 0: 明文，1:MD5, 2:SHA1, 默认填0
	IdfaEnc *uint32 `protobuf:"varint,9,opt,name=idfa_enc" json:"idfa_enc,omitempty"`
	Imei    *string `protobuf:"bytes,10,opt,name=imei" json:"imei,omitempty"`
	// imei加密方式, 0: 明文，1:MD5, 2:SHA1, 默认填0
	ImeiEnc *uint32 `protobuf:"varint,11,opt,name=imei_enc" json:"imei_enc,omitempty"`
	// 加密后的androidid, MD5(androidid)转大写
	AndroidId *string `protobuf:"bytes,12,opt,name=android_id" json:"android_id,omitempty"`
	// imei加密方式, 0: 明文，1:MD5, 2:SHA1, 默认填0
	AndroidIdEnc *uint32 `protobuf:"varint,13,opt,name=android_id_enc" json:"android_id_enc,omitempty"`
	// 终端网卡MAC地址去除冒号分隔符,加密后的mac, MD5(mac)转大写,加密前先进行格式转换去除冒号分隔符
	Mac *string `protobuf:"bytes,14,opt,name=mac" json:"mac,omitempty"`
	// mac加密方式, 0: 明文，1:MD5, 2:SHA1, 默认填0
	MacEnc *uint32 `protobuf:"varint,15,opt,name=mac_enc" json:"mac_enc,omitempty"`
	// Openudid, 默认不加密
	Openudid *string `protobuf:"bytes,16,opt,name=openudid" json:"openudid,omitempty"`
	// 设备品牌(小写),如：samsung,nokia
	Brand *string `protobuf:"bytes,17,opt,name=brand" json:"brand,omitempty"`
	// 设备型号(首字母大写),如:N70, Galaxy
	Model *string `protobuf:"bytes,18,opt,name=model" json:"model,omitempty"`
	// 运营商标识,文档补足
	CarrierId *int32 `protobuf:"varint,19,opt,name=carrier_id" json:"carrier_id,omitempty"`
	// 连接类型,文档补足
	ConnectionType *uint32 `protobuf:"varint,20,opt,name=connection_type" json:"connection_type,omitempty"`
	// 应用名称
	AppName *string `protobuf:"bytes,21,opt,name=app_name" json:"app_name,omitempty"`
	// 如果来自苹果商店，则直接是app-store id
	// 如果来自Android设备，则是package的全名
	AppBundleId *string `protobuf:"bytes,22,opt,name=app_bundle_id" json:"app_bundle_id,omitempty"`
	// app的行业分类
	AppCategory *int32 `protobuf:"varint,23,opt,name=app_category" json:"app_category,omitempty"`
	// App开发者ID
	AppPublisherId *int32 `protobuf:"varint,24,opt,name=app_publisher_id" json:"app_publisher_id,omitempty"`
	// 屏幕密度，一个逻辑像素等于几个实际像素
	ScreenDensity *float64 `protobuf:"fixed64,25,opt,name=screen_density" json:"screen_density,omitempty"`
	// 应用版本
	AppVersion *string `protobuf:"bytes,26,opt,name=app_version" json:"app_version,omitempty"`
	// SDK版本
	SdkVersion *string `protobuf:"bytes,27,opt,name=sdk_version" json:"sdk_version,omitempty"`
	// 应用id
	AppId            *string `protobuf:"bytes,28,opt,name=app_id" json:"app_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BidRequest_Mobile) Reset()         { *m = BidRequest_Mobile{} }
func (m *BidRequest_Mobile) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Mobile) ProtoMessage()    {}

func (m *BidRequest_Mobile) GetOs() int32 {
	if m != nil && m.Os != nil {
		return *m.Os
	}
	return 0
}

func (m *BidRequest_Mobile) GetOsVersion() string {
	if m != nil && m.OsVersion != nil {
		return *m.OsVersion
	}
	return ""
}

func (m *BidRequest_Mobile) GetLatitude() float32 {
	if m != nil && m.Latitude != nil {
		return *m.Latitude
	}
	return 0
}

func (m *BidRequest_Mobile) GetLongitude() float32 {
	if m != nil && m.Longitude != nil {
		return *m.Longitude
	}
	return 0
}

func (m *BidRequest_Mobile) GetScreenWidth() int32 {
	if m != nil && m.ScreenWidth != nil {
		return *m.ScreenWidth
	}
	return 0
}

func (m *BidRequest_Mobile) GetScreenHeight() int32 {
	if m != nil && m.ScreenHeight != nil {
		return *m.ScreenHeight
	}
	return 0
}

func (m *BidRequest_Mobile) GetSource() int32 {
	if m != nil && m.Source != nil {
		return *m.Source
	}
	return 0
}

func (m *BidRequest_Mobile) GetIdfa() string {
	if m != nil && m.Idfa != nil {
		return *m.Idfa
	}
	return ""
}

func (m *BidRequest_Mobile) GetIdfaEnc() uint32 {
	if m != nil && m.IdfaEnc != nil {
		return *m.IdfaEnc
	}
	return 0
}

func (m *BidRequest_Mobile) GetImei() string {
	if m != nil && m.Imei != nil {
		return *m.Imei
	}
	return ""
}

func (m *BidRequest_Mobile) GetImeiEnc() uint32 {
	if m != nil && m.ImeiEnc != nil {
		return *m.ImeiEnc
	}
	return 0
}

func (m *BidRequest_Mobile) GetAndroidId() string {
	if m != nil && m.AndroidId != nil {
		return *m.AndroidId
	}
	return ""
}

func (m *BidRequest_Mobile) GetAndroidIdEnc() uint32 {
	if m != nil && m.AndroidIdEnc != nil {
		return *m.AndroidIdEnc
	}
	return 0
}

func (m *BidRequest_Mobile) GetMac() string {
	if m != nil && m.Mac != nil {
		return *m.Mac
	}
	return ""
}

func (m *BidRequest_Mobile) GetMacEnc() uint32 {
	if m != nil && m.MacEnc != nil {
		return *m.MacEnc
	}
	return 0
}

func (m *BidRequest_Mobile) GetOpenudid() string {
	if m != nil && m.Openudid != nil {
		return *m.Openudid
	}
	return ""
}

func (m *BidRequest_Mobile) GetBrand() string {
	if m != nil && m.Brand != nil {
		return *m.Brand
	}
	return ""
}

func (m *BidRequest_Mobile) GetModel() string {
	if m != nil && m.Model != nil {
		return *m.Model
	}
	return ""
}

func (m *BidRequest_Mobile) GetCarrierId() int32 {
	if m != nil && m.CarrierId != nil {
		return *m.CarrierId
	}
	return 0
}

func (m *BidRequest_Mobile) GetConnectionType() uint32 {
	if m != nil && m.ConnectionType != nil {
		return *m.ConnectionType
	}
	return 0
}

func (m *BidRequest_Mobile) GetAppName() string {
	if m != nil && m.AppName != nil {
		return *m.AppName
	}
	return ""
}

func (m *BidRequest_Mobile) GetAppBundleId() string {
	if m != nil && m.AppBundleId != nil {
		return *m.AppBundleId
	}
	return ""
}

func (m *BidRequest_Mobile) GetAppCategory() int32 {
	if m != nil && m.AppCategory != nil {
		return *m.AppCategory
	}
	return 0
}

func (m *BidRequest_Mobile) GetAppPublisherId() int32 {
	if m != nil && m.AppPublisherId != nil {
		return *m.AppPublisherId
	}
	return 0
}

func (m *BidRequest_Mobile) GetScreenDensity() float64 {
	if m != nil && m.ScreenDensity != nil {
		return *m.ScreenDensity
	}
	return 0
}

func (m *BidRequest_Mobile) GetAppVersion() string {
	if m != nil && m.AppVersion != nil {
		return *m.AppVersion
	}
	return ""
}

func (m *BidRequest_Mobile) GetSdkVersion() string {
	if m != nil && m.SdkVersion != nil {
		return *m.SdkVersion
	}
	return ""
}

func (m *BidRequest_Mobile) GetAppId() string {
	if m != nil && m.AppId != nil {
		return *m.AppId
	}
	return ""
}

// 流量来源方，分配的频道信息
type BidRequest_SourceChannel struct {
	// 一级频道信息
	FirstChannel []string `protobuf:"bytes,1,rep,name=first_channel" json:"first_channel,omitempty"`
	// 二级频道信息
	SecondChannel    []string `protobuf:"bytes,2,rep,name=second_channel" json:"second_channel,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *BidRequest_SourceChannel) Reset()         { *m = BidRequest_SourceChannel{} }
func (m *BidRequest_SourceChannel) String() string { return proto.CompactTextString(m) }
func (*BidRequest_SourceChannel) ProtoMessage()    {}

func (m *BidRequest_SourceChannel) GetFirstChannel() []string {
	if m != nil {
		return m.FirstChannel
	}
	return nil
}

func (m *BidRequest_SourceChannel) GetSecondChannel() []string {
	if m != nil {
		return m.SecondChannel
	}
	return nil
}

// BidResponse是竞价方收到广告请求时返回给系统的响应信息，该信息中包含了竞价信息和展示广告的相关信息
type BidResponse struct {
	// 与REQUEST中的id一致，否则会被认为无效。
	Id *string `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	// DSP给出的该次竞价的ID
	BidId *string `protobuf:"bytes,2,opt,name=bid_id" json:"bid_id,omitempty"`
	// 回复参与竞价信息,一次竞价多个adslot,目前仅支持一次竞价一个adslot
	SeatBid          []*BidResponse_SeatBid `protobuf:"bytes,3,rep,name=seat_bid" json:"seat_bid,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *BidResponse) Reset()         { *m = BidResponse{} }
func (m *BidResponse) String() string { return proto.CompactTextString(m) }
func (*BidResponse) ProtoMessage()    {}

func (m *BidResponse) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *BidResponse) GetBidId() string {
	if m != nil && m.BidId != nil {
		return *m.BidId
	}
	return ""
}

func (m *BidResponse) GetSeatBid() []*BidResponse_SeatBid {
	if m != nil {
		return m.SeatBid
	}
	return nil
}

type BidResponse_Bid struct {
	// 广告位顺序ID,对应BidRequest.AdSlot.id
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// DSP对该次出价分配的ID
	DspImpId *string `protobuf:"bytes,2,opt,name=dsp_imp_id" json:"dsp_imp_id,omitempty"`
	// 广告位ID
	TagId *string `protobuf:"bytes,3,opt,name=tag_id" json:"tag_id,omitempty"`
	// 本系统审核的时候分配给竞价方的创意ID号,每个创意必须有一个创意ID号，每个创意ID号只能绑定给一个创意。
	CreativeId *int32 `protobuf:"varint,4,req,name=creative_id" json:"creative_id,omitempty"`
	// 仅动态创意需要填充,暂不支持
	HtmlSnippet *string `protobuf:"bytes,5,opt,name=html_snippet" json:"html_snippet,omitempty"`
	// 出价,单位千次曝光分
	Price *int32 `protobuf:"varint,6,req,name=price" json:"price,omitempty"`
	// 广告主id.动态创意及关键词需要填充
	// 动态创意要求一个html snippet的所有广告属于同一个广告主。
	AdvertiserId *uint64 `protobuf:"varint,7,opt,name=advertiser_id" json:"advertiser_id,omitempty"`
	// 物料尺寸 - 宽度.需与请求中的尺寸一致
	Width *int32 `protobuf:"varint,8,opt,name=width" json:"width,omitempty"`
	// 物料尺寸 - 高度.需与请求中的尺寸一致
	Height *int32 `protobuf:"varint,9,opt,name=height" json:"height,omitempty"`
	// 视频贴片时长,物料类型为视频贴片时需要填充
	VideoDuration *int32 `protobuf:"varint,10,opt,name=video_duration,def=0" json:"video_duration,omitempty"`
	Bitrate       *int32 `protobuf:"varint,25,opt,name=bitrate" json:"bitrate,omitempty"`
	// 创意所属行业的行业id,本字段的意义与静态创意中入库物料所需
	// 行业id相同
	Category *int32 `protobuf:"varint,11,opt,name=category" json:"category,omitempty"`
	// 创意的物料类型
	CreativeType *int32 `protobuf:"varint,12,opt,name=creative_type" json:"creative_type,omitempty"`
	// 广告素材URL
	MaterialUrl *string `protobuf:"bytes,14,opt,name=material_url" json:"material_url,omitempty"`
	// 参于优先竞价的id
	OrderId *int32 `protobuf:"varint,18,opt,name=order_id" json:"order_id,omitempty"`
	// dsp自定义宏,用于替换曝光,点击和winnotice中的__EXT__
	ExtData          *string `protobuf:"bytes,19,opt,name=ext_data" json:"ext_data,omitempty"`
	Title            *string `protobuf:"bytes,21,opt,name=title" json:"title,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BidResponse_Bid) Reset()         { *m = BidResponse_Bid{} }
func (m *BidResponse_Bid) String() string { return proto.CompactTextString(m) }
func (*BidResponse_Bid) ProtoMessage()    {}

const Default_BidResponse_Bid_VideoDuration int32 = 0

func (m *BidResponse_Bid) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *BidResponse_Bid) GetDspImpId() string {
	if m != nil && m.DspImpId != nil {
		return *m.DspImpId
	}
	return ""
}

func (m *BidResponse_Bid) GetTagId() string {
	if m != nil && m.TagId != nil {
		return *m.TagId
	}
	return ""
}

func (m *BidResponse_Bid) GetCreativeId() int32 {
	if m != nil && m.CreativeId != nil {
		return *m.CreativeId
	}
	return 0
}

func (m *BidResponse_Bid) GetHtmlSnippet() string {
	if m != nil && m.HtmlSnippet != nil {
		return *m.HtmlSnippet
	}
	return ""
}

func (m *BidResponse_Bid) GetPrice() int32 {
	if m != nil && m.Price != nil {
		return *m.Price
	}
	return 0
}

func (m *BidResponse_Bid) GetAdvertiserId() uint64 {
	if m != nil && m.AdvertiserId != nil {
		return *m.AdvertiserId
	}
	return 0
}

func (m *BidResponse_Bid) GetWidth() int32 {
	if m != nil && m.Width != nil {
		return *m.Width
	}
	return 0
}

func (m *BidResponse_Bid) GetHeight() int32 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

func (m *BidResponse_Bid) GetVideoDuration() int32 {
	if m != nil && m.VideoDuration != nil {
		return *m.VideoDuration
	}
	return Default_BidResponse_Bid_VideoDuration
}

func (m *BidResponse_Bid) GetBitrate() int32 {
	if m != nil && m.Bitrate != nil {
		return *m.Bitrate
	}
	return 0
}

func (m *BidResponse_Bid) GetCategory() int32 {
	if m != nil && m.Category != nil {
		return *m.Category
	}
	return 0
}

func (m *BidResponse_Bid) GetCreativeType() int32 {
	if m != nil && m.CreativeType != nil {
		return *m.CreativeType
	}
	return 0
}

func (m *BidResponse_Bid) GetMaterialUrl() string {
	if m != nil && m.MaterialUrl != nil {
		return *m.MaterialUrl
	}
	return ""
}

func (m *BidResponse_Bid) GetOrderId() int32 {
	if m != nil && m.OrderId != nil {
		return *m.OrderId
	}
	return 0
}

func (m *BidResponse_Bid) GetExtData() string {
	if m != nil && m.ExtData != nil {
		return *m.ExtData
	}
	return ""
}

func (m *BidResponse_Bid) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

type BidResponse_SeatBid struct {
	// 一个adslot可以有多个bid,竞价多贴
	Bid              []*BidResponse_Bid `protobuf:"bytes,1,rep,name=bid" json:"bid,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *BidResponse_SeatBid) Reset()         { *m = BidResponse_SeatBid{} }
func (m *BidResponse_SeatBid) String() string { return proto.CompactTextString(m) }
func (*BidResponse_SeatBid) ProtoMessage()    {}

func (m *BidResponse_SeatBid) GetBid() []*BidResponse_Bid {
	if m != nil {
		return m.Bid
	}
	return nil
}

func init() {
	proto.RegisterType((*BidRequest)(nil), "ftx.BidRequest")
	proto.RegisterType((*BidRequest_AdSlot)(nil), "ftx.BidRequest.AdSlot")
	proto.RegisterType((*BidRequest_AdSlot_Size)(nil), "ftx.BidRequest.AdSlot.Size")
	proto.RegisterType((*BidRequest_AdSlot_PmpInfo)(nil), "ftx.BidRequest.AdSlot.PmpInfo")
	proto.RegisterType((*BidRequest_AdSlot_Video)(nil), "ftx.BidRequest.AdSlot.Video")
	proto.RegisterType((*BidRequest_AdSlot_Native)(nil), "ftx.BidRequest.AdSlot.Native")
	proto.RegisterType((*BidRequest_AdSlot_Native_Asset)(nil), "ftx.BidRequest.AdSlot.Native.Asset")
	proto.RegisterType((*BidRequest_AdSlot_Native_Asset_Text)(nil), "ftx.BidRequest.AdSlot.Native.Asset.Text")
	proto.RegisterType((*BidRequest_AdSlot_Native_Asset_Video)(nil), "ftx.BidRequest.AdSlot.Native.Asset.Video")
	proto.RegisterType((*BidRequest_AdSlot_Native_Asset_Image)(nil), "ftx.BidRequest.AdSlot.Native.Asset.Image")
	proto.RegisterType((*BidRequest_User)(nil), "ftx.BidRequest.User")
	proto.RegisterType((*BidRequest_Site)(nil), "ftx.BidRequest.Site")
	proto.RegisterType((*BidRequest_Site_VideoContent)(nil), "ftx.BidRequest.Site.VideoContent")
	proto.RegisterType((*BidRequest_Mobile)(nil), "ftx.BidRequest.Mobile")
	proto.RegisterType((*BidRequest_SourceChannel)(nil), "ftx.BidRequest.SourceChannel")
	proto.RegisterType((*BidResponse)(nil), "ftx.BidResponse")
	proto.RegisterType((*BidResponse_Bid)(nil), "ftx.BidResponse.Bid")
	proto.RegisterType((*BidResponse_SeatBid)(nil), "ftx.BidResponse.SeatBid")
	proto.RegisterEnum("ftx.BidRequest_AdSlot_Native_Asset_NativeType", BidRequest_AdSlot_Native_Asset_NativeType_name, BidRequest_AdSlot_Native_Asset_NativeType_value)
	proto.RegisterEnum("ftx.BidRequest_Mobile_IDEnc", BidRequest_Mobile_IDEnc_name, BidRequest_Mobile_IDEnc_value)
}
